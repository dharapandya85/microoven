

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Feb 28 21:15:37 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,space=0,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 22/03/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0004                     fsr             equ	4
    78     0004                     fsr0            equ	4
    79     0000                     indf            equ	0
    80     0000                     indf0           equ	0
    81     0002                     pc              equ	2
    82     0002                     pcl             equ	2
    83     000A                     pclath          equ	10
    84     0003                     status          equ	3
    85     0000                     INDF            equ	0	;# 
    86     0001                     TMR0            equ	1	;# 
    87     0002                     PCL             equ	2	;# 
    88     0003                     STATUS          equ	3	;# 
    89     0004                     FSR             equ	4	;# 
    90     0005                     PORTA           equ	5	;# 
    91     0006                     PORTB           equ	6	;# 
    92     0007                     PORTC           equ	7	;# 
    93     0008                     PORTD           equ	8	;# 
    94     0009                     PORTE           equ	9	;# 
    95     000A                     PCLATH          equ	10	;# 
    96     000B                     INTCON          equ	11	;# 
    97     000C                     PIR1            equ	12	;# 
    98     000D                     PIR2            equ	13	;# 
    99     000E                     TMR1            equ	14	;# 
   100     000E                     TMR1L           equ	14	;# 
   101     000F                     TMR1H           equ	15	;# 
   102     0010                     T1CON           equ	16	;# 
   103     0011                     TMR2            equ	17	;# 
   104     0012                     T2CON           equ	18	;# 
   105     0013                     SSPBUF          equ	19	;# 
   106     0014                     SSPCON          equ	20	;# 
   107     0015                     CCPR1           equ	21	;# 
   108     0015                     CCPR1L          equ	21	;# 
   109     0016                     CCPR1H          equ	22	;# 
   110     0017                     CCP1CON         equ	23	;# 
   111     0018                     RCSTA           equ	24	;# 
   112     0019                     TXREG           equ	25	;# 
   113     001A                     RCREG           equ	26	;# 
   114     001B                     CCPR2           equ	27	;# 
   115     001B                     CCPR2L          equ	27	;# 
   116     001C                     CCPR2H          equ	28	;# 
   117     001D                     CCP2CON         equ	29	;# 
   118     001E                     ADRESH          equ	30	;# 
   119     001F                     ADCON0          equ	31	;# 
   120     0081                     OPTION_REG      equ	129	;# 
   121     0085                     TRISA           equ	133	;# 
   122     0086                     TRISB           equ	134	;# 
   123     0087                     TRISC           equ	135	;# 
   124     0088                     TRISD           equ	136	;# 
   125     0089                     TRISE           equ	137	;# 
   126     008C                     PIE1            equ	140	;# 
   127     008D                     PIE2            equ	141	;# 
   128     008E                     PCON            equ	142	;# 
   129     0091                     SSPCON2         equ	145	;# 
   130     0092                     PR2             equ	146	;# 
   131     0093                     SSPADD          equ	147	;# 
   132     0094                     SSPSTAT         equ	148	;# 
   133     0098                     TXSTA           equ	152	;# 
   134     0099                     SPBRG           equ	153	;# 
   135     009C                     CMCON           equ	156	;# 
   136     009D                     CVRCON          equ	157	;# 
   137     009E                     ADRESL          equ	158	;# 
   138     009F                     ADCON1          equ	159	;# 
   139     010C                     EEDATA          equ	268	;# 
   140     010D                     EEADR           equ	269	;# 
   141     010E                     EEDATH          equ	270	;# 
   142     010F                     EEADRH          equ	271	;# 
   143     018C                     EECON1          equ	396	;# 
   144     018D                     EECON2          equ	397	;# 
   145     0000                     INDF            equ	0	;# 
   146     0001                     TMR0            equ	1	;# 
   147     0002                     PCL             equ	2	;# 
   148     0003                     STATUS          equ	3	;# 
   149     0004                     FSR             equ	4	;# 
   150     0005                     PORTA           equ	5	;# 
   151     0006                     PORTB           equ	6	;# 
   152     0007                     PORTC           equ	7	;# 
   153     0008                     PORTD           equ	8	;# 
   154     0009                     PORTE           equ	9	;# 
   155     000A                     PCLATH          equ	10	;# 
   156     000B                     INTCON          equ	11	;# 
   157     000C                     PIR1            equ	12	;# 
   158     000D                     PIR2            equ	13	;# 
   159     000E                     TMR1            equ	14	;# 
   160     000E                     TMR1L           equ	14	;# 
   161     000F                     TMR1H           equ	15	;# 
   162     0010                     T1CON           equ	16	;# 
   163     0011                     TMR2            equ	17	;# 
   164     0012                     T2CON           equ	18	;# 
   165     0013                     SSPBUF          equ	19	;# 
   166     0014                     SSPCON          equ	20	;# 
   167     0015                     CCPR1           equ	21	;# 
   168     0015                     CCPR1L          equ	21	;# 
   169     0016                     CCPR1H          equ	22	;# 
   170     0017                     CCP1CON         equ	23	;# 
   171     0018                     RCSTA           equ	24	;# 
   172     0019                     TXREG           equ	25	;# 
   173     001A                     RCREG           equ	26	;# 
   174     001B                     CCPR2           equ	27	;# 
   175     001B                     CCPR2L          equ	27	;# 
   176     001C                     CCPR2H          equ	28	;# 
   177     001D                     CCP2CON         equ	29	;# 
   178     001E                     ADRESH          equ	30	;# 
   179     001F                     ADCON0          equ	31	;# 
   180     0081                     OPTION_REG      equ	129	;# 
   181     0085                     TRISA           equ	133	;# 
   182     0086                     TRISB           equ	134	;# 
   183     0087                     TRISC           equ	135	;# 
   184     0088                     TRISD           equ	136	;# 
   185     0089                     TRISE           equ	137	;# 
   186     008C                     PIE1            equ	140	;# 
   187     008D                     PIE2            equ	141	;# 
   188     008E                     PCON            equ	142	;# 
   189     0091                     SSPCON2         equ	145	;# 
   190     0092                     PR2             equ	146	;# 
   191     0093                     SSPADD          equ	147	;# 
   192     0094                     SSPSTAT         equ	148	;# 
   193     0098                     TXSTA           equ	152	;# 
   194     0099                     SPBRG           equ	153	;# 
   195     009C                     CMCON           equ	156	;# 
   196     009D                     CVRCON          equ	157	;# 
   197     009E                     ADRESL          equ	158	;# 
   198     009F                     ADCON1          equ	159	;# 
   199     010C                     EEDATA          equ	268	;# 
   200     010D                     EEADR           equ	269	;# 
   201     010E                     EEDATH          equ	270	;# 
   202     010F                     EEADRH          equ	271	;# 
   203     018C                     EECON1          equ	396	;# 
   204     018D                     EECON2          equ	397	;# 
   205     0000                     INDF            equ	0	;# 
   206     0001                     TMR0            equ	1	;# 
   207     0002                     PCL             equ	2	;# 
   208     0003                     STATUS          equ	3	;# 
   209     0004                     FSR             equ	4	;# 
   210     0005                     PORTA           equ	5	;# 
   211     0006                     PORTB           equ	6	;# 
   212     0007                     PORTC           equ	7	;# 
   213     0008                     PORTD           equ	8	;# 
   214     0009                     PORTE           equ	9	;# 
   215     000A                     PCLATH          equ	10	;# 
   216     000B                     INTCON          equ	11	;# 
   217     000C                     PIR1            equ	12	;# 
   218     000D                     PIR2            equ	13	;# 
   219     000E                     TMR1            equ	14	;# 
   220     000E                     TMR1L           equ	14	;# 
   221     000F                     TMR1H           equ	15	;# 
   222     0010                     T1CON           equ	16	;# 
   223     0011                     TMR2            equ	17	;# 
   224     0012                     T2CON           equ	18	;# 
   225     0013                     SSPBUF          equ	19	;# 
   226     0014                     SSPCON          equ	20	;# 
   227     0015                     CCPR1           equ	21	;# 
   228     0015                     CCPR1L          equ	21	;# 
   229     0016                     CCPR1H          equ	22	;# 
   230     0017                     CCP1CON         equ	23	;# 
   231     0018                     RCSTA           equ	24	;# 
   232     0019                     TXREG           equ	25	;# 
   233     001A                     RCREG           equ	26	;# 
   234     001B                     CCPR2           equ	27	;# 
   235     001B                     CCPR2L          equ	27	;# 
   236     001C                     CCPR2H          equ	28	;# 
   237     001D                     CCP2CON         equ	29	;# 
   238     001E                     ADRESH          equ	30	;# 
   239     001F                     ADCON0          equ	31	;# 
   240     0081                     OPTION_REG      equ	129	;# 
   241     0085                     TRISA           equ	133	;# 
   242     0086                     TRISB           equ	134	;# 
   243     0087                     TRISC           equ	135	;# 
   244     0088                     TRISD           equ	136	;# 
   245     0089                     TRISE           equ	137	;# 
   246     008C                     PIE1            equ	140	;# 
   247     008D                     PIE2            equ	141	;# 
   248     008E                     PCON            equ	142	;# 
   249     0091                     SSPCON2         equ	145	;# 
   250     0092                     PR2             equ	146	;# 
   251     0093                     SSPADD          equ	147	;# 
   252     0094                     SSPSTAT         equ	148	;# 
   253     0098                     TXSTA           equ	152	;# 
   254     0099                     SPBRG           equ	153	;# 
   255     009C                     CMCON           equ	156	;# 
   256     009D                     CVRCON          equ	157	;# 
   257     009E                     ADRESL          equ	158	;# 
   258     009F                     ADCON1          equ	159	;# 
   259     010C                     EEDATA          equ	268	;# 
   260     010D                     EEADR           equ	269	;# 
   261     010E                     EEDATH          equ	270	;# 
   262     010F                     EEADRH          equ	271	;# 
   263     018C                     EECON1          equ	396	;# 
   264     018D                     EECON2          equ	397	;# 
   265     0000                     INDF            equ	0	;# 
   266     0001                     TMR0            equ	1	;# 
   267     0002                     PCL             equ	2	;# 
   268     0003                     STATUS          equ	3	;# 
   269     0004                     FSR             equ	4	;# 
   270     0005                     PORTA           equ	5	;# 
   271     0006                     PORTB           equ	6	;# 
   272     0007                     PORTC           equ	7	;# 
   273     0008                     PORTD           equ	8	;# 
   274     0009                     PORTE           equ	9	;# 
   275     000A                     PCLATH          equ	10	;# 
   276     000B                     INTCON          equ	11	;# 
   277     000C                     PIR1            equ	12	;# 
   278     000D                     PIR2            equ	13	;# 
   279     000E                     TMR1            equ	14	;# 
   280     000E                     TMR1L           equ	14	;# 
   281     000F                     TMR1H           equ	15	;# 
   282     0010                     T1CON           equ	16	;# 
   283     0011                     TMR2            equ	17	;# 
   284     0012                     T2CON           equ	18	;# 
   285     0013                     SSPBUF          equ	19	;# 
   286     0014                     SSPCON          equ	20	;# 
   287     0015                     CCPR1           equ	21	;# 
   288     0015                     CCPR1L          equ	21	;# 
   289     0016                     CCPR1H          equ	22	;# 
   290     0017                     CCP1CON         equ	23	;# 
   291     0018                     RCSTA           equ	24	;# 
   292     0019                     TXREG           equ	25	;# 
   293     001A                     RCREG           equ	26	;# 
   294     001B                     CCPR2           equ	27	;# 
   295     001B                     CCPR2L          equ	27	;# 
   296     001C                     CCPR2H          equ	28	;# 
   297     001D                     CCP2CON         equ	29	;# 
   298     001E                     ADRESH          equ	30	;# 
   299     001F                     ADCON0          equ	31	;# 
   300     0081                     OPTION_REG      equ	129	;# 
   301     0085                     TRISA           equ	133	;# 
   302     0086                     TRISB           equ	134	;# 
   303     0087                     TRISC           equ	135	;# 
   304     0088                     TRISD           equ	136	;# 
   305     0089                     TRISE           equ	137	;# 
   306     008C                     PIE1            equ	140	;# 
   307     008D                     PIE2            equ	141	;# 
   308     008E                     PCON            equ	142	;# 
   309     0091                     SSPCON2         equ	145	;# 
   310     0092                     PR2             equ	146	;# 
   311     0093                     SSPADD          equ	147	;# 
   312     0094                     SSPSTAT         equ	148	;# 
   313     0098                     TXSTA           equ	152	;# 
   314     0099                     SPBRG           equ	153	;# 
   315     009C                     CMCON           equ	156	;# 
   316     009D                     CVRCON          equ	157	;# 
   317     009E                     ADRESL          equ	158	;# 
   318     009F                     ADCON1          equ	159	;# 
   319     010C                     EEDATA          equ	268	;# 
   320     010D                     EEADR           equ	269	;# 
   321     010E                     EEDATH          equ	270	;# 
   322     010F                     EEADRH          equ	271	;# 
   323     018C                     EECON1          equ	396	;# 
   324     018D                     EECON2          equ	397	;# 
   325     0000                     INDF            equ	0	;# 
   326     0001                     TMR0            equ	1	;# 
   327     0002                     PCL             equ	2	;# 
   328     0003                     STATUS          equ	3	;# 
   329     0004                     FSR             equ	4	;# 
   330     0005                     PORTA           equ	5	;# 
   331     0006                     PORTB           equ	6	;# 
   332     0007                     PORTC           equ	7	;# 
   333     0008                     PORTD           equ	8	;# 
   334     0009                     PORTE           equ	9	;# 
   335     000A                     PCLATH          equ	10	;# 
   336     000B                     INTCON          equ	11	;# 
   337     000C                     PIR1            equ	12	;# 
   338     000D                     PIR2            equ	13	;# 
   339     000E                     TMR1            equ	14	;# 
   340     000E                     TMR1L           equ	14	;# 
   341     000F                     TMR1H           equ	15	;# 
   342     0010                     T1CON           equ	16	;# 
   343     0011                     TMR2            equ	17	;# 
   344     0012                     T2CON           equ	18	;# 
   345     0013                     SSPBUF          equ	19	;# 
   346     0014                     SSPCON          equ	20	;# 
   347     0015                     CCPR1           equ	21	;# 
   348     0015                     CCPR1L          equ	21	;# 
   349     0016                     CCPR1H          equ	22	;# 
   350     0017                     CCP1CON         equ	23	;# 
   351     0018                     RCSTA           equ	24	;# 
   352     0019                     TXREG           equ	25	;# 
   353     001A                     RCREG           equ	26	;# 
   354     001B                     CCPR2           equ	27	;# 
   355     001B                     CCPR2L          equ	27	;# 
   356     001C                     CCPR2H          equ	28	;# 
   357     001D                     CCP2CON         equ	29	;# 
   358     001E                     ADRESH          equ	30	;# 
   359     001F                     ADCON0          equ	31	;# 
   360     0081                     OPTION_REG      equ	129	;# 
   361     0085                     TRISA           equ	133	;# 
   362     0086                     TRISB           equ	134	;# 
   363     0087                     TRISC           equ	135	;# 
   364     0088                     TRISD           equ	136	;# 
   365     0089                     TRISE           equ	137	;# 
   366     008C                     PIE1            equ	140	;# 
   367     008D                     PIE2            equ	141	;# 
   368     008E                     PCON            equ	142	;# 
   369     0091                     SSPCON2         equ	145	;# 
   370     0092                     PR2             equ	146	;# 
   371     0093                     SSPADD          equ	147	;# 
   372     0094                     SSPSTAT         equ	148	;# 
   373     0098                     TXSTA           equ	152	;# 
   374     0099                     SPBRG           equ	153	;# 
   375     009C                     CMCON           equ	156	;# 
   376     009D                     CVRCON          equ	157	;# 
   377     009E                     ADRESL          equ	158	;# 
   378     009F                     ADCON1          equ	159	;# 
   379     010C                     EEDATA          equ	268	;# 
   380     010D                     EEADR           equ	269	;# 
   381     010E                     EEDATH          equ	270	;# 
   382     010F                     EEADRH          equ	271	;# 
   383     018C                     EECON1          equ	396	;# 
   384     018D                     EECON2          equ	397	;# 
   385     0000                     INDF            equ	0	;# 
   386     0001                     TMR0            equ	1	;# 
   387     0002                     PCL             equ	2	;# 
   388     0003                     STATUS          equ	3	;# 
   389     0004                     FSR             equ	4	;# 
   390     0005                     PORTA           equ	5	;# 
   391     0006                     PORTB           equ	6	;# 
   392     0007                     PORTC           equ	7	;# 
   393     0008                     PORTD           equ	8	;# 
   394     0009                     PORTE           equ	9	;# 
   395     000A                     PCLATH          equ	10	;# 
   396     000B                     INTCON          equ	11	;# 
   397     000C                     PIR1            equ	12	;# 
   398     000D                     PIR2            equ	13	;# 
   399     000E                     TMR1            equ	14	;# 
   400     000E                     TMR1L           equ	14	;# 
   401     000F                     TMR1H           equ	15	;# 
   402     0010                     T1CON           equ	16	;# 
   403     0011                     TMR2            equ	17	;# 
   404     0012                     T2CON           equ	18	;# 
   405     0013                     SSPBUF          equ	19	;# 
   406     0014                     SSPCON          equ	20	;# 
   407     0015                     CCPR1           equ	21	;# 
   408     0015                     CCPR1L          equ	21	;# 
   409     0016                     CCPR1H          equ	22	;# 
   410     0017                     CCP1CON         equ	23	;# 
   411     0018                     RCSTA           equ	24	;# 
   412     0019                     TXREG           equ	25	;# 
   413     001A                     RCREG           equ	26	;# 
   414     001B                     CCPR2           equ	27	;# 
   415     001B                     CCPR2L          equ	27	;# 
   416     001C                     CCPR2H          equ	28	;# 
   417     001D                     CCP2CON         equ	29	;# 
   418     001E                     ADRESH          equ	30	;# 
   419     001F                     ADCON0          equ	31	;# 
   420     0081                     OPTION_REG      equ	129	;# 
   421     0085                     TRISA           equ	133	;# 
   422     0086                     TRISB           equ	134	;# 
   423     0087                     TRISC           equ	135	;# 
   424     0088                     TRISD           equ	136	;# 
   425     0089                     TRISE           equ	137	;# 
   426     008C                     PIE1            equ	140	;# 
   427     008D                     PIE2            equ	141	;# 
   428     008E                     PCON            equ	142	;# 
   429     0091                     SSPCON2         equ	145	;# 
   430     0092                     PR2             equ	146	;# 
   431     0093                     SSPADD          equ	147	;# 
   432     0094                     SSPSTAT         equ	148	;# 
   433     0098                     TXSTA           equ	152	;# 
   434     0099                     SPBRG           equ	153	;# 
   435     009C                     CMCON           equ	156	;# 
   436     009D                     CVRCON          equ	157	;# 
   437     009E                     ADRESL          equ	158	;# 
   438     009F                     ADCON1          equ	159	;# 
   439     010C                     EEDATA          equ	268	;# 
   440     010D                     EEADR           equ	269	;# 
   441     010E                     EEDATH          equ	270	;# 
   442     010F                     EEADRH          equ	271	;# 
   443     018C                     EECON1          equ	396	;# 
   444     018D                     EECON2          equ	397	;# 
   445     0000                     INDF            equ	0	;# 
   446     0001                     TMR0            equ	1	;# 
   447     0002                     PCL             equ	2	;# 
   448     0003                     STATUS          equ	3	;# 
   449     0004                     FSR             equ	4	;# 
   450     0005                     PORTA           equ	5	;# 
   451     0006                     PORTB           equ	6	;# 
   452     0007                     PORTC           equ	7	;# 
   453     0008                     PORTD           equ	8	;# 
   454     0009                     PORTE           equ	9	;# 
   455     000A                     PCLATH          equ	10	;# 
   456     000B                     INTCON          equ	11	;# 
   457     000C                     PIR1            equ	12	;# 
   458     000D                     PIR2            equ	13	;# 
   459     000E                     TMR1            equ	14	;# 
   460     000E                     TMR1L           equ	14	;# 
   461     000F                     TMR1H           equ	15	;# 
   462     0010                     T1CON           equ	16	;# 
   463     0011                     TMR2            equ	17	;# 
   464     0012                     T2CON           equ	18	;# 
   465     0013                     SSPBUF          equ	19	;# 
   466     0014                     SSPCON          equ	20	;# 
   467     0015                     CCPR1           equ	21	;# 
   468     0015                     CCPR1L          equ	21	;# 
   469     0016                     CCPR1H          equ	22	;# 
   470     0017                     CCP1CON         equ	23	;# 
   471     0018                     RCSTA           equ	24	;# 
   472     0019                     TXREG           equ	25	;# 
   473     001A                     RCREG           equ	26	;# 
   474     001B                     CCPR2           equ	27	;# 
   475     001B                     CCPR2L          equ	27	;# 
   476     001C                     CCPR2H          equ	28	;# 
   477     001D                     CCP2CON         equ	29	;# 
   478     001E                     ADRESH          equ	30	;# 
   479     001F                     ADCON0          equ	31	;# 
   480     0081                     OPTION_REG      equ	129	;# 
   481     0085                     TRISA           equ	133	;# 
   482     0086                     TRISB           equ	134	;# 
   483     0087                     TRISC           equ	135	;# 
   484     0088                     TRISD           equ	136	;# 
   485     0089                     TRISE           equ	137	;# 
   486     008C                     PIE1            equ	140	;# 
   487     008D                     PIE2            equ	141	;# 
   488     008E                     PCON            equ	142	;# 
   489     0091                     SSPCON2         equ	145	;# 
   490     0092                     PR2             equ	146	;# 
   491     0093                     SSPADD          equ	147	;# 
   492     0094                     SSPSTAT         equ	148	;# 
   493     0098                     TXSTA           equ	152	;# 
   494     0099                     SPBRG           equ	153	;# 
   495     009C                     CMCON           equ	156	;# 
   496     009D                     CVRCON          equ	157	;# 
   497     009E                     ADRESL          equ	158	;# 
   498     009F                     ADCON1          equ	159	;# 
   499     010C                     EEDATA          equ	268	;# 
   500     010D                     EEADR           equ	269	;# 
   501     010E                     EEDATH          equ	270	;# 
   502     010F                     EEADRH          equ	271	;# 
   503     018C                     EECON1          equ	396	;# 
   504     018D                     EECON2          equ	397	;# 
   505                           
   506                           	psect	idataCOMMON
   507     07FD                     __pidataCOMMON:
   508                           
   509                           ;initializer for read_matrix_keypad@once
   510     07FD  3401               	retlw	1
   511                           
   512                           	psect	idataBANK0
   513     07FE                     __pidataBANK0:
   514                           
   515                           ;initializer for _operational_flag
   516     07FE  3401               	retlw	1
   517     0008                     _PORTD          set	8
   518     0061                     _TMR2IF         set	97
   519     0090                     _T2CKPS0        set	144
   520     0091                     _T2CKPS1        set	145
   521     0093                     _TOUTPS0        set	147
   522     0094                     _TOUTPS1        set	148
   523     0095                     _TOUTPS2        set	149
   524     0096                     _TOUTPS3        set	150
   525     0032                     _RB2            set	50
   526     0031                     _RB1            set	49
   527     0030                     _RB0            set	48
   528     0040                     _RD0            set	64
   529     0041                     _RD1            set	65
   530     0042                     _RD2            set	66
   531     0043                     _RD3            set	67
   532     0049                     _RE1            set	73
   533     004A                     _RE2            set	74
   534     0092                     _TMR2ON         set	146
   535     005F                     _GIE            set	95
   536     005E                     _PEIE           set	94
   537     0039                     _RC1            set	57
   538     003A                     _RC2            set	58
   539     0092                     _PR2            set	146
   540     0086                     _TRISB          set	134
   541     0088                     _TRISD          set	136
   542     0461                     _TMR2IE         set	1121
   543     040F                     _nRBPU          set	1039
   544     0449                     _TRISE1         set	1097
   545     044A                     _TRISE2         set	1098
   546     0439                     _TRISC1         set	1081
   547     043A                     _TRISC2         set	1082
   548                           
   549                           	psect	strings
   550     0500                     __pstrings:
   551     0500                     stringtab:
   552     0500                     __stringtab:
   553     0500                     stringcode:	
   554                           ;	String table - string pointers are 1 byte each
   555                           
   556     0500                     stringdir:
   557     0500  3005               	movlw	high stringdir
   558     0501  008A               	movwf	10
   559     0502  0804               	movf	4,w
   560     0503  0A84               	incf	4,f
   561     0504  0782               	addwf	2,f
   562     0505                     __stringbase:
   563     0505  3400               	retlw	0
   564     0506                     __end_of__stringtab:
   565     0506                     STR_8:
   566     0506  3453               	retlw	83	;'S'
   567     0507  3445               	retlw	69	;'E'
   568     0508  3454               	retlw	84	;'T'
   569     0509  3420               	retlw	32	;' '
   570     050A  3454               	retlw	84	;'T'
   571     050B  3449               	retlw	73	;'I'
   572     050C  344D               	retlw	77	;'M'
   573     050D  3445               	retlw	69	;'E'
   574     050E  3420               	retlw	32	;' '
   575     050F  3428               	retlw	40	;'('
   576     0510  344D               	retlw	77	;'M'
   577     0511  344D               	retlw	77	;'M'
   578     0512  343A               	retlw	58	;':'
   579     0513  3453               	retlw	83	;'S'
   580     0514  3453               	retlw	83	;'S'
   581     0515  3429               	retlw	41	;')'
   582     0516  3400               	retlw	0
   583     0517                     STR_10:
   584     0517  342A               	retlw	42	;'*'
   585     0518  343A               	retlw	58	;':'
   586     0519  3443               	retlw	67	;'C'
   587     051A  344C               	retlw	76	;'L'
   588     051B  3445               	retlw	69	;'E'
   589     051C  3441               	retlw	65	;'A'
   590     051D  3452               	retlw	82	;'R'
   591     051E  3420               	retlw	32	;' '
   592     051F  3420               	retlw	32	;' '
   593     0520  3423               	retlw	35	;'#'
   594     0521  343A               	retlw	58	;':'
   595     0522  3445               	retlw	69	;'E'
   596     0523  344E               	retlw	78	;'N'
   597     0524  3454               	retlw	84	;'T'
   598     0525  3445               	retlw	69	;'E'
   599     0526  3452               	retlw	82	;'R'
   600     0527  3400               	retlw	0
   601     0528                     STR_16:
   602     0528  3445               	retlw	69	;'E'
   603     0529  346E               	retlw	110	;'n'
   604     052A  346A               	retlw	106	;'j'
   605     052B  346F               	retlw	111	;'o'
   606     052C  3479               	retlw	121	;'y'
   607     052D  3420               	retlw	32	;' '
   608     052E  3479               	retlw	121	;'y'
   609     052F  346F               	retlw	111	;'o'
   610     0530  3475               	retlw	117	;'u'
   611     0531  3472               	retlw	114	;'r'
   612     0532  3420               	retlw	32	;' '
   613     0533  346D               	retlw	109	;'m'
   614     0534  3465               	retlw	101	;'e'
   615     0535  3461               	retlw	97	;'a'
   616     0536  346C               	retlw	108	;'l'
   617     0537  3400               	retlw	0
   618     0538                     STR_12:
   619     0538  3434               	retlw	52	;'4'
   620     0539  342E               	retlw	46	;'.'
   621     053A  3453               	retlw	83	;'S'
   622     053B  3454               	retlw	84	;'T'
   623     053C  3441               	retlw	65	;'A'
   624     053D  3452               	retlw	82	;'R'
   625     053E  3454               	retlw	84	;'T'
   626     053F  342F               	retlw	47	;'/'
   627     0540  3452               	retlw	82	;'R'
   628     0541  3445               	retlw	69	;'E'
   629     0542  3453               	retlw	83	;'S'
   630     0543  3455               	retlw	85	;'U'
   631     0544  344D               	retlw	77	;'M'
   632     0545  3445               	retlw	69	;'E'
   633     0546  3400               	retlw	0
   634     0547                     STR_3:
   635     0547  344D               	retlw	77	;'M'
   636     0548  3469               	retlw	105	;'i'
   637     0549  3463               	retlw	99	;'c'
   638     054A  3472               	retlw	114	;'r'
   639     054B  346F               	retlw	111	;'o'
   640     054C  3477               	retlw	119	;'w'
   641     054D  3461               	retlw	97	;'a'
   642     054E  3476               	retlw	118	;'v'
   643     054F  3465               	retlw	101	;'e'
   644     0550  3420               	retlw	32	;' '
   645     0551  344F               	retlw	79	;'O'
   646     0552  3476               	retlw	118	;'v'
   647     0553  3465               	retlw	101	;'e'
   648     0554  346E               	retlw	110	;'n'
   649     0555  3400               	retlw	0
   650     0556                     STR_17:
   651     0556  3453               	retlw	83	;'S'
   652     0557  3445               	retlw	69	;'E'
   653     0558  3454               	retlw	84	;'T'
   654     0559  3420               	retlw	32	;' '
   655     055A  3454               	retlw	84	;'T'
   656     055B  3445               	retlw	69	;'E'
   657     055C  344D               	retlw	77	;'M'
   658     055D  3450               	retlw	80	;'P'
   659     055E  3420               	retlw	32	;' '
   660     055F  343C               	retlw	60	;'<'
   661     0560  342A               	retlw	42	;'*'
   662     0561  3443               	retlw	67	;'C'
   663     0562  343E               	retlw	62	;'>'
   664     0563  3400               	retlw	0
   665     0564                     STR_6:
   666     0564  3433               	retlw	51	;'3'
   667     0565  342E               	retlw	46	;'.'
   668     0566  3443               	retlw	67	;'C'
   669     0567  346F               	retlw	111	;'o'
   670     0568  346E               	retlw	110	;'n'
   671     0569  3476               	retlw	118	;'v'
   672     056A  3465               	retlw	101	;'e'
   673     056B  346E               	retlw	110	;'n'
   674     056C  3474               	retlw	116	;'t'
   675     056D  3469               	retlw	105	;'i'
   676     056E  346F               	retlw	111	;'o'
   677     056F  346E               	retlw	110	;'n'
   678     0570  3400               	retlw	0
   679     0571                     STR_2:
   680     0571  3450               	retlw	80	;'P'
   681     0572  346F               	retlw	111	;'o'
   682     0573  3477               	retlw	119	;'w'
   683     0574  3465               	retlw	101	;'e'
   684     0575  3472               	retlw	114	;'r'
   685     0576  3469               	retlw	105	;'i'
   686     0577  346E               	retlw	110	;'n'
   687     0578  3467               	retlw	103	;'g'
   688     0579  3420               	retlw	32	;' '
   689     057A  344F               	retlw	79	;'O'
   690     057B  344E               	retlw	78	;'N'
   691     057C  3400               	retlw	0
   692     057D                     STR_20:
   693     057D  3450               	retlw	80	;'P'
   694     057E  3472               	retlw	114	;'r'
   695     057F  3465               	retlw	101	;'e'
   696     0580  342D               	retlw	45	;'-'
   697     0581  3448               	retlw	72	;'H'
   698     0582  3465               	retlw	101	;'e'
   699     0583  3461               	retlw	97	;'a'
   700     0584  3474               	retlw	116	;'t'
   701     0585  3469               	retlw	105	;'i'
   702     0586  346E               	retlw	110	;'n'
   703     0587  3467               	retlw	103	;'g'
   704     0588  3400               	retlw	0
   705     0589                     STR_15:
   706     0589  3454               	retlw	84	;'T'
   707     058A  3449               	retlw	73	;'I'
   708     058B  344D               	retlw	77	;'M'
   709     058C  3445               	retlw	69	;'E'
   710     058D  3420               	retlw	32	;' '
   711     058E  3455               	retlw	85	;'U'
   712     058F  3450               	retlw	80	;'P'
   713     0590  3421               	retlw	33	;'!'
   714     0591  3421               	retlw	33	;'!'
   715     0592  3421               	retlw	33	;'!'
   716     0593  3400               	retlw	0
   717     0594                     STR_1:
   718     0594  3450               	retlw	80	;'P'
   719     0595  346F               	retlw	111	;'o'
   720     0596  3477               	retlw	119	;'w'
   721     0597  3465               	retlw	101	;'e'
   722     0598  3472               	retlw	114	;'r'
   723     0599  343D               	retlw	61	;'='
   724     059A  3439               	retlw	57	;'9'
   725     059B  3430               	retlw	48	;'0'
   726     059C  3430               	retlw	48	;'0'
   727     059D  3457               	retlw	87	;'W'
   728     059E  3400               	retlw	0
   729     059F                     STR_21:
   730     059F  3454               	retlw	84	;'T'
   731     05A0  3469               	retlw	105	;'i'
   732     05A1  346D               	retlw	109	;'m'
   733     05A2  3465               	retlw	101	;'e'
   734     05A3  3420               	retlw	32	;' '
   735     05A4  3452               	retlw	82	;'R'
   736     05A5  3465               	retlw	101	;'e'
   737     05A6  346D               	retlw	109	;'m'
   738     05A7  3400               	retlw	0
   739     05A8                     STR_9:
   740     05A8  3420               	retlw	32	;' '
   741     05A9  3454               	retlw	84	;'T'
   742     05AA  3449               	retlw	73	;'I'
   743     05AB  344D               	retlw	77	;'M'
   744     05AC  3445               	retlw	69	;'E'
   745     05AD  3420               	retlw	32	;' '
   746     05AE  342D               	retlw	45	;'-'
   747     05AF  3400               	retlw	0
   748     05B0                     STR_18:
   749     05B0  3420               	retlw	32	;' '
   750     05B1  3454               	retlw	84	;'T'
   751     05B2  3445               	retlw	69	;'E'
   752     05B3  344D               	retlw	77	;'M'
   753     05B4  3450               	retlw	80	;'P'
   754     05B5  3420               	retlw	32	;' '
   755     05B6  342D               	retlw	45	;'-'
   756     05B7  3400               	retlw	0
   757     05B8                     STR_13:
   758     05B8  3435               	retlw	53	;'5'
   759     05B9  342E               	retlw	46	;'.'
   760     05BA  3450               	retlw	80	;'P'
   761     05BB  3441               	retlw	65	;'A'
   762     05BC  3455               	retlw	85	;'U'
   763     05BD  3453               	retlw	83	;'S'
   764     05BE  3445               	retlw	69	;'E'
   765     05BF  3400               	retlw	0
   766     05C0                     STR_5:
   767     05C0  3432               	retlw	50	;'2'
   768     05C1  342E               	retlw	46	;'.'
   769     05C2  3447               	retlw	71	;'G'
   770     05C3  3472               	retlw	114	;'r'
   771     05C4  3469               	retlw	105	;'i'
   772     05C5  346C               	retlw	108	;'l'
   773     05C6  346C               	retlw	108	;'l'
   774     05C7  3400               	retlw	0
   775     05C8                     STR_4:
   776     05C8  3431               	retlw	49	;'1'
   777     05C9  342E               	retlw	46	;'.'
   778     05CA  344D               	retlw	77	;'M'
   779     05CB  3469               	retlw	105	;'i'
   780     05CC  3463               	retlw	99	;'c'
   781     05CD  3472               	retlw	114	;'r'
   782     05CE  346F               	retlw	111	;'o'
   783     05CF  3400               	retlw	0
   784     05D0                     STR_7:
   785     05D0  3434               	retlw	52	;'4'
   786     05D1  342E               	retlw	46	;'.'
   787     05D2  3453               	retlw	83	;'S'
   788     05D3  3474               	retlw	116	;'t'
   789     05D4  3461               	retlw	97	;'a'
   790     05D5  3472               	retlw	114	;'r'
   791     05D6  3474               	retlw	116	;'t'
   792     05D7  3400               	retlw	0
   793     05D8                     STR_11:
   794     05D8  3454               	retlw	84	;'T'
   795     05D9  3449               	retlw	73	;'I'
   796     05DA  344D               	retlw	77	;'M'
   797     05DB  3445               	retlw	69	;'E'
   798     05DC  3420               	retlw	32	;' '
   799     05DD  343D               	retlw	61	;'='
   800     05DE  3400               	retlw	0
   801     05DF                     STR_14:
   802     05DF  3436               	retlw	54	;'6'
   803     05E0  342E               	retlw	46	;'.'
   804     05E1  3453               	retlw	83	;'S'
   805     05E2  3454               	retlw	84	;'T'
   806     05E3  344F               	retlw	79	;'O'
   807     05E4  3450               	retlw	80	;'P'
   808     05E5  3400               	retlw	0
   809     05E6                     STR_22:
   810     05E6  3473               	retlw	115	;'s'
   811     05E7  3465               	retlw	101	;'e'
   812     05E8  3463               	retlw	99	;'c'
   813     05E9  3400               	retlw	0
   814     0517                     STR_19          equ	STR_10
   815                           
   816                           	psect	cinit
   817     000F                     start_initialization:	
   818                           ; #config settings
   819                           
   820     000F                     __initialization:
   821                           
   822                           ; Initialize objects allocated to BANK0
   823     000F  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   824     0014  00BF               	movwf	__pdataBANK0& (0+127)
   825                           
   826                           ; Initialize objects allocated to COMMON
   827     0015  120A  118A  27FD  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   828     001A  00FB               	movwf	__pdataCOMMON& (0+127)
   829                           
   830                           ; Clear objects allocated to BANK0
   831     001B  01B6               	clrf	__pbssBANK0& (0+127)
   832     001C  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   833     001D  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   834     001E  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   835     001F  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   836     0020  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   837     0021  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   838     0022  01BD               	clrf	(__pbssBANK0+7)& (0+127)
   839     0023  01BE               	clrf	(__pbssBANK0+8)& (0+127)
   840                           
   841                           ; Clear objects allocated to COMMON
   842     0024  01F9               	clrf	__pbssCOMMON& (0+127)
   843     0025  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   844     0026                     end_of_initialization:	
   845                           ;End of C runtime variable initialization code
   846                           
   847     0026                     __end_of__initialization:
   848     0026  0183               	clrf	3
   849     0027  120A  118A  2AF6   	ljmp	_main	;jump to C main() function
   850                           
   851                           	psect	bssCOMMON
   852     0079                     __pbssCOMMON:
   853     0079                     _count:
   854     0079                     	ds	2
   855                           
   856                           	psect	dataCOMMON
   857     007B                     __pdataCOMMON:
   858     007B                     read_matrix_keypad@once:
   859     007B                     	ds	1
   860                           
   861                           	psect	bssBANK0
   862     0036                     __pbssBANK0:
   863     0036                     set_temp@temp:
   864     0036                     	ds	2
   865     0038                     set_temp@key_count:
   866     0038                     	ds	1
   867     0039                     set_time@key_count:
   868     0039                     	ds	1
   869     003A                     set_time@blink_pos:
   870     003A                     	ds	1
   871     003B                     _pre_heat_time:
   872     003B                     	ds	1
   873     003C                     _reset_flag:
   874     003C                     	ds	1
   875     003D                     _min:
   876     003D                     	ds	1
   877     003E                     _sec:
   878     003E                     	ds	1
   879                           
   880                           	psect	dataBANK0
   881     003F                     __pdataBANK0:
   882     003F                     _operational_flag:
   883     003F                     	ds	1
   884                           
   885                           	psect	cstackCOMMON
   886     0070                     __pcstackCOMMON:
   887     0070                     ?_init_clcd:
   888     0070                     ?_init_matrix_keypad:	
   889                           ; 1 bytes @ 0x0
   890                           
   891     0070                     ?_init_timer2:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ?_read_matrix_keypad:	
   895                           ; 1 bytes @ 0x0
   896                           
   897     0070                     ?_clear_screen:	
   898                           ; 1 bytes @ 0x0
   899                           
   900     0070                     ?_power_on_screen:	
   901                           ; 1 bytes @ 0x0
   902                           
   903     0070                     ?_display_menu_screen:	
   904                           ; 1 bytes @ 0x0
   905                           
   906     0070                     ?_time_display:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0070                     ?_heat_food:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0070                     ?_init_config:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     ?_main:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     ?_init_display_controller:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0070                     ?_scan_keypad:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ?_isr:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ??_isr:	
   928                           ; 1 bytes @ 0x0
   929                           
   930                           
   931                           ; 1 bytes @ 0x0
   932     0070                     	ds	2
   933     0072                     ?_clcd_write:
   934     0072                     ?___bmul:	
   935                           ; 1 bytes @ 0x2
   936                           
   937     0072                     ?___wmul:	
   938                           ; 1 bytes @ 0x2
   939                           
   940     0072                     ?___awdiv:	
   941                           ; 2 bytes @ 0x2
   942                           
   943     0072                     ?___lwdiv:	
   944                           ; 2 bytes @ 0x2
   945                           
   946     0072                     clcd_write@mode:	
   947                           ; 2 bytes @ 0x2
   948                           
   949     0072                     ___bmul@multiplicand:	
   950                           ; 1 bytes @ 0x2
   951                           
   952     0072                     scan_keypad@i:	
   953                           ; 1 bytes @ 0x2
   954                           
   955     0072                     ___wmul@multiplier:	
   956                           ; 2 bytes @ 0x2
   957                           
   958     0072                     ___awdiv@divisor:	
   959                           ; 2 bytes @ 0x2
   960                           
   961     0072                     ___lwdiv@divisor:	
   962                           ; 2 bytes @ 0x2
   963                           
   964     0072                     ??_init_matrix_keypad:	
   965                           ; 2 bytes @ 0x2
   966                           
   967     0072                     ??_init_timer2:	
   968                           ; 1 bytes @ 0x2
   969                           
   970     0072                     ??_heat_food:	
   971                           ; 1 bytes @ 0x2
   972                           
   973     0072                     ??_scan_keypad:	
   974                           ; 1 bytes @ 0x2
   975                           
   976                           
   977                           ; 1 bytes @ 0x2
   978     0072                     	ds	1
   979     0073                     ___bmul@product:
   980     0073                     ??_clcd_write:	
   981                           ; 1 bytes @ 0x3
   982                           
   983     0073                     ??___bmul:	
   984                           ; 1 bytes @ 0x3
   985                           
   986                           
   987                           ; 1 bytes @ 0x3
   988     0073                     	ds	1
   989     0074                     read_matrix_keypad@mode:
   990     0074                     ___bmul@multiplier:	
   991                           ; 1 bytes @ 0x4
   992                           
   993     0074                     ___wmul@multiplicand:	
   994                           ; 1 bytes @ 0x4
   995                           
   996     0074                     ___awdiv@dividend:	
   997                           ; 2 bytes @ 0x4
   998                           
   999     0074                     ___lwdiv@dividend:	
  1000                           ; 2 bytes @ 0x4
  1001                           
  1002     0074                     ??_read_matrix_keypad:	
  1003                           ; 2 bytes @ 0x4
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x4
  1007     0074                     	ds	1
  1008     0075                     clcd_write@byte:
  1009     0075                     read_matrix_keypad@key:	
  1010                           ; 1 bytes @ 0x5
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x5
  1014     0075                     	ds	1
  1015     0076                     ?_clcd_print:
  1016     0076                     clcd_print@str:	
  1017                           ; 1 bytes @ 0x6
  1018                           
  1019     0076                     ___awmod@counter:	
  1020                           ; 1 bytes @ 0x6
  1021                           
  1022     0076                     ___wmul@product:	
  1023                           ; 1 bytes @ 0x6
  1024                           
  1025     0076                     ___lwdiv@quotient:	
  1026                           ; 2 bytes @ 0x6
  1027                           
  1028     0076                     ??_clear_screen:	
  1029                           ; 2 bytes @ 0x6
  1030                           
  1031     0076                     ??_init_display_controller:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034     0076                     ??___wmul:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037     0076                     ??___awdiv:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040     0076                     ??___awmod:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043     0076                     ??___lwdiv:	
  1044                           ; 1 bytes @ 0x6
  1045                           
  1046                           
  1047                           ; 1 bytes @ 0x6
  1048     0076                     	ds	1
  1049     0077                     clcd_print@addr:
  1050     0077                     ___awmod@sign:	
  1051                           ; 1 bytes @ 0x7
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0x7
  1055     0077                     	ds	1
  1056     0078                     ___lwdiv@counter:
  1057     0078                     ??_init_clcd:	
  1058                           ; 1 bytes @ 0x8
  1059                           
  1060     0078                     ??_clcd_print:	
  1061                           ; 1 bytes @ 0x8
  1062                           
  1063     0078                     ??_display_menu_screen:	
  1064                           ; 1 bytes @ 0x8
  1065                           
  1066     0078                     ??_init_config:	
  1067                           ; 1 bytes @ 0x8
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x8
  1071     0078                     	ds	1
  1072     0079                     ??_clcd_putch:
  1073     0079                     ??___lwmod:	
  1074                           ; 1 bytes @ 0x9
  1075                           
  1076                           
  1077                           	psect	cstackBANK0
  1078     0020                     __pcstackBANK0:	
  1079                           ; 1 bytes @ 0x9
  1080                           
  1081     0020                     ?___lwmod:
  1082     0020                     ___awdiv@counter:	
  1083                           ; 2 bytes @ 0x0
  1084                           
  1085     0020                     ___lwmod@divisor:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x0
  1090     0020                     	ds	1
  1091     0021                     ___awdiv@sign:
  1092                           
  1093                           ; 1 bytes @ 0x1
  1094     0021                     	ds	1
  1095     0022                     ___awdiv@quotient:
  1096     0022                     ___lwmod@dividend:	
  1097                           ; 2 bytes @ 0x2
  1098                           
  1099                           
  1100                           ; 2 bytes @ 0x2
  1101     0022                     	ds	2
  1102     0024                     ?___awmod:
  1103     0024                     ___lwmod@counter:	
  1104                           ; 2 bytes @ 0x4
  1105                           
  1106     0024                     ___awmod@divisor:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x4
  1111     0024                     	ds	2
  1112     0026                     ___awmod@dividend:
  1113                           
  1114                           ; 2 bytes @ 0x6
  1115     0026                     	ds	2
  1116     0028                     ?_clcd_putch:
  1117     0028                     clcd_putch@addr:	
  1118                           ; 1 bytes @ 0x8
  1119                           
  1120                           
  1121                           ; 1 bytes @ 0x8
  1122     0028                     	ds	1
  1123     0029                     clcd_putch@data:
  1124                           
  1125                           ; 1 bytes @ 0x9
  1126     0029                     	ds	1
  1127     002A                     ?_set_time:
  1128     002A                     ?_set_temp:	
  1129                           ; 1 bytes @ 0xA
  1130                           
  1131     002A                     set_time@reset_flag:	
  1132                           ; 1 bytes @ 0xA
  1133                           
  1134     002A                     set_temp@reset_flag:	
  1135                           ; 1 bytes @ 0xA
  1136                           
  1137     002A                     ??_power_on_screen:	
  1138                           ; 1 bytes @ 0xA
  1139                           
  1140     002A                     ??_time_display:	
  1141                           ; 1 bytes @ 0xA
  1142                           
  1143                           
  1144                           ; 1 bytes @ 0xA
  1145     002A                     	ds	1
  1146     002B                     ??_set_time:
  1147     002B                     ??_set_temp:	
  1148                           ; 1 bytes @ 0xB
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0xB
  1152     002B                     	ds	2
  1153     002D                     set_time@wait:
  1154     002D                     set_temp@wait:	
  1155                           ; 1 bytes @ 0xD
  1156                           
  1157     002D                     power_on_screen@i:	
  1158                           ; 1 bytes @ 0xD
  1159                           
  1160                           
  1161                           ; 2 bytes @ 0xD
  1162     002D                     	ds	1
  1163     002E                     set_time@key:
  1164     002E                     set_temp@key:	
  1165                           ; 1 bytes @ 0xE
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0xE
  1169     002E                     	ds	1
  1170     002F                     power_on_screen@i_181:
  1171                           
  1172                           ; 2 bytes @ 0xF
  1173     002F                     	ds	2
  1174     0031                     ??_main:
  1175                           
  1176                           ; 1 bytes @ 0x11
  1177     0031                     	ds	3
  1178     0034                     main@start_mode:
  1179                           
  1180                           ; 1 bytes @ 0x14
  1181     0034                     	ds	1
  1182     0035                     main@key:
  1183                           
  1184                           ; 1 bytes @ 0x15
  1185     0035                     	ds	1
  1186                           
  1187                           	psect	maintext
  1188     02F6                     __pmaintext:	
  1189 ;;
  1190 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1191 ;;
  1192 ;; *************** function _main *****************
  1193 ;; Defined at:
  1194 ;;		line 39 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  key             1   21[BANK0 ] unsigned char 
  1199 ;;  start_mode      1   20[BANK0 ] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : B00/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         0       2       0       0       0
  1211 ;;      Temps:          0       3       0       0       0
  1212 ;;      Totals:         0       5       0       0       0
  1213 ;;Total ram usage:        5 bytes
  1214 ;; Hardware stack levels required when called: 5
  1215 ;; This function calls:
  1216 ;;		_clcd_print
  1217 ;;		_clear_screen
  1218 ;;		_display_menu_screen
  1219 ;;		_heat_food
  1220 ;;		_init_config
  1221 ;;		_power_on_screen
  1222 ;;		_read_matrix_keypad
  1223 ;;		_set_temp
  1224 ;;		_set_time
  1225 ;;		_time_display
  1226 ;; This function is called by:
  1227 ;;		Startup code after reset
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231     02F6                     _main:	
  1232                           ;psect for function _main
  1233                           
  1234     02F6                     l2764:	
  1235                           ;incstack = 0
  1236                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1237                           
  1238                           
  1239                           ;main.c: 40:             }
  1240     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1241     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1242     02F8  01B4               	clrf	main@start_mode
  1243     02F9                     l2766:
  1244                           
  1245                           ;main.c: 41:             else if(key==2)
  1246     02F9  120A  118A  27DF  120A  118A  	fcall	_init_config
  1247     02FE                     l2768:
  1248                           
  1249                           ;main.c: 43:                 clear_screen();;main.c: 44:                  start_mode=0;
  1250     02FE  3001               	movlw	1
  1251     02FF  120A  158A  2626  120A  118A  	fcall	_read_matrix_keypad
  1252     0304  1283               	bcf	3,5	;RP0=0, select bank0
  1253     0305  1303               	bcf	3,6	;RP1=0, select bank0
  1254     0306  00B5               	movwf	main@key
  1255     0307                     l2770:
  1256                           
  1257                           ;main.c: 46:                 reset_flag=0XFF;
  1258     0307  3002               	movlw	2
  1259     0308  063F               	xorwf	_operational_flag,w
  1260     0309  1D03               	btfss	3,2
  1261     030A  2B0C               	goto	u2771
  1262     030B  2B0D               	goto	u2770
  1263     030C                     u2771:
  1264     030C  2B71               	goto	l2818
  1265     030D                     u2770:
  1266     030D                     l2772:
  1267                           
  1268                           ;main.c: 47:             };main.c: 49:             {
  1269     030D  0335               	decf	main@key,w
  1270     030E  1D03               	btfss	3,2
  1271     030F  2B11               	goto	u2781
  1272     0310  2B12               	goto	u2780
  1273     0311                     u2781:
  1274     0311  2B3D               	goto	l2788
  1275     0312                     u2780:
  1276     0312                     l2774:
  1277                           
  1278                           ;main.c: 50:                  clear_screen();
  1279     0312  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1280     0317                     l2776:
  1281                           
  1282                           ;main.c: 51:                  start_mode=0;
  1283     0317  3011               	movlw	17
  1284     0318  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0319  1303               	bcf	3,6	;RP1=0, select bank0
  1286     031A  00BF               	movwf	_operational_flag
  1287     031B                     l2778:
  1288                           
  1289                           ;main.c: 52:                 operational_flag=0x13;
  1290     031B  01B4               	clrf	main@start_mode
  1291     031C                     l2780:
  1292                           
  1293                           ;main.c: 53:                 reset_flag=0XFF;
  1294     031C  308F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1295     031D  00F6               	movwf	clcd_print@str
  1296     031E  30C0               	movlw	192
  1297     031F  00F7               	movwf	clcd_print@addr
  1298     0320  120A  158A  2649  120A  118A  	fcall	_clcd_print
  1299     0325                     l2782:
  1300                           
  1301                           ;main.c: 54:             }
  1302     0325  3033               	movlw	51
  1303     0326  1283               	bcf	3,5	;RP0=0, select bank0
  1304     0327  1303               	bcf	3,6	;RP1=0, select bank0
  1305     0328  00B3               	movwf	??_main+2
  1306     0329  30BB               	movlw	187
  1307     032A  00B2               	movwf	??_main+1
  1308     032B  30DF               	movlw	223
  1309     032C  00B1               	movwf	??_main
  1310     032D                     u2907:
  1311     032D  0BB1               	decfsz	??_main,f
  1312     032E  2B2D               	goto	u2907
  1313     032F  0BB2               	decfsz	??_main+1,f
  1314     0330  2B2D               	goto	u2907
  1315     0331  0BB3               	decfsz	??_main+2,f
  1316     0332  2B2D               	goto	u2907
  1317     0333                     l2784:
  1318                           
  1319                           ;main.c: 55:             else if(key==4)
  1320     0333  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1321     0338                     l2786:
  1322                           
  1323                           ;main.c: 56:             {
  1324     0338  30FF               	movlw	255
  1325     0339  1283               	bcf	3,5	;RP0=0, select bank0
  1326     033A  1303               	bcf	3,6	;RP1=0, select bank0
  1327     033B  00BC               	movwf	_reset_flag
  1328                           
  1329                           ;main.c: 57:                  clear_screen();
  1330     033C  2B71               	goto	l2818
  1331     033D                     l2788:
  1332     033D  3002               	movlw	2
  1333     033E  0635               	xorwf	main@key,w
  1334     033F  1D03               	btfss	3,2
  1335     0340  2B42               	goto	u2791
  1336     0341  2B43               	goto	u2790
  1337     0342                     u2791:
  1338     0342  2B4E               	goto	l2798
  1339     0343                     u2790:
  1340     0343                     l2790:
  1341                           
  1342                           ;main.c: 59:                 start_mode=1;;main.c: 60:                  reset_flag=0XFF;
  1343     0343  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1344     0348                     l2792:
  1345                           
  1346                           ;main.c: 61:             }
  1347     0348  1283               	bcf	3,5	;RP0=0, select bank0
  1348     0349  1303               	bcf	3,6	;RP1=0, select bank0
  1349     034A  01B4               	clrf	main@start_mode
  1350     034B                     l2794:
  1351                           
  1352                           ;main.c: 62:         }
  1353     034B  3012               	movlw	18
  1354     034C  00BF               	movwf	_operational_flag
  1355     034D  2B38               	goto	l2786
  1356     034E                     l2798:
  1357     034E  3003               	movlw	3
  1358     034F  0635               	xorwf	main@key,w
  1359     0350  1D03               	btfss	3,2
  1360     0351  2B53               	goto	u2801
  1361     0352  2B54               	goto	u2800
  1362     0353                     u2801:
  1363     0353  2B5F               	goto	l2808
  1364     0354                     u2800:
  1365     0354                     l2800:
  1366                           
  1367                           ;main.c: 66:             {;main.c: 67: 
  1368     0354  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1369     0359                     l2802:
  1370                           
  1371                           ;main.c: 68:                   if(start_mode)
  1372     0359  1283               	bcf	3,5	;RP0=0, select bank0
  1373     035A  1303               	bcf	3,6	;RP1=0, select bank0
  1374     035B  01B4               	clrf	main@start_mode
  1375     035C                     l2804:
  1376                           
  1377                           ;main.c: 69:                   {
  1378     035C  3013               	movlw	19
  1379     035D  00BF               	movwf	_operational_flag
  1380     035E  2B38               	goto	l2786
  1381     035F                     l2808:
  1382     035F  3004               	movlw	4
  1383     0360  0635               	xorwf	main@key,w
  1384     0361  1D03               	btfss	3,2
  1385     0362  2B64               	goto	u2811
  1386     0363  2B65               	goto	u2810
  1387     0364                     u2811:
  1388     0364  2B71               	goto	l59
  1389     0365                     u2810:
  1390     0365                     l2810:
  1391                           
  1392                           ;main.c: 73:                           min++;;main.c: 74:                           sec=
      +                          sec-60;
  1393     0365  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1394     036A                     l2812:
  1395                           
  1396                           ;main.c: 75: 
  1397     036A  3014               	movlw	20
  1398     036B  1283               	bcf	3,5	;RP0=0, select bank0
  1399     036C  1303               	bcf	3,6	;RP1=0, select bank0
  1400     036D  00BF               	movwf	_operational_flag
  1401     036E                     l2814:
  1402                           
  1403                           ;main.c: 76:                       }
  1404     036E  3001               	movlw	1
  1405     036F  00B4               	movwf	main@start_mode
  1406     0370  2B38               	goto	l2786
  1407     0371                     l59:
  1408     0371                     l2818:
  1409                           
  1410                           ;main.c: 80:             {
  1411     0371  30DD               	movlw	221
  1412     0372  063F               	xorwf	_operational_flag,w
  1413     0373  1D03               	btfss	3,2
  1414     0374  2B76               	goto	u2821
  1415     0375  2B77               	goto	u2820
  1416     0376                     u2821:
  1417     0376  2BA3               	goto	l2838
  1418     0377                     u2820:
  1419     0377                     l2820:
  1420                           
  1421                           ;main.c: 81:                 operational_flag=0xCC;;main.c: 82: 
  1422     0377  3004               	movlw	4
  1423     0378  0635               	xorwf	main@key,w
  1424     0379  1D03               	btfss	3,2
  1425     037A  2B7C               	goto	u2831
  1426     037B  2B7D               	goto	u2830
  1427     037C                     u2831:
  1428     037C  2B91               	goto	l2830
  1429     037D                     u2830:
  1430     037D                     l2822:
  1431                           
  1432                           ;main.c: 83:             };main.c: 85:             {
  1433     037D  0834               	movf	main@start_mode,w
  1434     037E  1903               	btfsc	3,2
  1435     037F  2B81               	goto	u2841
  1436     0380  2B82               	goto	u2840
  1437     0381                     u2841:
  1438     0381  2C00               	goto	l2868
  1439     0382                     u2840:
  1440     0382                     l2824:
  1441                           
  1442                           ;main.c: 86:                operational_flag=0xBB;;main.c: 87:             }
  1443     0382  083E               	movf	_sec,w
  1444     0383  3E1E               	addlw	30
  1445     0384  00BE               	movwf	_sec
  1446     0385                     l2826:
  1447                           
  1448                           ;main.c: 88: 
  1449     0385  303C               	movlw	60
  1450     0386  023E               	subwf	_sec,w
  1451     0387  1C03               	skipc
  1452     0388  2B8A               	goto	u2851
  1453     0389  2B8B               	goto	u2850
  1454     038A                     u2851:
  1455     038A  2BB4               	goto	l73
  1456     038B                     u2850:
  1457     038B                     l2828:
  1458                           
  1459                           ;main.c: 89:         };main.c: 90:         else if(operational_flag==0xCC)
  1460     038B  3001               	movlw	1
  1461     038C  07BD               	addwf	_min,f
  1462                           
  1463                           ;main.c: 91:         {
  1464     038D  083E               	movf	_sec,w
  1465     038E  3EC4               	addlw	196
  1466     038F  00BE               	movwf	_sec
  1467     0390  2C00               	goto	l2868
  1468     0391                     l2830:
  1469     0391  3005               	movlw	5
  1470     0392  0635               	xorwf	main@key,w
  1471     0393  1D03               	btfss	3,2
  1472     0394  2B96               	goto	u2861
  1473     0395  2B97               	goto	u2860
  1474     0396                     u2861:
  1475     0396  2B9A               	goto	l2834
  1476     0397                     u2860:
  1477     0397                     l2832:
  1478                           
  1479                           ;main.c: 97:             };main.c: 98:         }
  1480     0397  30CC               	movlw	204
  1481     0398  00BF               	movwf	_operational_flag
  1482     0399  2C00               	goto	l2868
  1483     039A                     l2834:
  1484     039A  3006               	movlw	6
  1485     039B  0635               	xorwf	main@key,w
  1486     039C  1D03               	btfss	3,2
  1487     039D  2B9F               	goto	u2871
  1488     039E  2BA0               	goto	u2870
  1489     039F                     u2871:
  1490     039F  2BB4               	goto	l73
  1491     03A0                     u2870:
  1492     03A0                     l2836:
  1493     03A0  30BB               	movlw	187
  1494     03A1  00BF               	movwf	_operational_flag
  1495     03A2  2C00               	goto	l2868
  1496     03A3                     l2838:
  1497     03A3  30CC               	movlw	204
  1498     03A4  063F               	xorwf	_operational_flag,w
  1499     03A5  1D03               	btfss	3,2
  1500     03A6  2BA8               	goto	u2881
  1501     03A7  2BA9               	goto	u2880
  1502     03A8                     u2881:
  1503     03A8  2C00               	goto	l2868
  1504     03A9                     u2880:
  1505     03A9                     l2840:
  1506     03A9  3004               	movlw	4
  1507     03AA  0635               	xorwf	main@key,w
  1508     03AB  1D03               	btfss	3,2
  1509     03AC  2BAE               	goto	u2891
  1510     03AD  2BAF               	goto	u2890
  1511     03AE                     u2891:
  1512     03AE  2BB4               	goto	l73
  1513     03AF                     u2890:
  1514     03AF                     l2842:
  1515     03AF  1507               	bsf	7,2	;volatile
  1516     03B0  1512               	bsf	18,2	;volatile
  1517     03B1  30DD               	movlw	221
  1518     03B2  00BF               	movwf	_operational_flag
  1519     03B3  2C00               	goto	l2868
  1520     03B4                     l73:
  1521                           
  1522                           ;main.c: 129:        switch(operational_flag)
  1523     03B4  2C00               	goto	l2868
  1524     03B5                     l2844:
  1525                           
  1526                           ;main.c: 133:                                   power_on_screen();
  1527     03B5  120A  118A  2487  120A  118A  	fcall	_power_on_screen
  1528     03BA                     l2846:
  1529                           
  1530                           ;main.c: 134:                                   operational_flag=0x02;
  1531     03BA  3002               	movlw	2
  1532     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1533     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1534     03BD  00BF               	movwf	_operational_flag
  1535     03BE                     l2848:
  1536                           
  1537                           ;main.c: 135:                                   clear_screen();
  1538     03BE  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1539                           
  1540                           ;main.c: 136:                                    break;
  1541     03C3  2C1D               	goto	l2870
  1542     03C4                     l2850:
  1543                           
  1544                           ;main.c: 139:                                  display_menu_screen();
  1545     03C4  120A  158A  266E  120A  118A  	fcall	_display_menu_screen
  1546                           
  1547                           ;main.c: 140:                                    break;
  1548     03C9  2C1D               	goto	l2870
  1549     03CA                     l2852:
  1550                           
  1551                           ;main.c: 145:                                      set_time(key,reset_flag);
  1552     03CA  083C               	movf	_reset_flag,w
  1553     03CB  00AA               	movwf	set_time@reset_flag
  1554     03CC  0835               	movf	main@key,w
  1555     03CD  120A  118A  21BE  120A  118A  	fcall	_set_time
  1556                           
  1557                           ;main.c: 148:                                      break;
  1558     03D2  2C1D               	goto	l2870
  1559     03D3                     l2854:
  1560                           
  1561                           ;main.c: 150:                        time_display();
  1562     03D3  120A  118A  25EA  120A  118A  	fcall	_time_display
  1563                           
  1564                           ;main.c: 151:                        break;
  1565     03D8  2C1D               	goto	l2870
  1566     03D9                     l82:	
  1567                           ;main.c: 152:            case 0xCC :
  1568                           
  1569                           
  1570                           ;main.c: 154:                              RC2=0;
  1571     03D9  1107               	bcf	7,2	;volatile
  1572                           
  1573                           ;main.c: 155:                              TMR2ON=0;
  1574     03DA  1112               	bcf	18,2	;volatile
  1575                           
  1576                           ;main.c: 156:                              break;
  1577     03DB  2C1D               	goto	l2870
  1578     03DC                     l83:	
  1579                           ;main.c: 157:            case 0xBB :
  1580                           
  1581                           
  1582                           ;main.c: 158:                             RC2=0;
  1583     03DC  1107               	bcf	7,2	;volatile
  1584                           
  1585                           ;main.c: 159:                              TMR2ON=0;
  1586     03DD  1112               	bcf	18,2	;volatile
  1587     03DE                     l2856:
  1588                           
  1589                           ;main.c: 160:                              clear_screen();
  1590     03DE  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1591     03E3                     l2858:
  1592                           
  1593                           ;main.c: 161:                              operational_flag=0x02;
  1594     03E3  3002               	movlw	2
  1595     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1596     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1597     03E6  00BF               	movwf	_operational_flag
  1598                           
  1599                           ;main.c: 162:                              break;
  1600     03E7  2C1D               	goto	l2870
  1601     03E8                     l2860:
  1602                           
  1603                           ;main.c: 164:                             set_time(key,reset_flag);
  1604     03E8  083C               	movf	_reset_flag,w
  1605     03E9  00AA               	movwf	set_time@reset_flag
  1606     03EA  0835               	movf	main@key,w
  1607     03EB  120A  118A  21BE  120A  118A  	fcall	_set_time
  1608                           
  1609                           ;main.c: 165:                             break;
  1610     03F0  2C1D               	goto	l2870
  1611     03F1                     l2862:
  1612                           
  1613                           ;main.c: 167:                              set_temp(key,reset_flag);
  1614     03F1  083C               	movf	_reset_flag,w
  1615     03F2  00AA               	movwf	set_temp@reset_flag
  1616     03F3  0835               	movf	main@key,w
  1617     03F4  120A  118A  202A  120A  118A  	fcall	_set_temp
  1618                           
  1619                           ;main.c: 168:                             break;
  1620     03F9  2C1D               	goto	l2870
  1621     03FA                     l2864:
  1622                           
  1623                           ;main.c: 171:                              heat_food();
  1624     03FA  120A  158A  25C7  120A  118A  	fcall	_heat_food
  1625                           
  1626                           ;main.c: 172:                              break;
  1627     03FF  2C1D               	goto	l2870
  1628     0400                     l2868:
  1629     0400  083F               	movf	_operational_flag,w
  1630                           
  1631                           ; Switch size 1, requested type "simple"
  1632                           ; Number of cases is 9, Range of values is 1 to 221
  1633                           ; switch strategies available:
  1634                           ; Name         Instructions Cycles
  1635                           ; simple_byte           28    15 (average)
  1636                           ; jumptable            263     9 (fixed)
  1637                           ;	Chosen strategy is simple_byte
  1638     0401  3A01               	xorlw	1	; case 1
  1639     0402  1903               	skipnz
  1640     0403  2BB5               	goto	l2844
  1641     0404  3A03               	xorlw	3	; case 2
  1642     0405  1903               	skipnz
  1643     0406  2BC4               	goto	l2850
  1644     0407  3A13               	xorlw	19	; case 17
  1645     0408  1903               	skipnz
  1646     0409  2BCA               	goto	l2852
  1647     040A  3A03               	xorlw	3	; case 18
  1648     040B  1903               	skipnz
  1649     040C  2BE8               	goto	l2860
  1650     040D  3A01               	xorlw	1	; case 19
  1651     040E  1903               	skipnz
  1652     040F  2BF1               	goto	l2862
  1653     0410  3A07               	xorlw	7	; case 20
  1654     0411  1903               	skipnz
  1655     0412  2BFA               	goto	l2864
  1656     0413  3AAF               	xorlw	175	; case 187
  1657     0414  1903               	skipnz
  1658     0415  2BDC               	goto	l83
  1659     0416  3A77               	xorlw	119	; case 204
  1660     0417  1903               	skipnz
  1661     0418  2BD9               	goto	l82
  1662     0419  3A11               	xorlw	17	; case 221
  1663     041A  1903               	skipnz
  1664     041B  2BD3               	goto	l2854
  1665     041C  2C1D               	goto	l2870
  1666     041D                     l2870:
  1667                           
  1668                           ;main.c: 176:        reset_flag=0X00;
  1669     041D  1283               	bcf	3,5	;RP0=0, select bank0
  1670     041E  1303               	bcf	3,6	;RP1=0, select bank0
  1671     041F  01BC               	clrf	_reset_flag
  1672     0420  2AFE               	goto	l2768
  1673     0421  120A  118A  280C   	ljmp	start
  1674     0424                     __end_of_main:
  1675                           
  1676                           	psect	text1
  1677     05EA                     __ptext1:	
  1678 ;; *************** function _time_display *****************
  1679 ;; Defined at:
  1680 ;;		line 125 in file "microoven.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1694 ;;      Params:         0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0
  1696 ;;      Temps:          0       3       0       0       0
  1697 ;;      Totals:         0       3       0       0       0
  1698 ;;Total ram usage:        3 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 3
  1701 ;; This function calls:
  1702 ;;		___awdiv
  1703 ;;		___awmod
  1704 ;;		_clcd_print
  1705 ;;		_clcd_putch
  1706 ;;		_clear_screen
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712     05EA                     _time_display:	
  1713                           ;psect for function _time_display
  1714                           
  1715     05EA                     l2656:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _time_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1718                           
  1719                           
  1720                           ;microoven.c: 127:     clcd_print("TIME =",(0x80 + 1));
  1721     05EA  30D3               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1722     05EB  00F6               	movwf	clcd_print@str
  1723     05EC  3081               	movlw	129
  1724     05ED  00F7               	movwf	clcd_print@addr
  1725     05EE  120A  158A  2649  120A  118A  	fcall	_clcd_print
  1726     05F3                     l2658:
  1727                           
  1728                           ;microoven.c: 128:     clcd_putch(( sec/10+'0'),(0x80 + 12));
  1729     05F3  308C               	movlw	140
  1730     05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1731     05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1732     05F6  00A8               	movwf	clcd_putch@addr
  1733     05F7  300A               	movlw	10
  1734     05F8  00F2               	movwf	___awdiv@divisor
  1735     05F9  3000               	movlw	0
  1736     05FA  00F3               	movwf	___awdiv@divisor+1
  1737     05FB  083E               	movf	_sec,w
  1738     05FC  00AA               	movwf	??_time_display
  1739     05FD  01AB               	clrf	??_time_display+1
  1740     05FE  082A               	movf	??_time_display,w
  1741     05FF  00F4               	movwf	___awdiv@dividend
  1742     0600  082B               	movf	??_time_display+1,w
  1743     0601  00F5               	movwf	___awdiv@dividend+1
  1744     0602  120A  118A  277A  120A  118A  	fcall	___awdiv
  1745     0607  0872               	movf	?___awdiv,w
  1746     0608  3E30               	addlw	48
  1747     0609  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  1748     060E                     l2660:
  1749                           
  1750                           ;microoven.c: 129:     clcd_putch(( sec%10+'0'),(0x80 + 13));
  1751     060E  308D               	movlw	141
  1752     060F  1283               	bcf	3,5	;RP0=0, select bank0
  1753     0610  1303               	bcf	3,6	;RP1=0, select bank0
  1754     0611  00A8               	movwf	clcd_putch@addr
  1755     0612  300A               	movlw	10
  1756     0613  00A4               	movwf	___awmod@divisor
  1757     0614  3000               	movlw	0
  1758     0615  00A5               	movwf	___awmod@divisor+1
  1759     0616  083E               	movf	_sec,w
  1760     0617  00AA               	movwf	??_time_display
  1761     0618  01AB               	clrf	??_time_display+1
  1762     0619  082A               	movf	??_time_display,w
  1763     061A  00A6               	movwf	___awmod@dividend
  1764     061B  082B               	movf	??_time_display+1,w
  1765     061C  00A7               	movwf	___awmod@dividend+1
  1766     061D  120A  158A  27A7  120A  118A  	fcall	___awmod
  1767     0622  1283               	bcf	3,5	;RP0=0, select bank0
  1768     0623  1303               	bcf	3,6	;RP1=0, select bank0
  1769     0624  0824               	movf	?___awmod,w
  1770     0625  3E30               	addlw	48
  1771     0626  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  1772     062B                     l2662:
  1773                           
  1774                           ;microoven.c: 130:     clcd_putch(':',(0x80 + 11));
  1775     062B  308B               	movlw	139
  1776     062C  1283               	bcf	3,5	;RP0=0, select bank0
  1777     062D  1303               	bcf	3,6	;RP1=0, select bank0
  1778     062E  00A8               	movwf	clcd_putch@addr
  1779     062F  303A               	movlw	58
  1780     0630  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  1781     0635                     l2664:
  1782                           
  1783                           ;microoven.c: 131:     clcd_putch((min/10+'0'),(0x80 + 9));
  1784     0635  3089               	movlw	137
  1785     0636  1283               	bcf	3,5	;RP0=0, select bank0
  1786     0637  1303               	bcf	3,6	;RP1=0, select bank0
  1787     0638  00A8               	movwf	clcd_putch@addr
  1788     0639  300A               	movlw	10
  1789     063A  00F2               	movwf	___awdiv@divisor
  1790     063B  3000               	movlw	0
  1791     063C  00F3               	movwf	___awdiv@divisor+1
  1792     063D  083D               	movf	_min,w
  1793     063E  00AA               	movwf	??_time_display
  1794     063F  01AB               	clrf	??_time_display+1
  1795     0640  082A               	movf	??_time_display,w
  1796     0641  00F4               	movwf	___awdiv@dividend
  1797     0642  082B               	movf	??_time_display+1,w
  1798     0643  00F5               	movwf	___awdiv@dividend+1
  1799     0644  120A  118A  277A  120A  118A  	fcall	___awdiv
  1800     0649  0872               	movf	?___awdiv,w
  1801     064A  3E30               	addlw	48
  1802     064B  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  1803     0650                     l2666:
  1804                           
  1805                           ;microoven.c: 132:     clcd_putch((min%10+'0'),(0x80 + 10));
  1806     0650  308A               	movlw	138
  1807     0651  1283               	bcf	3,5	;RP0=0, select bank0
  1808     0652  1303               	bcf	3,6	;RP1=0, select bank0
  1809     0653  00A8               	movwf	clcd_putch@addr
  1810     0654  300A               	movlw	10
  1811     0655  00A4               	movwf	___awmod@divisor
  1812     0656  3000               	movlw	0
  1813     0657  00A5               	movwf	___awmod@divisor+1
  1814     0658  083D               	movf	_min,w
  1815     0659  00AA               	movwf	??_time_display
  1816     065A  01AB               	clrf	??_time_display+1
  1817     065B  082A               	movf	??_time_display,w
  1818     065C  00A6               	movwf	___awmod@dividend
  1819     065D  082B               	movf	??_time_display+1,w
  1820     065E  00A7               	movwf	___awmod@dividend+1
  1821     065F  120A  158A  27A7  120A  118A  	fcall	___awmod
  1822     0664  1283               	bcf	3,5	;RP0=0, select bank0
  1823     0665  1303               	bcf	3,6	;RP1=0, select bank0
  1824     0666  0824               	movf	?___awmod,w
  1825     0667  3E30               	addlw	48
  1826     0668  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  1827     066D                     l2668:
  1828                           
  1829                           ;microoven.c: 133:     clcd_print("4.START/RESUME",(0xC0 + 1));
  1830     066D  3033               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1831     066E  00F6               	movwf	clcd_print@str
  1832     066F  30C1               	movlw	193
  1833     0670  00F7               	movwf	clcd_print@addr
  1834     0671  120A  158A  2649  120A  118A  	fcall	_clcd_print
  1835     0676                     l2670:
  1836                           
  1837                           ;microoven.c: 134:     clcd_print("5.PAUSE",(0x90 + 1));
  1838     0676  30B3               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1839     0677  00F6               	movwf	clcd_print@str
  1840     0678  3091               	movlw	145
  1841     0679  00F7               	movwf	clcd_print@addr
  1842     067A  120A  158A  2649  120A  118A  	fcall	_clcd_print
  1843     067F                     l2672:
  1844                           
  1845                           ;microoven.c: 135:     clcd_print("6.STOP",(0xD0 + 1));
  1846     067F  30DA               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1847     0680  00F6               	movwf	clcd_print@str
  1848     0681  30D1               	movlw	209
  1849     0682  00F7               	movwf	clcd_print@addr
  1850     0683  120A  158A  2649  120A  118A  	fcall	_clcd_print
  1851     0688                     l2674:
  1852                           
  1853                           ;microoven.c: 137:     if(min==0 && sec==0)
  1854     0688  1283               	bcf	3,5	;RP0=0, select bank0
  1855     0689  1303               	bcf	3,6	;RP1=0, select bank0
  1856     068A  083D               	movf	_min,w
  1857     068B  1D03               	btfss	3,2
  1858     068C  2E8E               	goto	u2651
  1859     068D  2E8F               	goto	u2650
  1860     068E                     u2651:
  1861     068E  2ECD               	goto	l296
  1862     068F                     u2650:
  1863     068F                     l2676:
  1864     068F  083E               	movf	_sec,w
  1865     0690  1D03               	btfss	3,2
  1866     0691  2E93               	goto	u2661
  1867     0692  2E94               	goto	u2660
  1868     0693                     u2661:
  1869     0693  2ECD               	goto	l296
  1870     0694                     u2660:
  1871     0694                     l2678:
  1872                           
  1873                           ;microoven.c: 138:     {;microoven.c: 139:         clear_screen();
  1874     0694  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1875     0699                     l2680:
  1876                           
  1877                           ;microoven.c: 140:         TMR2ON=0;
  1878     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1879     069A  1303               	bcf	3,6	;RP1=0, select bank0
  1880     069B  1112               	bcf	18,2	;volatile
  1881     069C                     l2682:
  1882                           
  1883                           ;microoven.c: 141:         RC2=0;
  1884     069C  1107               	bcf	7,2	;volatile
  1885     069D                     l2684:
  1886                           
  1887                           ;microoven.c: 142:         clcd_print("TIME UP!!!",(0xC0 + 4));
  1888     069D  3084               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1889     069E  00F6               	movwf	clcd_print@str
  1890     069F  30C4               	movlw	196
  1891     06A0  00F7               	movwf	clcd_print@addr
  1892     06A1  120A  158A  2649  120A  118A  	fcall	_clcd_print
  1893     06A6                     l2686:
  1894                           
  1895                           ;microoven.c: 143:         clcd_print("Enjoy your meal",(0x90 + 0));
  1896     06A6  3023               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1897     06A7  00F6               	movwf	clcd_print@str
  1898     06A8  3090               	movlw	144
  1899     06A9  00F7               	movwf	clcd_print@addr
  1900     06AA  120A  158A  2649  120A  118A  	fcall	_clcd_print
  1901     06AF                     l2688:
  1902                           
  1903                           ;microoven.c: 146:         RC1=1;
  1904     06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1905     06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1906     06B1  1487               	bsf	7,1	;volatile
  1907     06B2                     l2690:
  1908                           
  1909                           ;microoven.c: 147:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1910     06B2  301A               	movlw	26
  1911     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1912     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1913     06B5  00AC               	movwf	??_time_display+2
  1914     06B6  305E               	movlw	94
  1915     06B7  00AB               	movwf	??_time_display+1
  1916     06B8  306D               	movlw	109
  1917     06B9  00AA               	movwf	??_time_display
  1918     06BA                     u2917:
  1919     06BA  0BAA               	decfsz	??_time_display,f
  1920     06BB  2EBA               	goto	u2917
  1921     06BC  0BAB               	decfsz	??_time_display+1,f
  1922     06BD  2EBA               	goto	u2917
  1923     06BE  0BAC               	decfsz	??_time_display+2,f
  1924     06BF  2EBA               	goto	u2917
  1925     06C0  2EC1               	nop2
  1926     06C1                     l2692:
  1927                           
  1928                           ;microoven.c: 148:         RC1=0;
  1929     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1930     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1931     06C3  1087               	bcf	7,1	;volatile
  1932     06C4                     l2694:
  1933                           
  1934                           ;microoven.c: 149:         clear_screen();
  1935     06C4  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  1936     06C9                     l2696:
  1937                           
  1938                           ;microoven.c: 150:         operational_flag=0x02;
  1939     06C9  3002               	movlw	2
  1940     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1941     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1942     06CC  00BF               	movwf	_operational_flag
  1943     06CD                     l296:
  1944     06CD  0008               	return
  1945     06CE                     __end_of_time_display:
  1946                           
  1947                           	psect	text2
  1948     01BE                     __ptext2:	
  1949 ;; *************** function _set_time *****************
  1950 ;; Defined at:
  1951 ;;		line 48 in file "microoven.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  key             1    wreg     unsigned char 
  1954 ;;  reset_flag      1   10[BANK0 ] unsigned char 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  key             1   14[BANK0 ] unsigned char 
  1957 ;;  wait            1   13[BANK0 ] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1967 ;;      Params:         0       1       0       0       0
  1968 ;;      Locals:         0       2       0       0       0
  1969 ;;      Temps:          0       2       0       0       0
  1970 ;;      Totals:         0       5       0       0       0
  1971 ;;Total ram usage:        5 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 3
  1974 ;; This function calls:
  1975 ;;		___awdiv
  1976 ;;		___awmod
  1977 ;;		___bmul
  1978 ;;		_clcd_print
  1979 ;;		_clcd_putch
  1980 ;;		_clear_screen
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986     01BE                     _set_time:	
  1987                           ;psect for function _set_time
  1988                           
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1992                           ;set_time@key stored from wreg
  1993     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1994     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1995     01C0  00AE               	movwf	set_time@key
  1996     01C1                     l2596:
  1997                           
  1998                           ;microoven.c: 48: void set_time(unsigned char key,unsigned char reset_flag);microoven.c:
      +                           49: {;microoven.c: 50:     static unsigned char blink_pos=0,key_count=0;;microoven.c: 5
      +                          2:     if(reset_flag== 0XFF)
  1999     01C1  0A2A               	incf	set_time@reset_flag,w
  2000     01C2  1D03               	btfss	3,2
  2001     01C3  29C5               	goto	u2541
  2002     01C4  29C6               	goto	u2540
  2003     01C5                     u2541:
  2004     01C5  29CC               	goto	l2602
  2005     01C6                     u2540:
  2006     01C6                     l2598:
  2007                           
  2008                           ;microoven.c: 53:     {;microoven.c: 54:         blink_pos=0;
  2009     01C6  01BA               	clrf	set_time@blink_pos
  2010                           
  2011                           ;microoven.c: 55:         key_count=0;
  2012     01C7  01B9               	clrf	set_time@key_count
  2013     01C8                     l2600:
  2014                           
  2015                           ;microoven.c: 56:         key= 0xFF;
  2016     01C8  30FF               	movlw	255
  2017     01C9  00AE               	movwf	set_time@key
  2018                           
  2019                           ;microoven.c: 57:         min=0;
  2020     01CA  01BD               	clrf	_min
  2021                           
  2022                           ;microoven.c: 58:         sec=0;
  2023     01CB  01BE               	clrf	_sec
  2024     01CC                     l2602:
  2025                           
  2026                           ;microoven.c: 62:     clcd_print("SET TIME (MM:SS)",(0x80 + 0));
  2027     01CC  3001               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2028     01CD  00F6               	movwf	clcd_print@str
  2029     01CE  3080               	movlw	128
  2030     01CF  00F7               	movwf	clcd_print@addr
  2031     01D0  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2032     01D5                     l2604:
  2033                           
  2034                           ;microoven.c: 63:     clcd_print(" TIME -",(0xC0 + 0));
  2035     01D5  30A3               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2036     01D6  00F6               	movwf	clcd_print@str
  2037     01D7  30C0               	movlw	192
  2038     01D8  00F7               	movwf	clcd_print@addr
  2039     01D9  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2040     01DE                     l2606:
  2041                           
  2042                           ;microoven.c: 64:     clcd_print("*:CLEAR  #:ENTER",(0xD0 + 0));
  2043     01DE  3012               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2044     01DF  00F6               	movwf	clcd_print@str
  2045     01E0  30D0               	movlw	208
  2046     01E1  00F7               	movwf	clcd_print@addr
  2047     01E2  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2048     01E7                     l2608:
  2049                           
  2050                           ;microoven.c: 66:     if(key != '*' && key!='#' && key!=0xFF)
  2051     01E7  302A               	movlw	42
  2052     01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2053     01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2054     01EA  062E               	xorwf	set_time@key,w
  2055     01EB  1903               	btfsc	3,2
  2056     01EC  29EE               	goto	u2551
  2057     01ED  29EF               	goto	u2550
  2058     01EE                     u2551:
  2059     01EE  2A25               	goto	l2628
  2060     01EF                     u2550:
  2061     01EF                     l2610:
  2062     01EF  3023               	movlw	35
  2063     01F0  062E               	xorwf	set_time@key,w
  2064     01F1  1903               	btfsc	3,2
  2065     01F2  29F4               	goto	u2561
  2066     01F3  29F5               	goto	u2560
  2067     01F4                     u2561:
  2068     01F4  2A25               	goto	l2628
  2069     01F5                     u2560:
  2070     01F5                     l2612:
  2071     01F5  0A2E               	incf	set_time@key,w
  2072     01F6  1903               	btfsc	3,2
  2073     01F7  29F9               	goto	u2571
  2074     01F8  29FA               	goto	u2570
  2075     01F9                     u2571:
  2076     01F9  2A25               	goto	l2628
  2077     01FA                     u2570:
  2078     01FA                     l2614:
  2079                           
  2080                           ;microoven.c: 67:     {;microoven.c: 68:         key_count ++;
  2081     01FA  3001               	movlw	1
  2082     01FB  07B9               	addwf	set_time@key_count,f
  2083     01FC                     l2616:
  2084                           
  2085                           ;microoven.c: 69:         if(key_count<=2)
  2086     01FC  3003               	movlw	3
  2087     01FD  0239               	subwf	set_time@key_count,w
  2088     01FE  1803               	skipnc
  2089     01FF  2A01               	goto	u2581
  2090     0200  2A02               	goto	u2580
  2091     0201                     u2581:
  2092     0201  2A10               	goto	l2622
  2093     0202                     u2580:
  2094     0202                     l2618:
  2095                           
  2096                           ;microoven.c: 70:         {;microoven.c: 71:             sec=sec*10+key;
  2097     0202  300A               	movlw	10
  2098     0203  00F2               	movwf	___bmul@multiplicand
  2099     0204  083E               	movf	_sec,w
  2100     0205  120A  158A  25FF  120A  118A  	fcall	___bmul
  2101     020A  1283               	bcf	3,5	;RP0=0, select bank0
  2102     020B  1303               	bcf	3,6	;RP1=0, select bank0
  2103     020C  072E               	addwf	set_time@key,w
  2104     020D  00BE               	movwf	_sec
  2105     020E                     l2620:
  2106                           
  2107                           ;microoven.c: 72:             blink_pos=0;
  2108     020E  01BA               	clrf	set_time@blink_pos
  2109                           
  2110                           ;microoven.c: 74:         }
  2111     020F  2A46               	goto	l2644
  2112     0210                     l2622:
  2113     0210  3005               	movlw	5
  2114     0211  0239               	subwf	set_time@key_count,w
  2115     0212  1803               	skipnc
  2116     0213  2A15               	goto	u2591
  2117     0214  2A16               	goto	u2590
  2118     0215                     u2591:
  2119     0215  2A46               	goto	l2644
  2120     0216                     u2590:
  2121     0216                     l2624:
  2122                           
  2123                           ;microoven.c: 76:         {;microoven.c: 77:             min=min*10+key;
  2124     0216  300A               	movlw	10
  2125     0217  00F2               	movwf	___bmul@multiplicand
  2126     0218  083D               	movf	_min,w
  2127     0219  120A  158A  25FF  120A  118A  	fcall	___bmul
  2128     021E  1283               	bcf	3,5	;RP0=0, select bank0
  2129     021F  1303               	bcf	3,6	;RP1=0, select bank0
  2130     0220  072E               	addwf	set_time@key,w
  2131     0221  00BD               	movwf	_min
  2132     0222                     l2626:
  2133                           
  2134                           ;microoven.c: 78:             blink_pos=1;
  2135     0222  3001               	movlw	1
  2136     0223  00BA               	movwf	set_time@blink_pos
  2137     0224  2A46               	goto	l2644
  2138     0225                     l2628:
  2139     0225  302A               	movlw	42
  2140     0226  062E               	xorwf	set_time@key,w
  2141     0227  1D03               	btfss	3,2
  2142     0228  2A2A               	goto	u2601
  2143     0229  2A2B               	goto	u2600
  2144     022A                     u2601:
  2145     022A  2A37               	goto	l2638
  2146     022B                     u2600:
  2147     022B                     l2630:
  2148                           
  2149                           ;microoven.c: 82:     {;microoven.c: 83:         if(blink_pos)
  2150     022B  083A               	movf	set_time@blink_pos,w
  2151     022C  1903               	btfsc	3,2
  2152     022D  2A2F               	goto	u2611
  2153     022E  2A30               	goto	u2610
  2154     022F                     u2611:
  2155     022F  2A34               	goto	l2636
  2156     0230                     u2610:
  2157     0230                     l2632:
  2158                           
  2159                           ;microoven.c: 84:         {;microoven.c: 85:             min=0;
  2160     0230  01BD               	clrf	_min
  2161     0231                     l2634:
  2162                           
  2163                           ;microoven.c: 86:             key_count=2;
  2164     0231  3002               	movlw	2
  2165     0232  00B9               	movwf	set_time@key_count
  2166                           
  2167                           ;microoven.c: 87:         }
  2168     0233  2A46               	goto	l2644
  2169     0234                     l2636:
  2170                           
  2171                           ;microoven.c: 89:         {;microoven.c: 90:             sec=0;
  2172     0234  01BE               	clrf	_sec
  2173                           
  2174                           ;microoven.c: 91:             key_count=0;
  2175     0235  01B9               	clrf	set_time@key_count
  2176     0236  2A46               	goto	l2644
  2177     0237                     l2638:
  2178     0237  3023               	movlw	35
  2179     0238  062E               	xorwf	set_time@key,w
  2180     0239  1D03               	btfss	3,2
  2181     023A  2A3C               	goto	u2621
  2182     023B  2A3D               	goto	u2620
  2183     023C                     u2621:
  2184     023C  2A46               	goto	l2644
  2185     023D                     u2620:
  2186     023D                     l2640:
  2187                           
  2188                           ;microoven.c: 95:     {;microoven.c: 98:         RC2 =1;
  2189     023D  1507               	bsf	7,2	;volatile
  2190                           
  2191                           ;microoven.c: 100:         TMR2ON=1;
  2192     023E  1512               	bsf	18,2	;volatile
  2193                           
  2194                           ;microoven.c: 102:         operational_flag= 0xDD;
  2195     023F  30DD               	movlw	221
  2196     0240  00BF               	movwf	_operational_flag
  2197     0241                     l2642:
  2198                           
  2199                           ;microoven.c: 103:         clear_screen();
  2200     0241  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  2201     0246                     l2644:
  2202                           
  2203                           ;microoven.c: 106:     if(blink_pos == 0)
  2204     0246  1283               	bcf	3,5	;RP0=0, select bank0
  2205     0247  1303               	bcf	3,6	;RP1=0, select bank0
  2206     0248  083A               	movf	set_time@blink_pos,w
  2207     0249  1D03               	btfss	3,2
  2208     024A  2A4C               	goto	u2631
  2209     024B  2A4D               	goto	u2630
  2210     024C                     u2631:
  2211     024C  2A60               	goto	l2648
  2212     024D                     u2630:
  2213     024D                     l2646:
  2214                           
  2215                           ;microoven.c: 107:     {;microoven.c: 108:          clcd_putch( ' ',(0xC0 + 9));
  2216     024D  30C9               	movlw	201
  2217     024E  00A8               	movwf	clcd_putch@addr
  2218     024F  3020               	movlw	32
  2219     0250  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2220                           
  2221                           ;microoven.c: 109:          clcd_putch( ' ',(0xC0 + 10));
  2222     0255  30CA               	movlw	202
  2223     0256  1283               	bcf	3,5	;RP0=0, select bank0
  2224     0257  1303               	bcf	3,6	;RP1=0, select bank0
  2225     0258  00A8               	movwf	clcd_putch@addr
  2226     0259  3020               	movlw	32
  2227     025A  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2228                           
  2229                           ;microoven.c: 111:     }
  2230     025F  2A72               	goto	l2650
  2231     0260                     l2648:
  2232                           
  2233                           ;microoven.c: 113:     {;microoven.c: 114:         clcd_putch('  ',(0xC0 + 6));
  2234     0260  30C6               	movlw	198
  2235     0261  00A8               	movwf	clcd_putch@addr
  2236     0262  3020               	movlw	32
  2237     0263  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2238                           
  2239                           ;microoven.c: 115:         clcd_putch('  ',(0xC0 + 7));
  2240     0268  30C7               	movlw	199
  2241     0269  1283               	bcf	3,5	;RP0=0, select bank0
  2242     026A  1303               	bcf	3,6	;RP1=0, select bank0
  2243     026B  00A8               	movwf	clcd_putch@addr
  2244     026C  3020               	movlw	32
  2245     026D  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2246     0272                     l2650:
  2247                           
  2248                           ;microoven.c: 117:     for(unsigned char wait=50;wait--;);
  2249     0272  3032               	movlw	50
  2250     0273  1283               	bcf	3,5	;RP0=0, select bank0
  2251     0274  1303               	bcf	3,6	;RP1=0, select bank0
  2252     0275  00AD               	movwf	set_time@wait
  2253     0276                     l2652:
  2254     0276  3001               	movlw	1
  2255     0277  02AD               	subwf	set_time@wait,f
  2256     0278  0A2D               	incf	set_time@wait,w
  2257     0279  1D03               	btfss	3,2
  2258     027A  2A7C               	goto	u2641
  2259     027B  2A7D               	goto	u2640
  2260     027C                     u2641:
  2261     027C  2A76               	goto	l2652
  2262     027D                     u2640:
  2263     027D                     l2654:
  2264                           
  2265                           ;microoven.c: 118:     clcd_putch(( sec/10+'0'),(0xC0 + 9));
  2266     027D  30C9               	movlw	201
  2267     027E  00A8               	movwf	clcd_putch@addr
  2268     027F  300A               	movlw	10
  2269     0280  00F2               	movwf	___awdiv@divisor
  2270     0281  3000               	movlw	0
  2271     0282  00F3               	movwf	___awdiv@divisor+1
  2272     0283  083E               	movf	_sec,w
  2273     0284  00AB               	movwf	??_set_time
  2274     0285  01AC               	clrf	??_set_time+1
  2275     0286  082B               	movf	??_set_time,w
  2276     0287  00F4               	movwf	___awdiv@dividend
  2277     0288  082C               	movf	??_set_time+1,w
  2278     0289  00F5               	movwf	___awdiv@dividend+1
  2279     028A  120A  118A  277A  120A  118A  	fcall	___awdiv
  2280     028F  0872               	movf	?___awdiv,w
  2281     0290  3E30               	addlw	48
  2282     0291  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2283                           
  2284                           ;microoven.c: 119:     clcd_putch(( sec%10+'0'),(0xC0 + 10));
  2285     0296  30CA               	movlw	202
  2286     0297  1283               	bcf	3,5	;RP0=0, select bank0
  2287     0298  1303               	bcf	3,6	;RP1=0, select bank0
  2288     0299  00A8               	movwf	clcd_putch@addr
  2289     029A  300A               	movlw	10
  2290     029B  00A4               	movwf	___awmod@divisor
  2291     029C  3000               	movlw	0
  2292     029D  00A5               	movwf	___awmod@divisor+1
  2293     029E  083E               	movf	_sec,w
  2294     029F  00AB               	movwf	??_set_time
  2295     02A0  01AC               	clrf	??_set_time+1
  2296     02A1  082B               	movf	??_set_time,w
  2297     02A2  00A6               	movwf	___awmod@dividend
  2298     02A3  082C               	movf	??_set_time+1,w
  2299     02A4  00A7               	movwf	___awmod@dividend+1
  2300     02A5  120A  158A  27A7  120A  118A  	fcall	___awmod
  2301     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2302     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2303     02AC  0824               	movf	?___awmod,w
  2304     02AD  3E30               	addlw	48
  2305     02AE  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2306                           
  2307                           ;microoven.c: 120:     clcd_putch(':',(0xC0 + 8));
  2308     02B3  30C8               	movlw	200
  2309     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2310     02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2311     02B6  00A8               	movwf	clcd_putch@addr
  2312     02B7  303A               	movlw	58
  2313     02B8  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2314                           
  2315                           ;microoven.c: 121:     clcd_putch((min/10+'0'),(0xC0 + 6));
  2316     02BD  30C6               	movlw	198
  2317     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2318     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2319     02C0  00A8               	movwf	clcd_putch@addr
  2320     02C1  300A               	movlw	10
  2321     02C2  00F2               	movwf	___awdiv@divisor
  2322     02C3  3000               	movlw	0
  2323     02C4  00F3               	movwf	___awdiv@divisor+1
  2324     02C5  083D               	movf	_min,w
  2325     02C6  00AB               	movwf	??_set_time
  2326     02C7  01AC               	clrf	??_set_time+1
  2327     02C8  082B               	movf	??_set_time,w
  2328     02C9  00F4               	movwf	___awdiv@dividend
  2329     02CA  082C               	movf	??_set_time+1,w
  2330     02CB  00F5               	movwf	___awdiv@dividend+1
  2331     02CC  120A  118A  277A  120A  118A  	fcall	___awdiv
  2332     02D1  0872               	movf	?___awdiv,w
  2333     02D2  3E30               	addlw	48
  2334     02D3  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2335                           
  2336                           ;microoven.c: 122:     clcd_putch((min%10+'0'),(0xC0 + 7));
  2337     02D8  30C7               	movlw	199
  2338     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2339     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2340     02DB  00A8               	movwf	clcd_putch@addr
  2341     02DC  300A               	movlw	10
  2342     02DD  00A4               	movwf	___awmod@divisor
  2343     02DE  3000               	movlw	0
  2344     02DF  00A5               	movwf	___awmod@divisor+1
  2345     02E0  083D               	movf	_min,w
  2346     02E1  00AB               	movwf	??_set_time
  2347     02E2  01AC               	clrf	??_set_time+1
  2348     02E3  082B               	movf	??_set_time,w
  2349     02E4  00A6               	movwf	___awmod@dividend
  2350     02E5  082C               	movf	??_set_time+1,w
  2351     02E6  00A7               	movwf	___awmod@dividend+1
  2352     02E7  120A  158A  27A7  120A  118A  	fcall	___awmod
  2353     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2354     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2355     02EE  0824               	movf	?___awmod,w
  2356     02EF  3E30               	addlw	48
  2357     02F0  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2358     02F5                     l292:
  2359     02F5  0008               	return
  2360     02F6                     __end_of_set_time:
  2361                           
  2362                           	psect	text3
  2363     0DFF                     __ptext3:	
  2364 ;; *************** function ___bmul *****************
  2365 ;; Defined at:
  2366 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  multiplier      1    wreg     unsigned char 
  2369 ;;  multiplicand    1    2[COMMON] unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  multiplier      1    4[COMMON] unsigned char 
  2372 ;;  product         1    3[COMMON] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      unsigned char 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         1       0       0       0       0
  2383 ;;      Locals:         2       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0
  2385 ;;      Totals:         3       0       0       0       0
  2386 ;;Total ram usage:        3 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_set_time
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396     0DFF                     ___bmul:	
  2397                           ;psect for function ___bmul
  2398                           
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2402                           ;___bmul@multiplier stored from wreg
  2403     0DFF  00F4               	movwf	___bmul@multiplier
  2404     0E00                     l2158:
  2405     0E00  01F3               	clrf	___bmul@product
  2406     0E01                     l2160:
  2407     0E01  1C74               	btfss	___bmul@multiplier,0
  2408     0E02  2E04               	goto	u1811
  2409     0E03  2E05               	goto	u1810
  2410     0E04                     u1811:
  2411     0E04  2E07               	goto	l2164
  2412     0E05                     u1810:
  2413     0E05                     l2162:
  2414     0E05  0872               	movf	___bmul@multiplicand,w
  2415     0E06  07F3               	addwf	___bmul@product,f
  2416     0E07                     l2164:
  2417     0E07  1003               	clrc
  2418     0E08  0DF2               	rlf	___bmul@multiplicand,f
  2419     0E09                     l2166:
  2420     0E09  1003               	clrc
  2421     0E0A  0CF4               	rrf	___bmul@multiplier,f
  2422     0E0B  0874               	movf	___bmul@multiplier,w
  2423     0E0C  1D03               	btfss	3,2
  2424     0E0D  2E0F               	goto	u1821
  2425     0E0E  2E10               	goto	u1820
  2426     0E0F                     u1821:
  2427     0E0F  2E01               	goto	l2160
  2428     0E10                     u1820:
  2429     0E10                     l2168:
  2430     0E10  0873               	movf	___bmul@product,w
  2431     0E11                     l432:
  2432     0E11  0008               	return
  2433     0E12                     __end_of___bmul:
  2434                           
  2435                           	psect	text4
  2436     002A                     __ptext4:	
  2437 ;; *************** function _set_temp *****************
  2438 ;; Defined at:
  2439 ;;		line 155 in file "microoven.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  key             1    wreg     unsigned char 
  2442 ;;  reset_flag      1   10[BANK0 ] unsigned char 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  key             1   14[BANK0 ] unsigned char 
  2445 ;;  wait            1   13[BANK0 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       1       0       0       0
  2456 ;;      Locals:         0       2       0       0       0
  2457 ;;      Temps:          0       2       0       0       0
  2458 ;;      Totals:         0       5       0       0       0
  2459 ;;Total ram usage:        5 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 3
  2462 ;; This function calls:
  2463 ;;		___awdiv
  2464 ;;		___awmod
  2465 ;;		___lwdiv
  2466 ;;		___lwmod
  2467 ;;		___wmul
  2468 ;;		_clcd_print
  2469 ;;		_clcd_putch
  2470 ;;		_clear_screen
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     002A                     _set_temp:	
  2477                           ;psect for function _set_temp
  2478                           
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2482                           ;set_temp@key stored from wreg
  2483     002A  1283               	bcf	3,5	;RP0=0, select bank0
  2484     002B  1303               	bcf	3,6	;RP1=0, select bank0
  2485     002C  00AE               	movwf	set_temp@key
  2486     002D                     l2698:
  2487                           
  2488                           ;microoven.c: 155: void set_temp(unsigned char key, unsigned char reset_flag);microoven.
      +                          c: 156: {;microoven.c: 157:     static unsigned char key_count;;microoven.c: 158:     st
      +                          atic unsigned int temp;;microoven.c: 159:     if(reset_flag==0XFF)
  2489     002D  0A2A               	incf	set_temp@reset_flag,w
  2490     002E  1D03               	btfss	3,2
  2491     002F  2831               	goto	u2671
  2492     0030  2832               	goto	u2670
  2493     0031                     u2671:
  2494     0031  2837               	goto	l2704
  2495     0032                     u2670:
  2496     0032                     l2700:
  2497                           
  2498                           ;microoven.c: 160:     {;microoven.c: 163:         key=0xFF;
  2499     0032  30FF               	movlw	255
  2500     0033  00AE               	movwf	set_temp@key
  2501     0034                     l2702:
  2502                           
  2503                           ;microoven.c: 164:         temp=0;
  2504     0034  01B6               	clrf	set_temp@temp
  2505     0035  01B7               	clrf	set_temp@temp+1
  2506                           
  2507                           ;microoven.c: 165:         key_count=0;
  2508     0036  01B8               	clrf	set_temp@key_count
  2509     0037                     l2704:
  2510                           
  2511                           ;microoven.c: 167:       clcd_print("SET TEMP <*C>",(0x80 + 0));
  2512     0037  3051               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2513     0038  00F6               	movwf	clcd_print@str
  2514     0039  3080               	movlw	128
  2515     003A  00F7               	movwf	clcd_print@addr
  2516     003B  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2517     0040                     l2706:
  2518                           
  2519                           ;microoven.c: 168:     clcd_print(" TEMP -",(0xC0 + 0));
  2520     0040  30AB               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2521     0041  00F6               	movwf	clcd_print@str
  2522     0042  30C0               	movlw	192
  2523     0043  00F7               	movwf	clcd_print@addr
  2524     0044  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2525     0049                     l2708:
  2526                           
  2527                           ;microoven.c: 169:     clcd_print("*:CLEAR  #:ENTER",(0xD0 + 0));
  2528     0049  3012               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2529     004A  00F6               	movwf	clcd_print@str
  2530     004B  30D0               	movlw	208
  2531     004C  00F7               	movwf	clcd_print@addr
  2532     004D  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2533     0052                     l2710:
  2534                           
  2535                           ;microoven.c: 171:     clcd_putch(' ',(0xC0 + 8));
  2536     0052  30C8               	movlw	200
  2537     0053  1283               	bcf	3,5	;RP0=0, select bank0
  2538     0054  1303               	bcf	3,6	;RP1=0, select bank0
  2539     0055  00A8               	movwf	clcd_putch@addr
  2540     0056  3020               	movlw	32
  2541     0057  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2542     005C                     l2712:
  2543                           
  2544                           ;microoven.c: 172:     clcd_putch(' ',(0xC0 + 9));
  2545     005C  30C9               	movlw	201
  2546     005D  1283               	bcf	3,5	;RP0=0, select bank0
  2547     005E  1303               	bcf	3,6	;RP1=0, select bank0
  2548     005F  00A8               	movwf	clcd_putch@addr
  2549     0060  3020               	movlw	32
  2550     0061  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2551     0066                     l2714:
  2552                           
  2553                           ;microoven.c: 173:     clcd_putch(' ',(0xC0 + 10));
  2554     0066  30CA               	movlw	202
  2555     0067  1283               	bcf	3,5	;RP0=0, select bank0
  2556     0068  1303               	bcf	3,6	;RP1=0, select bank0
  2557     0069  00A8               	movwf	clcd_putch@addr
  2558     006A  3020               	movlw	32
  2559     006B  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2560     0070                     l2716:
  2561                           
  2562                           ;microoven.c: 174:     for(unsigned char wait=50;wait--;);
  2563     0070  3032               	movlw	50
  2564     0071  1283               	bcf	3,5	;RP0=0, select bank0
  2565     0072  1303               	bcf	3,6	;RP1=0, select bank0
  2566     0073  00AD               	movwf	set_temp@wait
  2567     0074                     l2718:
  2568     0074  3001               	movlw	1
  2569     0075  02AD               	subwf	set_temp@wait,f
  2570     0076  0A2D               	incf	set_temp@wait,w
  2571     0077  1D03               	btfss	3,2
  2572     0078  287A               	goto	u2681
  2573     0079  287B               	goto	u2680
  2574     007A                     u2681:
  2575     007A  2874               	goto	l2718
  2576     007B                     u2680:
  2577     007B                     l2720:
  2578                           
  2579                           ;microoven.c: 176:     clcd_putch((temp/100+'0'),(0xC0 + 8));
  2580     007B  30C8               	movlw	200
  2581     007C  00A8               	movwf	clcd_putch@addr
  2582     007D  3064               	movlw	100
  2583     007E  00F2               	movwf	___lwdiv@divisor
  2584     007F  3000               	movlw	0
  2585     0080  00F3               	movwf	___lwdiv@divisor+1
  2586     0081  0837               	movf	set_temp@temp+1,w
  2587     0082  00F5               	movwf	___lwdiv@dividend+1
  2588     0083  0836               	movf	set_temp@temp,w
  2589     0084  00F4               	movwf	___lwdiv@dividend
  2590     0085  120A  158A  2765  120A  118A  	fcall	___lwdiv
  2591     008A  0872               	movf	?___lwdiv,w
  2592     008B  3E30               	addlw	48
  2593     008C  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2594                           
  2595                           ;microoven.c: 177:     clcd_putch(((temp/10)%10+'0'),(0xC0 + 9));
  2596     0091  30C9               	movlw	201
  2597     0092  1283               	bcf	3,5	;RP0=0, select bank0
  2598     0093  1303               	bcf	3,6	;RP1=0, select bank0
  2599     0094  00A8               	movwf	clcd_putch@addr
  2600     0095  300A               	movlw	10
  2601     0096  00A0               	movwf	___lwmod@divisor
  2602     0097  3000               	movlw	0
  2603     0098  00A1               	movwf	___lwmod@divisor+1
  2604     0099  300A               	movlw	10
  2605     009A  00F2               	movwf	___lwdiv@divisor
  2606     009B  3000               	movlw	0
  2607     009C  00F3               	movwf	___lwdiv@divisor+1
  2608     009D  0837               	movf	set_temp@temp+1,w
  2609     009E  00F5               	movwf	___lwdiv@dividend+1
  2610     009F  0836               	movf	set_temp@temp,w
  2611     00A0  00F4               	movwf	___lwdiv@dividend
  2612     00A1  120A  158A  2765  120A  118A  	fcall	___lwdiv
  2613     00A6  0873               	movf	?___lwdiv+1,w
  2614     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  2615     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  2616     00A9  00A3               	movwf	___lwmod@dividend+1
  2617     00AA  0872               	movf	?___lwdiv,w
  2618     00AB  00A2               	movwf	___lwmod@dividend
  2619     00AC  120A  158A  26EE  120A  118A  	fcall	___lwmod
  2620     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  2621     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  2622     00B3  0820               	movf	?___lwmod,w
  2623     00B4  3E30               	addlw	48
  2624     00B5  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2625                           
  2626                           ;microoven.c: 178:     clcd_putch((temp%10+'0'),(0xC0 + 10));
  2627     00BA  30CA               	movlw	202
  2628     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2629     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2630     00BD  00A8               	movwf	clcd_putch@addr
  2631     00BE  300A               	movlw	10
  2632     00BF  00A0               	movwf	___lwmod@divisor
  2633     00C0  3000               	movlw	0
  2634     00C1  00A1               	movwf	___lwmod@divisor+1
  2635     00C2  0837               	movf	set_temp@temp+1,w
  2636     00C3  00A3               	movwf	___lwmod@dividend+1
  2637     00C4  0836               	movf	set_temp@temp,w
  2638     00C5  00A2               	movwf	___lwmod@dividend
  2639     00C6  120A  158A  26EE  120A  118A  	fcall	___lwmod
  2640     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2641     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2642     00CD  0820               	movf	?___lwmod,w
  2643     00CE  3E30               	addlw	48
  2644     00CF  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2645     00D4                     l2722:
  2646                           
  2647                           ;microoven.c: 181:      if(key != '*' && key!='#' && key!=0xFF)
  2648     00D4  302A               	movlw	42
  2649     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2650     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2651     00D7  062E               	xorwf	set_temp@key,w
  2652     00D8  1903               	btfsc	3,2
  2653     00D9  28DB               	goto	u2691
  2654     00DA  28DC               	goto	u2690
  2655     00DB                     u2691:
  2656     00DB  2907               	goto	l2734
  2657     00DC                     u2690:
  2658     00DC                     l2724:
  2659     00DC  3023               	movlw	35
  2660     00DD  062E               	xorwf	set_temp@key,w
  2661     00DE  1903               	btfsc	3,2
  2662     00DF  28E1               	goto	u2701
  2663     00E0  28E2               	goto	u2700
  2664     00E1                     u2701:
  2665     00E1  2907               	goto	l2734
  2666     00E2                     u2700:
  2667     00E2                     l2726:
  2668     00E2  0A2E               	incf	set_temp@key,w
  2669     00E3  1903               	btfsc	3,2
  2670     00E4  28E6               	goto	u2711
  2671     00E5  28E7               	goto	u2710
  2672     00E6                     u2711:
  2673     00E6  2907               	goto	l2734
  2674     00E7                     u2710:
  2675     00E7                     l2728:
  2676                           
  2677                           ;microoven.c: 182:      {;microoven.c: 183:          if(key_count<3)
  2678     00E7  3003               	movlw	3
  2679     00E8  0238               	subwf	set_temp@key_count,w
  2680     00E9  1803               	skipnc
  2681     00EA  28EC               	goto	u2721
  2682     00EB  28ED               	goto	u2720
  2683     00EC                     u2721:
  2684     00EC  29BD               	goto	l317
  2685     00ED                     u2720:
  2686     00ED                     l2730:
  2687                           
  2688                           ;microoven.c: 184:          {;microoven.c: 185:              temp= temp*10+key;
  2689     00ED  0837               	movf	set_temp@temp+1,w
  2690     00EE  00F3               	movwf	___wmul@multiplier+1
  2691     00EF  0836               	movf	set_temp@temp,w
  2692     00F0  00F2               	movwf	___wmul@multiplier
  2693     00F1  300A               	movlw	10
  2694     00F2  00F4               	movwf	___wmul@multiplicand
  2695     00F3  3000               	movlw	0
  2696     00F4  00F5               	movwf	___wmul@multiplicand+1
  2697     00F5  120A  158A  2693  120A  118A  	fcall	___wmul
  2698     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  2699     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  2700     00FC  082E               	movf	set_temp@key,w
  2701     00FD  0772               	addwf	?___wmul,w
  2702     00FE  00B6               	movwf	set_temp@temp
  2703     00FF  3000               	movlw	0
  2704     0100  1803               	skipnc
  2705     0101  3001               	movlw	1
  2706     0102  0773               	addwf	?___wmul+1,w
  2707     0103  00B7               	movwf	set_temp@temp+1
  2708     0104                     l2732:
  2709                           
  2710                           ;microoven.c: 186:              key_count++;
  2711     0104  3001               	movlw	1
  2712     0105  07B8               	addwf	set_temp@key_count,f
  2713     0106  29BD               	goto	l317
  2714     0107                     l2734:
  2715     0107  302A               	movlw	42
  2716     0108  062E               	xorwf	set_temp@key,w
  2717     0109  1D03               	btfss	3,2
  2718     010A  290C               	goto	u2731
  2719     010B  290D               	goto	u2730
  2720     010C                     u2731:
  2721     010C  2911               	goto	l2738
  2722     010D                     u2730:
  2723     010D                     l2736:
  2724                           
  2725                           ;microoven.c: 190:      {;microoven.c: 191:          temp=0;
  2726     010D  01B6               	clrf	set_temp@temp
  2727     010E  01B7               	clrf	set_temp@temp+1
  2728                           
  2729                           ;microoven.c: 192:          key_count=0;
  2730     010F  01B8               	clrf	set_temp@key_count
  2731                           
  2732                           ;microoven.c: 193:      }
  2733     0110  29BD               	goto	l317
  2734     0111                     l2738:
  2735     0111  3023               	movlw	35
  2736     0112  062E               	xorwf	set_temp@key,w
  2737     0113  1D03               	btfss	3,2
  2738     0114  2916               	goto	u2741
  2739     0115  2917               	goto	u2740
  2740     0116                     u2741:
  2741     0116  29BD               	goto	l317
  2742     0117                     u2740:
  2743     0117                     l2740:
  2744                           
  2745                           ;microoven.c: 195:      {;microoven.c: 196:          if(temp>180)
  2746     0117  3000               	movlw	0
  2747     0118  0237               	subwf	set_temp@temp+1,w
  2748     0119  30B5               	movlw	181
  2749     011A  1903               	skipnz
  2750     011B  0236               	subwf	set_temp@temp,w
  2751     011C  1C03               	skipc
  2752     011D  291F               	goto	u2751
  2753     011E  2920               	goto	u2750
  2754     011F                     u2751:
  2755     011F  2924               	goto	l2744
  2756     0120                     u2750:
  2757     0120                     l2742:
  2758                           
  2759                           ;microoven.c: 198:              temp=180;
  2760     0120  30B4               	movlw	180
  2761     0121  00B6               	movwf	set_temp@temp
  2762     0122  3000               	movlw	0
  2763     0123  00B7               	movwf	set_temp@temp+1
  2764     0124                     l2744:
  2765                           
  2766                           ;microoven.c: 199:          clear_screen();
  2767     0124  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  2768     0129                     l2746:
  2769                           
  2770                           ;microoven.c: 200:          clcd_print("Pre-Heating",(0x80 + 2));
  2771     0129  3078               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2772     012A  00F6               	movwf	clcd_print@str
  2773     012B  3082               	movlw	130
  2774     012C  00F7               	movwf	clcd_print@addr
  2775     012D  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2776     0132                     l2748:
  2777                           
  2778                           ;microoven.c: 201:          clcd_print("Time Rem",(0x90 + 0));
  2779     0132  309A               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2780     0133  00F6               	movwf	clcd_print@str
  2781     0134  3090               	movlw	144
  2782     0135  00F7               	movwf	clcd_print@addr
  2783     0136  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2784     013B                     l2750:
  2785                           
  2786                           ;microoven.c: 202:          clcd_print("sec",(0x90 + 13));
  2787     013B  30E1               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2788     013C  00F6               	movwf	clcd_print@str
  2789     013D  309D               	movlw	157
  2790     013E  00F7               	movwf	clcd_print@addr
  2791     013F  120A  158A  2649  120A  118A  	fcall	_clcd_print
  2792     0144                     l2752:
  2793                           
  2794                           ;microoven.c: 203:          pre_heat_time=60;
  2795     0144  303C               	movlw	60
  2796     0145  1283               	bcf	3,5	;RP0=0, select bank0
  2797     0146  1303               	bcf	3,6	;RP1=0, select bank0
  2798     0147  00BB               	movwf	_pre_heat_time
  2799     0148                     l2754:
  2800                           
  2801                           ;microoven.c: 204:          TMR2ON=1;
  2802     0148  1512               	bsf	18,2	;volatile
  2803                           
  2804                           ;microoven.c: 206:          while(pre_heat_time!=0)
  2805     0149  29AC               	goto	l2758
  2806     014A                     l2756:
  2807                           
  2808                           ;microoven.c: 207:          {;microoven.c: 208:         clcd_putch((pre_heat_time/100+'0
      +                          '),(0x90 + 10));
  2809     014A  309A               	movlw	154
  2810     014B  00A8               	movwf	clcd_putch@addr
  2811     014C  3064               	movlw	100
  2812     014D  00F2               	movwf	___awdiv@divisor
  2813     014E  3000               	movlw	0
  2814     014F  00F3               	movwf	___awdiv@divisor+1
  2815     0150  083B               	movf	_pre_heat_time,w
  2816     0151  00AB               	movwf	??_set_temp
  2817     0152  01AC               	clrf	??_set_temp+1
  2818     0153  082B               	movf	??_set_temp,w
  2819     0154  00F4               	movwf	___awdiv@dividend
  2820     0155  082C               	movf	??_set_temp+1,w
  2821     0156  00F5               	movwf	___awdiv@dividend+1
  2822     0157  120A  118A  277A  120A  118A  	fcall	___awdiv
  2823     015C  0872               	movf	?___awdiv,w
  2824     015D  3E30               	addlw	48
  2825     015E  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2826                           
  2827                           ;microoven.c: 209:         clcd_putch(((pre_heat_time/10)%10+'0'),(0x90 + 11));
  2828     0163  309B               	movlw	155
  2829     0164  1283               	bcf	3,5	;RP0=0, select bank0
  2830     0165  1303               	bcf	3,6	;RP1=0, select bank0
  2831     0166  00A8               	movwf	clcd_putch@addr
  2832     0167  300A               	movlw	10
  2833     0168  00A4               	movwf	___awmod@divisor
  2834     0169  3000               	movlw	0
  2835     016A  00A5               	movwf	___awmod@divisor+1
  2836     016B  300A               	movlw	10
  2837     016C  00F2               	movwf	___awdiv@divisor
  2838     016D  3000               	movlw	0
  2839     016E  00F3               	movwf	___awdiv@divisor+1
  2840     016F  083B               	movf	_pre_heat_time,w
  2841     0170  00AB               	movwf	??_set_temp
  2842     0171  01AC               	clrf	??_set_temp+1
  2843     0172  082B               	movf	??_set_temp,w
  2844     0173  00F4               	movwf	___awdiv@dividend
  2845     0174  082C               	movf	??_set_temp+1,w
  2846     0175  00F5               	movwf	___awdiv@dividend+1
  2847     0176  120A  118A  277A  120A  118A  	fcall	___awdiv
  2848     017B  0873               	movf	?___awdiv+1,w
  2849     017C  1283               	bcf	3,5	;RP0=0, select bank0
  2850     017D  1303               	bcf	3,6	;RP1=0, select bank0
  2851     017E  00A7               	movwf	___awmod@dividend+1
  2852     017F  0872               	movf	?___awdiv,w
  2853     0180  00A6               	movwf	___awmod@dividend
  2854     0181  120A  158A  27A7  120A  118A  	fcall	___awmod
  2855     0186  1283               	bcf	3,5	;RP0=0, select bank0
  2856     0187  1303               	bcf	3,6	;RP1=0, select bank0
  2857     0188  0824               	movf	?___awmod,w
  2858     0189  3E30               	addlw	48
  2859     018A  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2860                           
  2861                           ;microoven.c: 210:         clcd_putch((pre_heat_time%10+'0'),(0x90 + 12));
  2862     018F  309C               	movlw	156
  2863     0190  1283               	bcf	3,5	;RP0=0, select bank0
  2864     0191  1303               	bcf	3,6	;RP1=0, select bank0
  2865     0192  00A8               	movwf	clcd_putch@addr
  2866     0193  300A               	movlw	10
  2867     0194  00A4               	movwf	___awmod@divisor
  2868     0195  3000               	movlw	0
  2869     0196  00A5               	movwf	___awmod@divisor+1
  2870     0197  083B               	movf	_pre_heat_time,w
  2871     0198  00AB               	movwf	??_set_temp
  2872     0199  01AC               	clrf	??_set_temp+1
  2873     019A  082B               	movf	??_set_temp,w
  2874     019B  00A6               	movwf	___awmod@dividend
  2875     019C  082C               	movf	??_set_temp+1,w
  2876     019D  00A7               	movwf	___awmod@dividend+1
  2877     019E  120A  158A  27A7  120A  118A  	fcall	___awmod
  2878     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2879     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2880     01A5  0824               	movf	?___awmod,w
  2881     01A6  3E30               	addlw	48
  2882     01A7  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  2883     01AC                     l2758:
  2884                           
  2885                           ;microoven.c: 206:          while(pre_heat_time!=0)
  2886     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2887     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2888     01AE  083B               	movf	_pre_heat_time,w
  2889     01AF  1D03               	btfss	3,2
  2890     01B0  29B2               	goto	u2761
  2891     01B1  29B3               	goto	u2760
  2892     01B2                     u2761:
  2893     01B2  294A               	goto	l2756
  2894     01B3                     u2760:
  2895     01B3                     l316:
  2896                           
  2897                           ;microoven.c: 213:          TMR2ON=0;
  2898     01B3  1112               	bcf	18,2	;volatile
  2899     01B4                     l2760:
  2900                           
  2901                           ;microoven.c: 214:          clear_screen();
  2902     01B4  120A  158A  25EE  120A  118A  	fcall	_clear_screen
  2903     01B9                     l2762:
  2904                           
  2905                           ;microoven.c: 215:          operational_flag=0x11;
  2906     01B9  3011               	movlw	17
  2907     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2908     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2909     01BC  00BF               	movwf	_operational_flag
  2910     01BD                     l317:
  2911     01BD  0008               	return
  2912     01BE                     __end_of_set_temp:
  2913                           
  2914                           	psect	text5
  2915     0DEE                     __ptext5:	
  2916 ;; *************** function _clear_screen *****************
  2917 ;; Defined at:
  2918 ;;		line 36 in file "microoven.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0
  2934 ;;      Temps:          2       0       0       0       0
  2935 ;;      Totals:         2       0       0       0       0
  2936 ;;Total ram usage:        2 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 2
  2939 ;; This function calls:
  2940 ;;		_clcd_write
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;;		_set_time
  2944 ;;		_time_display
  2945 ;;		_set_temp
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949     0DEE                     _clear_screen:	
  2950                           ;psect for function _clear_screen
  2951                           
  2952     0DEE                     l1564:	
  2953                           ;incstack = 0
  2954                           ; Regs used in _clear_screen: [wreg+status,2+status,0+pclath+cstack]
  2955                           
  2956                           
  2957                           ;microoven.c: 38:     clcd_write(0x01, 0);
  2958     0DEE  01F2               	clrf	clcd_write@mode
  2959     0DEF  3001               	movlw	1
  2960     0DF0  120A  158A  26B8  120A  158A  	fcall	_clcd_write
  2961     0DF5                     l1566:
  2962                           
  2963                           ;microoven.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2964     0DF5  3004               	movlw	4
  2965     0DF6  00F7               	movwf	??_clear_screen+1
  2966     0DF7  303D               	movlw	61
  2967     0DF8  00F6               	movwf	??_clear_screen
  2968     0DF9                     u2927:
  2969     0DF9  0BF6               	decfsz	??_clear_screen,f
  2970     0DFA  2DF9               	goto	u2927
  2971     0DFB  0BF7               	decfsz	??_clear_screen+1,f
  2972     0DFC  2DF9               	goto	u2927
  2973     0DFD  2DFE               	nop2
  2974     0DFE                     l266:
  2975     0DFE  0008               	return
  2976     0DFF                     __end_of_clear_screen:
  2977                           
  2978                           	psect	text6
  2979     0E93                     __ptext6:	
  2980 ;; *************** function ___wmul *****************
  2981 ;; Defined at:
  2982 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  multiplier      2    2[COMMON] unsigned int 
  2985 ;;  multiplicand    2    4[COMMON] unsigned int 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  product         2    6[COMMON] unsigned int 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  2    2[COMMON] unsigned int 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         4       0       0       0       0
  2998 ;;      Locals:         2       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         6       0       0       0       0
  3001 ;;Total ram usage:        6 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 1
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_set_temp
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011     0E93                     ___wmul:	
  3012                           ;psect for function ___wmul
  3013                           
  3014     0E93                     l1664:	
  3015                           ;incstack = 0
  3016                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3017                           
  3018     0E93  01F6               	clrf	___wmul@product
  3019     0E94  01F7               	clrf	___wmul@product+1
  3020     0E95                     l1666:
  3021     0E95  1C72               	btfss	___wmul@multiplier,0
  3022     0E96  2E98               	goto	u1071
  3023     0E97  2E99               	goto	u1070
  3024     0E98                     u1071:
  3025     0E98  2E9F               	goto	l406
  3026     0E99                     u1070:
  3027     0E99                     l1668:
  3028     0E99  0874               	movf	___wmul@multiplicand,w
  3029     0E9A  07F6               	addwf	___wmul@product,f
  3030     0E9B  1803               	skipnc
  3031     0E9C  0AF7               	incf	___wmul@product+1,f
  3032     0E9D  0875               	movf	___wmul@multiplicand+1,w
  3033     0E9E  07F7               	addwf	___wmul@product+1,f
  3034     0E9F                     l406:
  3035     0E9F  3001               	movlw	1
  3036     0EA0                     u1085:
  3037     0EA0  1003               	clrc
  3038     0EA1  0DF4               	rlf	___wmul@multiplicand,f
  3039     0EA2  0DF5               	rlf	___wmul@multiplicand+1,f
  3040     0EA3  3EFF               	addlw	-1
  3041     0EA4  1D03               	skipz
  3042     0EA5  2EA0               	goto	u1085
  3043     0EA6                     l1670:
  3044     0EA6  3001               	movlw	1
  3045     0EA7                     u1095:
  3046     0EA7  1003               	clrc
  3047     0EA8  0CF3               	rrf	___wmul@multiplier+1,f
  3048     0EA9  0CF2               	rrf	___wmul@multiplier,f
  3049     0EAA  3EFF               	addlw	-1
  3050     0EAB  1D03               	skipz
  3051     0EAC  2EA7               	goto	u1095
  3052     0EAD                     l1672:
  3053     0EAD  0872               	movf	___wmul@multiplier,w
  3054     0EAE  0473               	iorwf	___wmul@multiplier+1,w
  3055     0EAF  1D03               	btfss	3,2
  3056     0EB0  2EB2               	goto	u1101
  3057     0EB1  2EB3               	goto	u1100
  3058     0EB2                     u1101:
  3059     0EB2  2E95               	goto	l1666
  3060     0EB3                     u1100:
  3061     0EB3                     l1674:
  3062     0EB3  0877               	movf	___wmul@product+1,w
  3063     0EB4  00F3               	movwf	?___wmul+1
  3064     0EB5  0876               	movf	___wmul@product,w
  3065     0EB6  00F2               	movwf	?___wmul
  3066     0EB7                     l408:
  3067     0EB7  0008               	return
  3068     0EB8                     __end_of___wmul:
  3069                           
  3070                           	psect	text7
  3071     0EEE                     __ptext7:	
  3072 ;; *************** function ___lwmod *****************
  3073 ;; Defined at:
  3074 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  divisor         2    0[BANK0 ] unsigned int 
  3077 ;;  dividend        2    2[BANK0 ] unsigned int 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  counter         1    4[BANK0 ] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  2    0[BANK0 ] unsigned int 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         0       4       0       0       0
  3090 ;;      Locals:         0       1       0       0       0
  3091 ;;      Temps:          0       0       0       0       0
  3092 ;;      Totals:         0       5       0       0       0
  3093 ;;Total ram usage:        5 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_set_temp
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103     0EEE                     ___lwmod:	
  3104                           ;psect for function ___lwmod
  3105                           
  3106     0EEE                     l2254:	
  3107                           ;incstack = 0
  3108                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3109                           
  3110     0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3111     0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3112     0EF0  0820               	movf	___lwmod@divisor,w
  3113     0EF1  0421               	iorwf	___lwmod@divisor+1,w
  3114     0EF2  1903               	btfsc	3,2
  3115     0EF3  2EF5               	goto	u2021
  3116     0EF4  2EF6               	goto	u2020
  3117     0EF5                     u2021:
  3118     0EF5  2F23               	goto	l2272
  3119     0EF6                     u2020:
  3120     0EF6                     l2256:
  3121     0EF6  3001               	movlw	1
  3122     0EF7  00A4               	movwf	___lwmod@counter
  3123     0EF8  2F02               	goto	l2262
  3124     0EF9                     l2258:
  3125     0EF9  3001               	movlw	1
  3126     0EFA                     u2035:
  3127     0EFA  1003               	clrc
  3128     0EFB  0DA0               	rlf	___lwmod@divisor,f
  3129     0EFC  0DA1               	rlf	___lwmod@divisor+1,f
  3130     0EFD  3EFF               	addlw	-1
  3131     0EFE  1D03               	skipz
  3132     0EFF  2EFA               	goto	u2035
  3133     0F00                     l2260:
  3134     0F00  3001               	movlw	1
  3135     0F01  07A4               	addwf	___lwmod@counter,f
  3136     0F02                     l2262:
  3137     0F02  1FA1               	btfss	___lwmod@divisor+1,7
  3138     0F03  2F05               	goto	u2041
  3139     0F04  2F06               	goto	u2040
  3140     0F05                     u2041:
  3141     0F05  2EF9               	goto	l2258
  3142     0F06                     u2040:
  3143     0F06                     l2264:
  3144     0F06  0821               	movf	___lwmod@divisor+1,w
  3145     0F07  0223               	subwf	___lwmod@dividend+1,w
  3146     0F08  1D03               	skipz
  3147     0F09  2F0C               	goto	u2055
  3148     0F0A  0820               	movf	___lwmod@divisor,w
  3149     0F0B  0222               	subwf	___lwmod@dividend,w
  3150     0F0C                     u2055:
  3151     0F0C  1C03               	skipc
  3152     0F0D  2F0F               	goto	u2051
  3153     0F0E  2F10               	goto	u2050
  3154     0F0F                     u2051:
  3155     0F0F  2F16               	goto	l2268
  3156     0F10                     u2050:
  3157     0F10                     l2266:
  3158     0F10  0820               	movf	___lwmod@divisor,w
  3159     0F11  02A2               	subwf	___lwmod@dividend,f
  3160     0F12  0821               	movf	___lwmod@divisor+1,w
  3161     0F13  1C03               	skipc
  3162     0F14  03A3               	decf	___lwmod@dividend+1,f
  3163     0F15  02A3               	subwf	___lwmod@dividend+1,f
  3164     0F16                     l2268:
  3165     0F16  3001               	movlw	1
  3166     0F17                     u2065:
  3167     0F17  1003               	clrc
  3168     0F18  0CA1               	rrf	___lwmod@divisor+1,f
  3169     0F19  0CA0               	rrf	___lwmod@divisor,f
  3170     0F1A  3EFF               	addlw	-1
  3171     0F1B  1D03               	skipz
  3172     0F1C  2F17               	goto	u2065
  3173     0F1D                     l2270:
  3174     0F1D  3001               	movlw	1
  3175     0F1E  02A4               	subwf	___lwmod@counter,f
  3176     0F1F  1D03               	btfss	3,2
  3177     0F20  2F22               	goto	u2071
  3178     0F21  2F23               	goto	u2070
  3179     0F22                     u2071:
  3180     0F22  2F06               	goto	l2264
  3181     0F23                     u2070:
  3182     0F23                     l2272:
  3183     0F23  0823               	movf	___lwmod@dividend+1,w
  3184     0F24  00A1               	movwf	?___lwmod+1
  3185     0F25  0822               	movf	___lwmod@dividend,w
  3186     0F26  00A0               	movwf	?___lwmod
  3187     0F27                     l696:
  3188     0F27  0008               	return
  3189     0F28                     __end_of___lwmod:
  3190                           
  3191                           	psect	text8
  3192     0F65                     __ptext8:	
  3193 ;; *************** function ___lwdiv *****************
  3194 ;; Defined at:
  3195 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  divisor         2    2[COMMON] unsigned int 
  3198 ;;  dividend        2    4[COMMON] unsigned int 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  quotient        2    6[COMMON] unsigned int 
  3201 ;;  counter         1    8[COMMON] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2    2[COMMON] unsigned int 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         4       0       0       0       0
  3212 ;;      Locals:         3       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0
  3214 ;;      Totals:         7       0       0       0       0
  3215 ;;Total ram usage:        7 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_set_temp
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225     0F65                     ___lwdiv:	
  3226                           ;psect for function ___lwdiv
  3227                           
  3228     0F65                     l1716:	
  3229                           ;incstack = 0
  3230                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3231                           
  3232     0F65  01F6               	clrf	___lwdiv@quotient
  3233     0F66  01F7               	clrf	___lwdiv@quotient+1
  3234     0F67                     l1718:
  3235     0F67  0872               	movf	___lwdiv@divisor,w
  3236     0F68  0473               	iorwf	___lwdiv@divisor+1,w
  3237     0F69  1903               	btfsc	3,2
  3238     0F6A  2F6C               	goto	u1201
  3239     0F6B  2F6D               	goto	u1200
  3240     0F6C                     u1201:
  3241     0F6C  2FA2               	goto	l1738
  3242     0F6D                     u1200:
  3243     0F6D                     l1720:
  3244     0F6D  3001               	movlw	1
  3245     0F6E  00F8               	movwf	___lwdiv@counter
  3246     0F6F  2F79               	goto	l1726
  3247     0F70                     l1722:
  3248     0F70  3001               	movlw	1
  3249     0F71                     u1215:
  3250     0F71  1003               	clrc
  3251     0F72  0DF2               	rlf	___lwdiv@divisor,f
  3252     0F73  0DF3               	rlf	___lwdiv@divisor+1,f
  3253     0F74  3EFF               	addlw	-1
  3254     0F75  1D03               	skipz
  3255     0F76  2F71               	goto	u1215
  3256     0F77                     l1724:
  3257     0F77  3001               	movlw	1
  3258     0F78  07F8               	addwf	___lwdiv@counter,f
  3259     0F79                     l1726:
  3260     0F79  1FF3               	btfss	___lwdiv@divisor+1,7
  3261     0F7A  2F7C               	goto	u1221
  3262     0F7B  2F7D               	goto	u1220
  3263     0F7C                     u1221:
  3264     0F7C  2F70               	goto	l1722
  3265     0F7D                     u1220:
  3266     0F7D                     l1728:
  3267     0F7D  3001               	movlw	1
  3268     0F7E                     u1235:
  3269     0F7E  1003               	clrc
  3270     0F7F  0DF6               	rlf	___lwdiv@quotient,f
  3271     0F80  0DF7               	rlf	___lwdiv@quotient+1,f
  3272     0F81  3EFF               	addlw	-1
  3273     0F82  1D03               	skipz
  3274     0F83  2F7E               	goto	u1235
  3275     0F84  0873               	movf	___lwdiv@divisor+1,w
  3276     0F85  0275               	subwf	___lwdiv@dividend+1,w
  3277     0F86  1D03               	skipz
  3278     0F87  2F8A               	goto	u1245
  3279     0F88  0872               	movf	___lwdiv@divisor,w
  3280     0F89  0274               	subwf	___lwdiv@dividend,w
  3281     0F8A                     u1245:
  3282     0F8A  1C03               	skipc
  3283     0F8B  2F8D               	goto	u1241
  3284     0F8C  2F8E               	goto	u1240
  3285     0F8D                     u1241:
  3286     0F8D  2F95               	goto	l1734
  3287     0F8E                     u1240:
  3288     0F8E                     l1730:
  3289     0F8E  0872               	movf	___lwdiv@divisor,w
  3290     0F8F  02F4               	subwf	___lwdiv@dividend,f
  3291     0F90  0873               	movf	___lwdiv@divisor+1,w
  3292     0F91  1C03               	skipc
  3293     0F92  03F5               	decf	___lwdiv@dividend+1,f
  3294     0F93  02F5               	subwf	___lwdiv@dividend+1,f
  3295     0F94                     l1732:
  3296     0F94  1476               	bsf	___lwdiv@quotient,0
  3297     0F95                     l1734:
  3298     0F95  3001               	movlw	1
  3299     0F96                     u1255:
  3300     0F96  1003               	clrc
  3301     0F97  0CF3               	rrf	___lwdiv@divisor+1,f
  3302     0F98  0CF2               	rrf	___lwdiv@divisor,f
  3303     0F99  3EFF               	addlw	-1
  3304     0F9A  1D03               	skipz
  3305     0F9B  2F96               	goto	u1255
  3306     0F9C                     l1736:
  3307     0F9C  3001               	movlw	1
  3308     0F9D  02F8               	subwf	___lwdiv@counter,f
  3309     0F9E  1D03               	btfss	3,2
  3310     0F9F  2FA1               	goto	u1261
  3311     0FA0  2FA2               	goto	u1260
  3312     0FA1                     u1261:
  3313     0FA1  2F7D               	goto	l1728
  3314     0FA2                     u1260:
  3315     0FA2                     l1738:
  3316     0FA2  0877               	movf	___lwdiv@quotient+1,w
  3317     0FA3  00F3               	movwf	?___lwdiv+1
  3318     0FA4  0876               	movf	___lwdiv@quotient,w
  3319     0FA5  00F2               	movwf	?___lwdiv
  3320     0FA6                     l686:
  3321     0FA6  0008               	return
  3322     0FA7                     __end_of___lwdiv:
  3323                           
  3324                           	psect	text9
  3325     0FA7                     __ptext9:	
  3326 ;; *************** function ___awmod *****************
  3327 ;; Defined at:
  3328 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  divisor         2    4[BANK0 ] int 
  3331 ;;  dividend        2    6[BANK0 ] int 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  sign            1    7[COMMON] unsigned char 
  3334 ;;  counter         1    6[COMMON] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  2    4[BANK0 ] int 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         0       4       0       0       0
  3345 ;;      Locals:         2       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0
  3347 ;;      Totals:         2       4       0       0       0
  3348 ;;Total ram usage:        6 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_set_temp
  3355 ;;		_set_time
  3356 ;;		_time_display
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360     0FA7                     ___awmod:	
  3361                           ;psect for function ___awmod
  3362                           
  3363     0FA7                     l2216:	
  3364                           ;incstack = 0
  3365                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3366                           
  3367     0FA7  01F7               	clrf	___awmod@sign
  3368     0FA8                     l2218:
  3369     0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  3370     0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  3371     0FAA  1FA7               	btfss	___awmod@dividend+1,7
  3372     0FAB  2FAD               	goto	u1931
  3373     0FAC  2FAE               	goto	u1930
  3374     0FAD                     u1931:
  3375     0FAD  2FB5               	goto	l2224
  3376     0FAE                     u1930:
  3377     0FAE                     l2220:
  3378     0FAE  09A6               	comf	___awmod@dividend,f
  3379     0FAF  09A7               	comf	___awmod@dividend+1,f
  3380     0FB0  0AA6               	incf	___awmod@dividend,f
  3381     0FB1  1903               	skipnz
  3382     0FB2  0AA7               	incf	___awmod@dividend+1,f
  3383     0FB3                     l2222:
  3384     0FB3  3001               	movlw	1
  3385     0FB4  00F7               	movwf	___awmod@sign
  3386     0FB5                     l2224:
  3387     0FB5  1FA5               	btfss	___awmod@divisor+1,7
  3388     0FB6  2FB8               	goto	u1941
  3389     0FB7  2FB9               	goto	u1940
  3390     0FB8                     u1941:
  3391     0FB8  2FBE               	goto	l2228
  3392     0FB9                     u1940:
  3393     0FB9                     l2226:
  3394     0FB9  09A4               	comf	___awmod@divisor,f
  3395     0FBA  09A5               	comf	___awmod@divisor+1,f
  3396     0FBB  0AA4               	incf	___awmod@divisor,f
  3397     0FBC  1903               	skipnz
  3398     0FBD  0AA5               	incf	___awmod@divisor+1,f
  3399     0FBE                     l2228:
  3400     0FBE  0824               	movf	___awmod@divisor,w
  3401     0FBF  0425               	iorwf	___awmod@divisor+1,w
  3402     0FC0  1903               	btfsc	3,2
  3403     0FC1  2FC3               	goto	u1951
  3404     0FC2  2FC4               	goto	u1950
  3405     0FC3                     u1951:
  3406     0FC3  2FF1               	goto	l2246
  3407     0FC4                     u1950:
  3408     0FC4                     l2230:
  3409     0FC4  3001               	movlw	1
  3410     0FC5  00F6               	movwf	___awmod@counter
  3411     0FC6  2FD0               	goto	l2236
  3412     0FC7                     l2232:
  3413     0FC7  3001               	movlw	1
  3414     0FC8                     u1965:
  3415     0FC8  1003               	clrc
  3416     0FC9  0DA4               	rlf	___awmod@divisor,f
  3417     0FCA  0DA5               	rlf	___awmod@divisor+1,f
  3418     0FCB  3EFF               	addlw	-1
  3419     0FCC  1D03               	skipz
  3420     0FCD  2FC8               	goto	u1965
  3421     0FCE                     l2234:
  3422     0FCE  3001               	movlw	1
  3423     0FCF  07F6               	addwf	___awmod@counter,f
  3424     0FD0                     l2236:
  3425     0FD0  1FA5               	btfss	___awmod@divisor+1,7
  3426     0FD1  2FD3               	goto	u1971
  3427     0FD2  2FD4               	goto	u1970
  3428     0FD3                     u1971:
  3429     0FD3  2FC7               	goto	l2232
  3430     0FD4                     u1970:
  3431     0FD4                     l2238:
  3432     0FD4  0825               	movf	___awmod@divisor+1,w
  3433     0FD5  0227               	subwf	___awmod@dividend+1,w
  3434     0FD6  1D03               	skipz
  3435     0FD7  2FDA               	goto	u1985
  3436     0FD8  0824               	movf	___awmod@divisor,w
  3437     0FD9  0226               	subwf	___awmod@dividend,w
  3438     0FDA                     u1985:
  3439     0FDA  1C03               	skipc
  3440     0FDB  2FDD               	goto	u1981
  3441     0FDC  2FDE               	goto	u1980
  3442     0FDD                     u1981:
  3443     0FDD  2FE4               	goto	l2242
  3444     0FDE                     u1980:
  3445     0FDE                     l2240:
  3446     0FDE  0824               	movf	___awmod@divisor,w
  3447     0FDF  02A6               	subwf	___awmod@dividend,f
  3448     0FE0  0825               	movf	___awmod@divisor+1,w
  3449     0FE1  1C03               	skipc
  3450     0FE2  03A7               	decf	___awmod@dividend+1,f
  3451     0FE3  02A7               	subwf	___awmod@dividend+1,f
  3452     0FE4                     l2242:
  3453     0FE4  3001               	movlw	1
  3454     0FE5                     u1995:
  3455     0FE5  1003               	clrc
  3456     0FE6  0CA5               	rrf	___awmod@divisor+1,f
  3457     0FE7  0CA4               	rrf	___awmod@divisor,f
  3458     0FE8  3EFF               	addlw	-1
  3459     0FE9  1D03               	skipz
  3460     0FEA  2FE5               	goto	u1995
  3461     0FEB                     l2244:
  3462     0FEB  3001               	movlw	1
  3463     0FEC  02F6               	subwf	___awmod@counter,f
  3464     0FED  1D03               	btfss	3,2
  3465     0FEE  2FF0               	goto	u2001
  3466     0FEF  2FF1               	goto	u2000
  3467     0FF0                     u2001:
  3468     0FF0  2FD4               	goto	l2238
  3469     0FF1                     u2000:
  3470     0FF1                     l2246:
  3471     0FF1  0877               	movf	___awmod@sign,w
  3472     0FF2  1903               	btfsc	3,2
  3473     0FF3  2FF5               	goto	u2011
  3474     0FF4  2FF6               	goto	u2010
  3475     0FF5                     u2011:
  3476     0FF5  2FFB               	goto	l2250
  3477     0FF6                     u2010:
  3478     0FF6                     l2248:
  3479     0FF6  09A6               	comf	___awmod@dividend,f
  3480     0FF7  09A7               	comf	___awmod@dividend+1,f
  3481     0FF8  0AA6               	incf	___awmod@dividend,f
  3482     0FF9  1903               	skipnz
  3483     0FFA  0AA7               	incf	___awmod@dividend+1,f
  3484     0FFB                     l2250:
  3485     0FFB  0827               	movf	___awmod@dividend+1,w
  3486     0FFC  00A5               	movwf	?___awmod+1
  3487     0FFD  0826               	movf	___awmod@dividend,w
  3488     0FFE  00A4               	movwf	?___awmod
  3489     0FFF                     l572:
  3490     0FFF  0008               	return
  3491     1000                     __end_of___awmod:
  3492                           
  3493                           	psect	text10
  3494     077A                     __ptext10:	
  3495 ;; *************** function ___awdiv *****************
  3496 ;; Defined at:
  3497 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  divisor         2    2[COMMON] int 
  3500 ;;  dividend        2    4[COMMON] int 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  quotient        2    2[BANK0 ] int 
  3503 ;;  sign            1    1[BANK0 ] unsigned char 
  3504 ;;  counter         1    0[BANK0 ] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  2    2[COMMON] int 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         4       0       0       0       0
  3515 ;;      Locals:         0       4       0       0       0
  3516 ;;      Temps:          0       0       0       0       0
  3517 ;;      Totals:         4       4       0       0       0
  3518 ;;Total ram usage:        8 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 1
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_set_time
  3525 ;;		_time_display
  3526 ;;		_set_temp
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530     077A                     ___awdiv:	
  3531                           ;psect for function ___awdiv
  3532                           
  3533     077A                     l2552:	
  3534                           ;incstack = 0
  3535                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3536                           
  3537     077A  1283               	bcf	3,5	;RP0=0, select bank0
  3538     077B  1303               	bcf	3,6	;RP1=0, select bank0
  3539     077C  01A1               	clrf	___awdiv@sign
  3540     077D                     l2554:
  3541     077D  1FF3               	btfss	___awdiv@divisor+1,7
  3542     077E  2F80               	goto	u2441
  3543     077F  2F81               	goto	u2440
  3544     0780                     u2441:
  3545     0780  2F88               	goto	l2560
  3546     0781                     u2440:
  3547     0781                     l2556:
  3548     0781  09F2               	comf	___awdiv@divisor,f
  3549     0782  09F3               	comf	___awdiv@divisor+1,f
  3550     0783  0AF2               	incf	___awdiv@divisor,f
  3551     0784  1903               	skipnz
  3552     0785  0AF3               	incf	___awdiv@divisor+1,f
  3553     0786                     l2558:
  3554     0786  3001               	movlw	1
  3555     0787  00A1               	movwf	___awdiv@sign
  3556     0788                     l2560:
  3557     0788  1FF5               	btfss	___awdiv@dividend+1,7
  3558     0789  2F8B               	goto	u2451
  3559     078A  2F8C               	goto	u2450
  3560     078B                     u2451:
  3561     078B  2F93               	goto	l2566
  3562     078C                     u2450:
  3563     078C                     l2562:
  3564     078C  09F4               	comf	___awdiv@dividend,f
  3565     078D  09F5               	comf	___awdiv@dividend+1,f
  3566     078E  0AF4               	incf	___awdiv@dividend,f
  3567     078F  1903               	skipnz
  3568     0790  0AF5               	incf	___awdiv@dividend+1,f
  3569     0791                     l2564:
  3570     0791  3001               	movlw	1
  3571     0792  06A1               	xorwf	___awdiv@sign,f
  3572     0793                     l2566:
  3573     0793  01A2               	clrf	___awdiv@quotient
  3574     0794  01A3               	clrf	___awdiv@quotient+1
  3575     0795                     l2568:
  3576     0795  0872               	movf	___awdiv@divisor,w
  3577     0796  0473               	iorwf	___awdiv@divisor+1,w
  3578     0797  1903               	btfsc	3,2
  3579     0798  2F9A               	goto	u2461
  3580     0799  2F9B               	goto	u2460
  3581     079A                     u2461:
  3582     079A  2FD0               	goto	l2588
  3583     079B                     u2460:
  3584     079B                     l2570:
  3585     079B  3001               	movlw	1
  3586     079C  00A0               	movwf	___awdiv@counter
  3587     079D  2FA7               	goto	l2576
  3588     079E                     l2572:
  3589     079E  3001               	movlw	1
  3590     079F                     u2475:
  3591     079F  1003               	clrc
  3592     07A0  0DF2               	rlf	___awdiv@divisor,f
  3593     07A1  0DF3               	rlf	___awdiv@divisor+1,f
  3594     07A2  3EFF               	addlw	-1
  3595     07A3  1D03               	skipz
  3596     07A4  2F9F               	goto	u2475
  3597     07A5                     l2574:
  3598     07A5  3001               	movlw	1
  3599     07A6  07A0               	addwf	___awdiv@counter,f
  3600     07A7                     l2576:
  3601     07A7  1FF3               	btfss	___awdiv@divisor+1,7
  3602     07A8  2FAA               	goto	u2481
  3603     07A9  2FAB               	goto	u2480
  3604     07AA                     u2481:
  3605     07AA  2F9E               	goto	l2572
  3606     07AB                     u2480:
  3607     07AB                     l2578:
  3608     07AB  3001               	movlw	1
  3609     07AC                     u2495:
  3610     07AC  1003               	clrc
  3611     07AD  0DA2               	rlf	___awdiv@quotient,f
  3612     07AE  0DA3               	rlf	___awdiv@quotient+1,f
  3613     07AF  3EFF               	addlw	-1
  3614     07B0  1D03               	skipz
  3615     07B1  2FAC               	goto	u2495
  3616     07B2  0873               	movf	___awdiv@divisor+1,w
  3617     07B3  0275               	subwf	___awdiv@dividend+1,w
  3618     07B4  1D03               	skipz
  3619     07B5  2FB8               	goto	u2505
  3620     07B6  0872               	movf	___awdiv@divisor,w
  3621     07B7  0274               	subwf	___awdiv@dividend,w
  3622     07B8                     u2505:
  3623     07B8  1C03               	skipc
  3624     07B9  2FBB               	goto	u2501
  3625     07BA  2FBC               	goto	u2500
  3626     07BB                     u2501:
  3627     07BB  2FC3               	goto	l2584
  3628     07BC                     u2500:
  3629     07BC                     l2580:
  3630     07BC  0872               	movf	___awdiv@divisor,w
  3631     07BD  02F4               	subwf	___awdiv@dividend,f
  3632     07BE  0873               	movf	___awdiv@divisor+1,w
  3633     07BF  1C03               	skipc
  3634     07C0  03F5               	decf	___awdiv@dividend+1,f
  3635     07C1  02F5               	subwf	___awdiv@dividend+1,f
  3636     07C2                     l2582:
  3637     07C2  1422               	bsf	___awdiv@quotient,0
  3638     07C3                     l2584:
  3639     07C3  3001               	movlw	1
  3640     07C4                     u2515:
  3641     07C4  1003               	clrc
  3642     07C5  0CF3               	rrf	___awdiv@divisor+1,f
  3643     07C6  0CF2               	rrf	___awdiv@divisor,f
  3644     07C7  3EFF               	addlw	-1
  3645     07C8  1D03               	skipz
  3646     07C9  2FC4               	goto	u2515
  3647     07CA                     l2586:
  3648     07CA  3001               	movlw	1
  3649     07CB  02A0               	subwf	___awdiv@counter,f
  3650     07CC  1D03               	btfss	3,2
  3651     07CD  2FCF               	goto	u2521
  3652     07CE  2FD0               	goto	u2520
  3653     07CF                     u2521:
  3654     07CF  2FAB               	goto	l2578
  3655     07D0                     u2520:
  3656     07D0                     l2588:
  3657     07D0  0821               	movf	___awdiv@sign,w
  3658     07D1  1903               	btfsc	3,2
  3659     07D2  2FD4               	goto	u2531
  3660     07D3  2FD5               	goto	u2530
  3661     07D4                     u2531:
  3662     07D4  2FDA               	goto	l2592
  3663     07D5                     u2530:
  3664     07D5                     l2590:
  3665     07D5  09A2               	comf	___awdiv@quotient,f
  3666     07D6  09A3               	comf	___awdiv@quotient+1,f
  3667     07D7  0AA2               	incf	___awdiv@quotient,f
  3668     07D8  1903               	skipnz
  3669     07D9  0AA3               	incf	___awdiv@quotient+1,f
  3670     07DA                     l2592:
  3671     07DA  0823               	movf	___awdiv@quotient+1,w
  3672     07DB  00F3               	movwf	?___awdiv+1
  3673     07DC  0822               	movf	___awdiv@quotient,w
  3674     07DD  00F2               	movwf	?___awdiv
  3675     07DE                     l559:
  3676     07DE  0008               	return
  3677     07DF                     __end_of___awdiv:
  3678                           
  3679                           	psect	text11
  3680     0E26                     __ptext11:	
  3681 ;; *************** function _read_matrix_keypad *****************
  3682 ;; Defined at:
  3683 ;;		line 111 in file "matrix_keypad.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  mode            1    wreg     unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  mode            1    4[COMMON] unsigned char 
  3688 ;;  key             1    5[COMMON] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      unsigned char 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3698 ;;      Params:         0       0       0       0       0
  3699 ;;      Locals:         2       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0
  3701 ;;      Totals:         2       0       0       0       0
  3702 ;;Total ram usage:        2 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; Hardware stack levels required when called: 2
  3705 ;; This function calls:
  3706 ;;		_scan_keypad
  3707 ;; This function is called by:
  3708 ;;		_main
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712     0E26                     _read_matrix_keypad:	
  3713                           ;psect for function _read_matrix_keypad
  3714                           
  3715                           
  3716                           ;incstack = 0
  3717                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  3718                           ;read_matrix_keypad@mode stored from wreg
  3719     0E26  00F4               	movwf	read_matrix_keypad@mode
  3720     0E27                     l1780:
  3721                           
  3722                           ;matrix_keypad.c: 111: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 112: {;matrix_keypad.c: 113:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          4:     unsigned char key;;matrix_keypad.c: 116:     key = scan_keypad();
  3723     0E27  120A  118A  26CE  120A  158A  	fcall	_scan_keypad
  3724     0E2C  00F5               	movwf	read_matrix_keypad@key
  3725     0E2D                     l1782:
  3726                           
  3727                           ;matrix_keypad.c: 118:     if (mode == 0)
  3728     0E2D  0874               	movf	read_matrix_keypad@mode,w
  3729     0E2E  1D03               	btfss	3,2
  3730     0E2F  2E31               	goto	u1331
  3731     0E30  2E32               	goto	u1330
  3732     0E31                     u1331:
  3733     0E31  2E34               	goto	l1790
  3734     0E32                     u1330:
  3735     0E32                     l1784:
  3736                           
  3737                           ;matrix_keypad.c: 119:     {;matrix_keypad.c: 120:         return key;
  3738     0E32  0875               	movf	read_matrix_keypad@key,w
  3739     0E33  2E48               	goto	l185
  3740     0E34                     l1790:
  3741                           
  3742                           ;matrix_keypad.c: 123:     {;matrix_keypad.c: 124:         if ((key != 0xFF) && once)
  3743     0E34  0A75               	incf	read_matrix_keypad@key,w
  3744     0E35  1903               	btfsc	3,2
  3745     0E36  2E38               	goto	u1341
  3746     0E37  2E39               	goto	u1340
  3747     0E38                     u1341:
  3748     0E38  2E40               	goto	l1802
  3749     0E39                     u1340:
  3750     0E39                     l1792:
  3751     0E39  087B               	movf	read_matrix_keypad@once,w
  3752     0E3A  1903               	btfsc	3,2
  3753     0E3B  2E3D               	goto	u1351
  3754     0E3C  2E3E               	goto	u1350
  3755     0E3D                     u1351:
  3756     0E3D  2E40               	goto	l1802
  3757     0E3E                     u1350:
  3758     0E3E                     l1794:
  3759                           
  3760                           ;matrix_keypad.c: 125:         {;matrix_keypad.c: 126:             once = 0;
  3761     0E3E  01FB               	clrf	read_matrix_keypad@once
  3762     0E3F  2E32               	goto	l1784
  3763     0E40                     l1802:
  3764     0E40  0A75               	incf	read_matrix_keypad@key,w
  3765     0E41  1D03               	btfss	3,2
  3766     0E42  2E44               	goto	u1361
  3767     0E43  2E45               	goto	u1360
  3768     0E44                     u1361:
  3769     0E44  2E47               	goto	l1806
  3770     0E45                     u1360:
  3771     0E45                     l1804:
  3772                           
  3773                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
  3774     0E45  3001               	movlw	1
  3775     0E46  00FB               	movwf	read_matrix_keypad@once
  3776     0E47                     l1806:
  3777                           
  3778                           ;matrix_keypad.c: 136:     return 0xFF;
  3779     0E47  30FF               	movlw	255
  3780     0E48                     l185:
  3781     0E48  0008               	return
  3782     0E49                     __end_of_read_matrix_keypad:
  3783                           
  3784                           	psect	text12
  3785     06CE                     __ptext12:	
  3786 ;; *************** function _scan_keypad *****************
  3787 ;; Defined at:
  3788 ;;		line 24 in file "matrix_keypad.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  i               2    2[COMMON] int 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      unsigned char 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         0       0       0       0       0
  3803 ;;      Locals:         2       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0
  3805 ;;      Totals:         2       0       0       0       0
  3806 ;;Total ram usage:        2 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; Hardware stack levels required when called: 1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_read_matrix_keypad
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816     06CE                     _scan_keypad:	
  3817                           ;psect for function _scan_keypad
  3818                           
  3819     06CE                     l1578:	
  3820                           ;incstack = 0
  3821                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  3822                           
  3823                           
  3824                           ;matrix_keypad.c: 26:     int i;;matrix_keypad.c: 28:     RD3 = 0;
  3825     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3826     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3827     06D0  1188               	bcf	8,3	;volatile
  3828                           
  3829                           ;matrix_keypad.c: 29:     RD2 = 1;
  3830     06D1  1508               	bsf	8,2	;volatile
  3831                           
  3832                           ;matrix_keypad.c: 30:     RD1 = 1;
  3833     06D2  1488               	bsf	8,1	;volatile
  3834                           
  3835                           ;matrix_keypad.c: 31:     RD0 = 1;
  3836     06D3  1408               	bsf	8,0	;volatile
  3837     06D4                     l1580:
  3838                           
  3839                           ;matrix_keypad.c: 33:     for (i = 100; i--; );
  3840     06D4  3064               	movlw	100
  3841     06D5  00F2               	movwf	scan_keypad@i
  3842     06D6  3000               	movlw	0
  3843     06D7  00F3               	movwf	scan_keypad@i+1
  3844     06D8                     l1582:
  3845     06D8  30FF               	movlw	255
  3846     06D9  07F2               	addwf	scan_keypad@i,f
  3847     06DA  1803               	skipnc
  3848     06DB  0AF3               	incf	scan_keypad@i+1,f
  3849     06DC  30FF               	movlw	255
  3850     06DD  07F3               	addwf	scan_keypad@i+1,f
  3851     06DE  0A72               	incf	scan_keypad@i,w
  3852     06DF  1D03               	skipz
  3853     06E0  2EE5               	goto	u911
  3854     06E1  0A73               	incf	scan_keypad@i+1,w
  3855     06E2  1D03               	btfss	3,2
  3856     06E3  2EE5               	goto	u911
  3857     06E4  2EE6               	goto	u910
  3858     06E5                     u911:
  3859     06E5  2ED8               	goto	l1582
  3860     06E6                     u910:
  3861     06E6                     l149:
  3862                           
  3863                           ;matrix_keypad.c: 35:     if (RB0 == 0)
  3864     06E6  1283               	bcf	3,5	;RP0=0, select bank0
  3865     06E7  1303               	bcf	3,6	;RP1=0, select bank0
  3866     06E8  1806               	btfsc	6,0	;volatile
  3867     06E9  2EEB               	goto	u921
  3868     06EA  2EEC               	goto	u920
  3869     06EB                     u921:
  3870     06EB  2EEE               	goto	l150
  3871     06EC                     u920:
  3872     06EC                     l1584:
  3873                           
  3874                           ;matrix_keypad.c: 36:     {;matrix_keypad.c: 37:         return 1;
  3875     06EC  3001               	movlw	1
  3876     06ED  2F79               	goto	l151
  3877     06EE                     l150:	
  3878                           ;matrix_keypad.c: 39:     else if (RB1 == 0)
  3879                           
  3880     06EE  1886               	btfsc	6,1	;volatile
  3881     06EF  2EF1               	goto	u931
  3882     06F0  2EF2               	goto	u930
  3883     06F1                     u931:
  3884     06F1  2EF4               	goto	l153
  3885     06F2                     u930:
  3886     06F2                     l1590:
  3887                           
  3888                           ;matrix_keypad.c: 40:     {;matrix_keypad.c: 41:         return 2;
  3889     06F2  3002               	movlw	2
  3890     06F3  2F79               	goto	l151
  3891     06F4                     l153:	
  3892                           ;matrix_keypad.c: 43:     else if (RB2 == 0)
  3893                           
  3894     06F4  1906               	btfsc	6,2	;volatile
  3895     06F5  2EF7               	goto	u941
  3896     06F6  2EF8               	goto	u940
  3897     06F7                     u941:
  3898     06F7  2EFA               	goto	l152
  3899     06F8                     u940:
  3900     06F8                     l1596:
  3901                           
  3902                           ;matrix_keypad.c: 44:     {;matrix_keypad.c: 45:         return 3;
  3903     06F8  3003               	movlw	3
  3904     06F9  2F79               	goto	l151
  3905     06FA                     l152:
  3906                           
  3907                           ;matrix_keypad.c: 48:     RD3 = 1;
  3908     06FA  1588               	bsf	8,3	;volatile
  3909                           
  3910                           ;matrix_keypad.c: 49:     RD2 = 0;
  3911     06FB  1108               	bcf	8,2	;volatile
  3912                           
  3913                           ;matrix_keypad.c: 50:     RD1 = 1;
  3914     06FC  1488               	bsf	8,1	;volatile
  3915                           
  3916                           ;matrix_keypad.c: 51:     RD0 = 1;
  3917     06FD  1408               	bsf	8,0	;volatile
  3918     06FE                     l1600:
  3919                           
  3920                           ;matrix_keypad.c: 53:     for (i = 100; i--; );
  3921     06FE  3064               	movlw	100
  3922     06FF  00F2               	movwf	scan_keypad@i
  3923     0700  3000               	movlw	0
  3924     0701  00F3               	movwf	scan_keypad@i+1
  3925     0702                     l1602:
  3926     0702  30FF               	movlw	255
  3927     0703  07F2               	addwf	scan_keypad@i,f
  3928     0704  1803               	skipnc
  3929     0705  0AF3               	incf	scan_keypad@i+1,f
  3930     0706  30FF               	movlw	255
  3931     0707  07F3               	addwf	scan_keypad@i+1,f
  3932     0708  0A72               	incf	scan_keypad@i,w
  3933     0709  1D03               	skipz
  3934     070A  2F0F               	goto	u951
  3935     070B  0A73               	incf	scan_keypad@i+1,w
  3936     070C  1D03               	btfss	3,2
  3937     070D  2F0F               	goto	u951
  3938     070E  2F10               	goto	u950
  3939     070F                     u951:
  3940     070F  2F02               	goto	l1602
  3941     0710                     u950:
  3942     0710                     l158:
  3943                           
  3944                           ;matrix_keypad.c: 55:     if (RB0 == 0)
  3945     0710  1283               	bcf	3,5	;RP0=0, select bank0
  3946     0711  1303               	bcf	3,6	;RP1=0, select bank0
  3947     0712  1806               	btfsc	6,0	;volatile
  3948     0713  2F15               	goto	u961
  3949     0714  2F16               	goto	u960
  3950     0715                     u961:
  3951     0715  2F18               	goto	l159
  3952     0716                     u960:
  3953     0716                     l1604:
  3954                           
  3955                           ;matrix_keypad.c: 56:     {;matrix_keypad.c: 57:         return 4;
  3956     0716  3004               	movlw	4
  3957     0717  2F79               	goto	l151
  3958     0718                     l159:	
  3959                           ;matrix_keypad.c: 59:     else if (RB1 == 0)
  3960                           
  3961     0718  1886               	btfsc	6,1	;volatile
  3962     0719  2F1B               	goto	u971
  3963     071A  2F1C               	goto	u970
  3964     071B                     u971:
  3965     071B  2F1E               	goto	l161
  3966     071C                     u970:
  3967     071C                     l1610:
  3968                           
  3969                           ;matrix_keypad.c: 60:     {;matrix_keypad.c: 61:         return 5;
  3970     071C  3005               	movlw	5
  3971     071D  2F79               	goto	l151
  3972     071E                     l161:	
  3973                           ;matrix_keypad.c: 63:     else if (RB2 == 0)
  3974                           
  3975     071E  1906               	btfsc	6,2	;volatile
  3976     071F  2F21               	goto	u981
  3977     0720  2F22               	goto	u980
  3978     0721                     u981:
  3979     0721  2F24               	goto	l160
  3980     0722                     u980:
  3981     0722                     l1616:
  3982                           
  3983                           ;matrix_keypad.c: 64:     {;matrix_keypad.c: 65:         return 6;
  3984     0722  3006               	movlw	6
  3985     0723  2F79               	goto	l151
  3986     0724                     l160:
  3987                           
  3988                           ;matrix_keypad.c: 68:     RD3 = 1;
  3989     0724  1588               	bsf	8,3	;volatile
  3990                           
  3991                           ;matrix_keypad.c: 69:     RD2 = 1;
  3992     0725  1508               	bsf	8,2	;volatile
  3993                           
  3994                           ;matrix_keypad.c: 70:     RD1 = 0;
  3995     0726  1088               	bcf	8,1	;volatile
  3996                           
  3997                           ;matrix_keypad.c: 71:     RD0 = 1;
  3998     0727  1408               	bsf	8,0	;volatile
  3999     0728                     l1620:
  4000                           
  4001                           ;matrix_keypad.c: 73:     for (i = 100; i--; );
  4002     0728  3064               	movlw	100
  4003     0729  00F2               	movwf	scan_keypad@i
  4004     072A  3000               	movlw	0
  4005     072B  00F3               	movwf	scan_keypad@i+1
  4006     072C                     l1622:
  4007     072C  30FF               	movlw	255
  4008     072D  07F2               	addwf	scan_keypad@i,f
  4009     072E  1803               	skipnc
  4010     072F  0AF3               	incf	scan_keypad@i+1,f
  4011     0730  30FF               	movlw	255
  4012     0731  07F3               	addwf	scan_keypad@i+1,f
  4013     0732  0A72               	incf	scan_keypad@i,w
  4014     0733  1D03               	skipz
  4015     0734  2F39               	goto	u991
  4016     0735  0A73               	incf	scan_keypad@i+1,w
  4017     0736  1D03               	btfss	3,2
  4018     0737  2F39               	goto	u991
  4019     0738  2F3A               	goto	u990
  4020     0739                     u991:
  4021     0739  2F2C               	goto	l1622
  4022     073A                     u990:
  4023     073A                     l166:
  4024                           
  4025                           ;matrix_keypad.c: 75:     if (RB0 == 0)
  4026     073A  1283               	bcf	3,5	;RP0=0, select bank0
  4027     073B  1303               	bcf	3,6	;RP1=0, select bank0
  4028     073C  1806               	btfsc	6,0	;volatile
  4029     073D  2F3F               	goto	u1001
  4030     073E  2F40               	goto	u1000
  4031     073F                     u1001:
  4032     073F  2F42               	goto	l167
  4033     0740                     u1000:
  4034     0740                     l1624:
  4035                           
  4036                           ;matrix_keypad.c: 76:     {;matrix_keypad.c: 77:         return 7;
  4037     0740  3007               	movlw	7
  4038     0741  2F79               	goto	l151
  4039     0742                     l167:	
  4040                           ;matrix_keypad.c: 79:     else if (RB1 == 0)
  4041                           
  4042     0742  1886               	btfsc	6,1	;volatile
  4043     0743  2F45               	goto	u1011
  4044     0744  2F46               	goto	u1010
  4045     0745                     u1011:
  4046     0745  2F48               	goto	l169
  4047     0746                     u1010:
  4048     0746                     l1630:
  4049                           
  4050                           ;matrix_keypad.c: 80:     {;matrix_keypad.c: 81:         return 8;
  4051     0746  3008               	movlw	8
  4052     0747  2F79               	goto	l151
  4053     0748                     l169:	
  4054                           ;matrix_keypad.c: 83:     else if (RB2 == 0)
  4055                           
  4056     0748  1906               	btfsc	6,2	;volatile
  4057     0749  2F4B               	goto	u1021
  4058     074A  2F4C               	goto	u1020
  4059     074B                     u1021:
  4060     074B  2F4E               	goto	l168
  4061     074C                     u1020:
  4062     074C                     l1636:
  4063                           
  4064                           ;matrix_keypad.c: 84:     {;matrix_keypad.c: 85:         return 9;
  4065     074C  3009               	movlw	9
  4066     074D  2F79               	goto	l151
  4067     074E                     l168:
  4068                           
  4069                           ;matrix_keypad.c: 88:     RD3 = 1;
  4070     074E  1588               	bsf	8,3	;volatile
  4071                           
  4072                           ;matrix_keypad.c: 89:     RD2 = 1;
  4073     074F  1508               	bsf	8,2	;volatile
  4074                           
  4075                           ;matrix_keypad.c: 90:     RD1 = 1;
  4076     0750  1488               	bsf	8,1	;volatile
  4077                           
  4078                           ;matrix_keypad.c: 91:     RD0 = 0;
  4079     0751  1008               	bcf	8,0	;volatile
  4080     0752                     l1640:
  4081                           
  4082                           ;matrix_keypad.c: 93:     for (i = 100; i--; );
  4083     0752  3064               	movlw	100
  4084     0753  00F2               	movwf	scan_keypad@i
  4085     0754  3000               	movlw	0
  4086     0755  00F3               	movwf	scan_keypad@i+1
  4087     0756                     l1642:
  4088     0756  30FF               	movlw	255
  4089     0757  07F2               	addwf	scan_keypad@i,f
  4090     0758  1803               	skipnc
  4091     0759  0AF3               	incf	scan_keypad@i+1,f
  4092     075A  30FF               	movlw	255
  4093     075B  07F3               	addwf	scan_keypad@i+1,f
  4094     075C  0A72               	incf	scan_keypad@i,w
  4095     075D  1D03               	skipz
  4096     075E  2F63               	goto	u1031
  4097     075F  0A73               	incf	scan_keypad@i+1,w
  4098     0760  1D03               	btfss	3,2
  4099     0761  2F63               	goto	u1031
  4100     0762  2F64               	goto	u1030
  4101     0763                     u1031:
  4102     0763  2F56               	goto	l1642
  4103     0764                     u1030:
  4104     0764                     l174:
  4105                           
  4106                           ;matrix_keypad.c: 95:     if (RB0 == 0)
  4107     0764  1283               	bcf	3,5	;RP0=0, select bank0
  4108     0765  1303               	bcf	3,6	;RP1=0, select bank0
  4109     0766  1806               	btfsc	6,0	;volatile
  4110     0767  2F69               	goto	u1041
  4111     0768  2F6A               	goto	u1040
  4112     0769                     u1041:
  4113     0769  2F6C               	goto	l175
  4114     076A                     u1040:
  4115     076A                     l1644:
  4116                           
  4117                           ;matrix_keypad.c: 96:     {;matrix_keypad.c: 97:         return '*';
  4118     076A  302A               	movlw	42
  4119     076B  2F79               	goto	l151
  4120     076C                     l175:	
  4121                           ;matrix_keypad.c: 99:     else if (RB1 == 0)
  4122                           
  4123     076C  1886               	btfsc	6,1	;volatile
  4124     076D  2F6F               	goto	u1051
  4125     076E  2F70               	goto	u1050
  4126     076F                     u1051:
  4127     076F  2F72               	goto	l177
  4128     0770                     u1050:
  4129     0770                     l1650:
  4130                           
  4131                           ;matrix_keypad.c: 100:     {;matrix_keypad.c: 101:         return 0;
  4132     0770  3000               	movlw	0
  4133     0771  2F79               	goto	l151
  4134     0772                     l177:	
  4135                           ;matrix_keypad.c: 103:     else if (RB2 == 0)
  4136                           
  4137     0772  1906               	btfsc	6,2	;volatile
  4138     0773  2F75               	goto	u1061
  4139     0774  2F76               	goto	u1060
  4140     0775                     u1061:
  4141     0775  2F78               	goto	l1660
  4142     0776                     u1060:
  4143     0776                     l1656:
  4144                           
  4145                           ;matrix_keypad.c: 104:     {;matrix_keypad.c: 105:         return '#';
  4146     0776  3023               	movlw	35
  4147     0777  2F79               	goto	l151
  4148     0778                     l1660:
  4149                           
  4150                           ;matrix_keypad.c: 108:     return 0xFF;
  4151     0778  30FF               	movlw	255
  4152     0779                     l151:
  4153     0779  0008               	return
  4154     077A                     __end_of_scan_keypad:
  4155                           
  4156                           	psect	text13
  4157     0487                     __ptext13:	
  4158 ;; *************** function _power_on_screen *****************
  4159 ;; Defined at:
  4160 ;;		line 17 in file "microoven.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  i               2   15[BANK0 ] unsigned int 
  4165 ;;  i               2   13[BANK0 ] unsigned int 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4175 ;;      Params:         0       0       0       0       0
  4176 ;;      Locals:         0       4       0       0       0
  4177 ;;      Temps:          0       3       0       0       0
  4178 ;;      Totals:         0       7       0       0       0
  4179 ;;Total ram usage:        7 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 3
  4182 ;; This function calls:
  4183 ;;		_clcd_print
  4184 ;;		_clcd_putch
  4185 ;; This function is called by:
  4186 ;;		_main
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190     0487                     _power_on_screen:	
  4191                           ;psect for function _power_on_screen
  4192                           
  4193     0487                     l1810:	
  4194                           ;incstack = 0
  4195                           ; Regs used in _power_on_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4196                           
  4197                           
  4198                           ;microoven.c: 19:     for(unsigned int i=0;i<16;i++)
  4199     0487  1283               	bcf	3,5	;RP0=0, select bank0
  4200     0488  1303               	bcf	3,6	;RP1=0, select bank0
  4201     0489  01AD               	clrf	power_on_screen@i
  4202     048A  01AE               	clrf	power_on_screen@i+1
  4203     048B                     l1816:
  4204                           
  4205                           ;microoven.c: 20:     {;microoven.c: 21:         clcd_putch(0xFF,(0x80 + i));
  4206     048B  082D               	movf	power_on_screen@i,w
  4207     048C  3E80               	addlw	128
  4208     048D  00A8               	movwf	clcd_putch@addr
  4209     048E  30FF               	movlw	255
  4210     048F  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  4211     0494                     l1818:
  4212                           
  4213                           ;microoven.c: 22:     }
  4214     0494  3001               	movlw	1
  4215     0495  1283               	bcf	3,5	;RP0=0, select bank0
  4216     0496  1303               	bcf	3,6	;RP1=0, select bank0
  4217     0497  07AD               	addwf	power_on_screen@i,f
  4218     0498  1803               	skipnc
  4219     0499  0AAE               	incf	power_on_screen@i+1,f
  4220     049A  3000               	movlw	0
  4221     049B  07AE               	addwf	power_on_screen@i+1,f
  4222     049C                     l1820:
  4223     049C  3000               	movlw	0
  4224     049D  022E               	subwf	power_on_screen@i+1,w
  4225     049E  3010               	movlw	16
  4226     049F  1903               	skipnz
  4227     04A0  022D               	subwf	power_on_screen@i,w
  4228     04A1  1C03               	skipc
  4229     04A2  2CA4               	goto	u1371
  4230     04A3  2CA5               	goto	u1370
  4231     04A4                     u1371:
  4232     04A4  2C8B               	goto	l1816
  4233     04A5                     u1370:
  4234     04A5                     l1822:
  4235                           
  4236                           ;microoven.c: 23:     clcd_print("Powering ON",(0xC0 + 2));
  4237     04A5  306C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4238     04A6  00F6               	movwf	clcd_print@str
  4239     04A7  30C2               	movlw	194
  4240     04A8  00F7               	movwf	clcd_print@addr
  4241     04A9  120A  158A  2649  120A  118A  	fcall	_clcd_print
  4242                           
  4243                           ;microoven.c: 24:     clcd_print("Microwave Oven",(0x90 + 1));
  4244     04AE  3042               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4245     04AF  00F6               	movwf	clcd_print@str
  4246     04B0  3091               	movlw	145
  4247     04B1  00F7               	movwf	clcd_print@addr
  4248     04B2  120A  158A  2649  120A  118A  	fcall	_clcd_print
  4249     04B7                     l1824:
  4250                           
  4251                           ;microoven.c: 25:     for(unsigned int i=0;i<16;i++)
  4252     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  4253     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  4254     04B9  01AF               	clrf	power_on_screen@i_181
  4255     04BA  01B0               	clrf	power_on_screen@i_181+1
  4256     04BB                     l1830:
  4257                           
  4258                           ;microoven.c: 26:     {;microoven.c: 27:         clcd_putch(0xFF,(0xD0 + i));
  4259     04BB  082F               	movf	power_on_screen@i_181,w
  4260     04BC  3ED0               	addlw	208
  4261     04BD  00A8               	movwf	clcd_putch@addr
  4262     04BE  30FF               	movlw	255
  4263     04BF  120A  118A  24E4  120A  118A  	fcall	_clcd_putch
  4264     04C4                     l1832:
  4265                           
  4266                           ;microoven.c: 28:     }
  4267     04C4  3001               	movlw	1
  4268     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  4269     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  4270     04C7  07AF               	addwf	power_on_screen@i_181,f
  4271     04C8  1803               	skipnc
  4272     04C9  0AB0               	incf	power_on_screen@i_181+1,f
  4273     04CA  3000               	movlw	0
  4274     04CB  07B0               	addwf	power_on_screen@i_181+1,f
  4275     04CC                     l1834:
  4276     04CC  3000               	movlw	0
  4277     04CD  0230               	subwf	power_on_screen@i_181+1,w
  4278     04CE  3010               	movlw	16
  4279     04CF  1903               	skipnz
  4280     04D0  022F               	subwf	power_on_screen@i_181,w
  4281     04D1  1C03               	skipc
  4282     04D2  2CD4               	goto	u1381
  4283     04D3  2CD5               	goto	u1380
  4284     04D4                     u1381:
  4285     04D4  2CBB               	goto	l1830
  4286     04D5                     u1380:
  4287     04D5                     l1836:
  4288                           
  4289                           ;microoven.c: 31:     _delay((unsigned long)((5000)*(20000000/4000.0)));
  4290     04D5  307F               	movlw	127
  4291     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  4292     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  4293     04D8  00AC               	movwf	??_power_on_screen+2
  4294     04D9  30D4               	movlw	212
  4295     04DA  00AB               	movwf	??_power_on_screen+1
  4296     04DB  3031               	movlw	49
  4297     04DC  00AA               	movwf	??_power_on_screen
  4298     04DD                     u2937:
  4299     04DD  0BAA               	decfsz	??_power_on_screen,f
  4300     04DE  2CDD               	goto	u2937
  4301     04DF  0BAB               	decfsz	??_power_on_screen+1,f
  4302     04E0  2CDD               	goto	u2937
  4303     04E1  0BAC               	decfsz	??_power_on_screen+2,f
  4304     04E2  2CDD               	goto	u2937
  4305     04E3                     l263:
  4306     04E3  0008               	return
  4307     04E4                     __end_of_power_on_screen:
  4308                           
  4309                           	psect	text14
  4310     04E4                     __ptext14:	
  4311 ;; *************** function _clcd_putch *****************
  4312 ;; Defined at:
  4313 ;;		line 57 in file "clcd.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  data            1    wreg     const unsigned char 
  4316 ;;  addr            1    8[BANK0 ] unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  data            1    9[BANK0 ] const unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0, pclath, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4328 ;;      Params:         0       1       0       0       0
  4329 ;;      Locals:         0       1       0       0       0
  4330 ;;      Temps:          0       0       0       0       0
  4331 ;;      Totals:         0       2       0       0       0
  4332 ;;Total ram usage:        2 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 2
  4335 ;; This function calls:
  4336 ;;		_clcd_write
  4337 ;; This function is called by:
  4338 ;;		_power_on_screen
  4339 ;;		_set_time
  4340 ;;		_time_display
  4341 ;;		_set_temp
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345     04E4                     _clcd_putch:	
  4346                           ;psect for function _clcd_putch
  4347                           
  4348                           
  4349                           ;incstack = 0
  4350                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  4351                           ;clcd_putch@data stored from wreg
  4352     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  4353     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  4354     04E6  00A9               	movwf	clcd_putch@data
  4355     04E7                     l1576:
  4356                           
  4357                           ;clcd.c: 57: void clcd_putch(const char data, unsigned char addr);clcd.c: 58: {;clcd.c: 
      +                          59:     clcd_write(addr, 0);
  4358     04E7  01F2               	clrf	clcd_write@mode
  4359     04E8  0828               	movf	clcd_putch@addr,w
  4360     04E9  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4361                           
  4362                           ;clcd.c: 60:     clcd_write(data, 1);
  4363     04EE  01F2               	clrf	clcd_write@mode
  4364     04EF  0AF2               	incf	clcd_write@mode,f
  4365     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  4366     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  4367     04F2  0829               	movf	clcd_putch@data,w
  4368     04F3  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4369     04F8                     l115:
  4370     04F8  0008               	return
  4371     04F9                     __end_of_clcd_putch:
  4372                           
  4373                           	psect	text15
  4374     07DF                     __ptext15:	
  4375 ;; *************** function _init_config *****************
  4376 ;; Defined at:
  4377 ;;		line 21 in file "main.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;		None
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0, pclath, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4391 ;;      Params:         0       0       0       0       0
  4392 ;;      Locals:         0       0       0       0       0
  4393 ;;      Temps:          0       0       0       0       0
  4394 ;;      Totals:         0       0       0       0       0
  4395 ;;Total ram usage:        0 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; Hardware stack levels required when called: 4
  4398 ;; This function calls:
  4399 ;;		_init_clcd
  4400 ;;		_init_matrix_keypad
  4401 ;;		_init_timer2
  4402 ;; This function is called by:
  4403 ;;		_main
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407     07DF                     _init_config:	
  4408                           ;psect for function _init_config
  4409                           
  4410     07DF                     l1764:	
  4411                           ;incstack = 0
  4412                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  4413                           
  4414                           
  4415                           ;main.c: 24:     init_config();
  4416     07DF  120A  158A  25D1  120A  118A  	fcall	_init_clcd
  4417                           
  4418                           ;main.c: 25:     while(1)
  4419     07E4  120A  158A  25DE  120A  118A  	fcall	_init_matrix_keypad
  4420     07E9                     l1766:
  4421                           
  4422                           ;main.c: 28: 
  4423     07E9  1683               	bsf	3,5	;RP0=1, select bank1
  4424     07EA  1303               	bcf	3,6	;RP1=0, select bank1
  4425     07EB  1107               	bcf	7,2	;volatile
  4426     07EC                     l1768:
  4427                           
  4428                           ;main.c: 29:         if(operational_flag==0x02)
  4429     07EC  1283               	bcf	3,5	;RP0=0, select bank0
  4430     07ED  1303               	bcf	3,6	;RP1=0, select bank0
  4431     07EE  1107               	bcf	7,2	;volatile
  4432     07EF                     l1770:
  4433                           
  4434                           ;main.c: 31: 
  4435     07EF  1683               	bsf	3,5	;RP0=1, select bank1
  4436     07F0  1303               	bcf	3,6	;RP1=0, select bank1
  4437     07F1  1087               	bcf	7,1	;volatile
  4438     07F2                     l1772:
  4439                           
  4440                           ;main.c: 32:             if(key == 1)
  4441     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  4442     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  4443     07F4  1087               	bcf	7,1	;volatile
  4444     07F5                     l1774:
  4445                           
  4446                           ;main.c: 34:                 operational_flag=0x11;
  4447     07F5  120A  158A  2612  120A  118A  	fcall	_init_timer2
  4448     07FA                     l1776:
  4449                           
  4450                           ;main.c: 35:                  start_mode=0;
  4451     07FA  170B               	bsf	11,6	;volatile
  4452     07FB                     l1778:
  4453                           
  4454                           ;main.c: 36:                 clcd_print("Power=900W",(0xC0 + 0));
  4455     07FB  178B               	bsf	11,7	;volatile
  4456     07FC                     l51:
  4457     07FC  0008               	return
  4458     07FD                     __end_of_init_config:
  4459                           
  4460                           	psect	text16
  4461     0E12                     __ptext16:	
  4462 ;; *************** function _init_timer2 *****************
  4463 ;; Defined at:
  4464 ;;		line 4 in file "timers.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		None
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4478 ;;      Params:         0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0
  4480 ;;      Temps:          0       0       0       0       0
  4481 ;;      Totals:         0       0       0       0       0
  4482 ;;Total ram usage:        0 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 1
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_init_config
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492     0E12                     _init_timer2:	
  4493                           ;psect for function _init_timer2
  4494                           
  4495     0E12                     l1562:	
  4496                           ;incstack = 0
  4497                           ; Regs used in _init_timer2: []
  4498                           
  4499                           
  4500                           ;timers.c: 9:     TOUTPS3 = 0;
  4501     0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4502     0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4503     0E14  1312               	bcf	18,6	;volatile
  4504                           
  4505                           ;timers.c: 10:     TOUTPS2 = 0;
  4506     0E15  1292               	bcf	18,5	;volatile
  4507                           
  4508                           ;timers.c: 11:     TOUTPS1 = 0;
  4509     0E16  1212               	bcf	18,4	;volatile
  4510                           
  4511                           ;timers.c: 12:     TOUTPS0 = 0;
  4512     0E17  1192               	bcf	18,3	;volatile
  4513                           
  4514                           ;timers.c: 16:     TMR2ON = 0;
  4515     0E18  1112               	bcf	18,2	;volatile
  4516                           
  4517                           ;timers.c: 19:     T2CKPS1 = 0;
  4518     0E19  1092               	bcf	18,1	;volatile
  4519                           
  4520                           ;timers.c: 20:     T2CKPS0 = 0;
  4521     0E1A  1012               	bcf	18,0	;volatile
  4522                           
  4523                           ;timers.c: 23:     TMR2IE = 1;
  4524     0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  4525     0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  4526     0E1D  148C               	bsf	12,1	;volatile
  4527                           
  4528                           ;timers.c: 27:     TMR2IF = 0;
  4529     0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  4530     0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  4531     0E20  108C               	bcf	12,1	;volatile
  4532                           
  4533                           ;timers.c: 30:     PR2 = 250;
  4534     0E21  30FA               	movlw	250
  4535     0E22  1683               	bsf	3,5	;RP0=1, select bank1
  4536     0E23  1303               	bcf	3,6	;RP1=0, select bank1
  4537     0E24  0092               	movwf	18	;volatile
  4538     0E25                     l212:
  4539     0E25  0008               	return
  4540     0E26                     __end_of_init_timer2:
  4541                           
  4542                           	psect	text17
  4543     0DDE                     __ptext17:	
  4544 ;; *************** function _init_matrix_keypad *****************
  4545 ;; Defined at:
  4546 ;;		line 4 in file "matrix_keypad.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4560 ;;      Params:         0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; Hardware stack levels required when called: 1
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_init_config
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574     0DDE                     _init_matrix_keypad:	
  4575                           ;psect for function _init_matrix_keypad
  4576                           
  4577     0DDE                     l1550:	
  4578                           ;incstack = 0
  4579                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  4580                           
  4581                           
  4582                           ;matrix_keypad.c: 8:     TRISB = TRISB | 0x07;
  4583     0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  4584     0DDF  1303               	bcf	3,6	;RP1=0, select bank1
  4585     0DE0  0806               	movf	6,w	;volatile
  4586     0DE1  3807               	iorlw	7
  4587     0DE2  0086               	movwf	6	;volatile
  4588                           
  4589                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  4590     0DE3  0808               	movf	8,w	;volatile
  4591     0DE4  39F0               	andlw	240
  4592     0DE5  0088               	movwf	8	;volatile
  4593     0DE6                     l1552:
  4594                           
  4595                           ;matrix_keypad.c: 15:     nRBPU = 0;
  4596     0DE6  1381               	bcf	1,7	;volatile
  4597     0DE7                     l1554:
  4598                           
  4599                           ;matrix_keypad.c: 18:     RD3 = 1;
  4600     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  4601     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  4602     0DE9  1588               	bsf	8,3	;volatile
  4603     0DEA                     l1556:
  4604                           
  4605                           ;matrix_keypad.c: 19:     RD2 = 1;
  4606     0DEA  1508               	bsf	8,2	;volatile
  4607     0DEB                     l1558:
  4608                           
  4609                           ;matrix_keypad.c: 20:     RD1 = 1;
  4610     0DEB  1488               	bsf	8,1	;volatile
  4611     0DEC                     l1560:
  4612                           
  4613                           ;matrix_keypad.c: 21:     RD0 = 1;
  4614     0DEC  1408               	bsf	8,0	;volatile
  4615     0DED                     l144:
  4616     0DED  0008               	return
  4617     0DEE                     __end_of_init_matrix_keypad:
  4618                           
  4619                           	psect	text18
  4620     0DD1                     __ptext18:	
  4621 ;; *************** function _init_clcd *****************
  4622 ;; Defined at:
  4623 ;;		line 45 in file "clcd.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2, status,0, pclath, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4637 ;;      Params:         0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0
  4640 ;;      Totals:         0       0       0       0       0
  4641 ;;Total ram usage:        0 bytes
  4642 ;; Hardware stack levels used: 1
  4643 ;; Hardware stack levels required when called: 3
  4644 ;; This function calls:
  4645 ;;		_init_display_controller
  4646 ;; This function is called by:
  4647 ;;		_init_config
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651     0DD1                     _init_clcd:	
  4652                           ;psect for function _init_clcd
  4653                           
  4654     0DD1                     l1542:	
  4655                           ;incstack = 0
  4656                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  4657                           
  4658                           
  4659                           ;clcd.c: 48:     TRISD = TRISD & 0x0F;
  4660     0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  4661     0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  4662     0DD3  0808               	movf	8,w	;volatile
  4663     0DD4  390F               	andlw	15
  4664     0DD5  0088               	movwf	8	;volatile
  4665     0DD6                     l1544:
  4666                           
  4667                           ;clcd.c: 51:     TRISE2 = 0;
  4668     0DD6  1109               	bcf	9,2	;volatile
  4669     0DD7                     l1546:
  4670                           
  4671                           ;clcd.c: 52:     TRISE1 = 0;
  4672     0DD7  1089               	bcf	9,1	;volatile
  4673     0DD8                     l1548:
  4674                           
  4675                           ;clcd.c: 54:     init_display_controller();
  4676     0DD8  120A  118A  2424  120A  158A  	fcall	_init_display_controller
  4677     0DDD                     l112:
  4678     0DDD  0008               	return
  4679     0DDE                     __end_of_init_clcd:
  4680                           
  4681                           	psect	text19
  4682     0424                     __ptext19:	
  4683 ;; *************** function _init_display_controller *****************
  4684 ;; Defined at:
  4685 ;;		line 22 in file "clcd.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0, pclath, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0
  4701 ;;      Temps:          2       0       0       0       0
  4702 ;;      Totals:         2       0       0       0       0
  4703 ;;Total ram usage:        2 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 2
  4706 ;; This function calls:
  4707 ;;		_clcd_write
  4708 ;; This function is called by:
  4709 ;;		_init_clcd
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713     0424                     _init_display_controller:	
  4714                           ;psect for function _init_display_controller
  4715                           
  4716     0424                     l1518:	
  4717                           ;incstack = 0
  4718                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  4719                           
  4720                           
  4721                           ;clcd.c: 25:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4722     0424  30C3               	movlw	195
  4723     0425  00F7               	movwf	??_init_display_controller+1
  4724     0426  30CD               	movlw	205
  4725     0427  00F6               	movwf	??_init_display_controller
  4726     0428                     u2947:
  4727     0428  0BF6               	decfsz	??_init_display_controller,f
  4728     0429  2C28               	goto	u2947
  4729     042A  0BF7               	decfsz	??_init_display_controller+1,f
  4730     042B  2C28               	goto	u2947
  4731     042C                     l1520:
  4732                           
  4733                           ;clcd.c: 28:     clcd_write(0x33, 0);
  4734     042C  01F2               	clrf	clcd_write@mode
  4735     042D  3033               	movlw	51
  4736     042E  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4737     0433                     l1522:
  4738                           
  4739                           ;clcd.c: 29:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4740     0433  301B               	movlw	27
  4741     0434  00F7               	movwf	??_init_display_controller+1
  4742     0435  309E               	movlw	158
  4743     0436  00F6               	movwf	??_init_display_controller
  4744     0437                     u2957:
  4745     0437  0BF6               	decfsz	??_init_display_controller,f
  4746     0438  2C37               	goto	u2957
  4747     0439  0BF7               	decfsz	??_init_display_controller+1,f
  4748     043A  2C37               	goto	u2957
  4749     043B  0000               	nop
  4750                           
  4751                           ;clcd.c: 30:     clcd_write(0x33, 0);
  4752     043C  01F2               	clrf	clcd_write@mode
  4753     043D  3033               	movlw	51
  4754     043E  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4755     0443                     l1524:
  4756                           
  4757                           ;clcd.c: 31:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4758     0443  30A6               	movlw	166
  4759     0444  00F6               	movwf	??_init_display_controller
  4760     0445                     u2967:
  4761     0445  0BF6               	decfsz	??_init_display_controller,f
  4762     0446  2C45               	goto	u2967
  4763     0447  0000               	nop
  4764     0448                     l1526:
  4765                           
  4766                           ;clcd.c: 32:     clcd_write(0x33, 0);
  4767     0448  01F2               	clrf	clcd_write@mode
  4768     0449  3033               	movlw	51
  4769     044A  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4770     044F                     l1528:
  4771                           
  4772                           ;clcd.c: 33:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4773     044F  2C50               	nop2	;2 cycle nop
  4774     0450  2C51               	nop2	;2 cycle nop
  4775     0451  0000               	nop
  4776     0452                     l1530:
  4777                           
  4778                           ;clcd.c: 35:     clcd_write(0x02, 0);
  4779     0452  01F2               	clrf	clcd_write@mode
  4780     0453  3002               	movlw	2
  4781     0454  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4782     0459                     l1532:
  4783                           
  4784                           ;clcd.c: 36:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4785     0459  30A6               	movlw	166
  4786     045A  00F6               	movwf	??_init_display_controller
  4787     045B                     u2977:
  4788     045B  0BF6               	decfsz	??_init_display_controller,f
  4789     045C  2C5B               	goto	u2977
  4790     045D  0000               	nop
  4791                           
  4792                           ;clcd.c: 37:     clcd_write(0x28, 0);
  4793     045E  01F2               	clrf	clcd_write@mode
  4794     045F  3028               	movlw	40
  4795     0460  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4796     0465                     l1534:
  4797                           
  4798                           ;clcd.c: 38:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4799     0465  30A6               	movlw	166
  4800     0466  00F6               	movwf	??_init_display_controller
  4801     0467                     u2987:
  4802     0467  0BF6               	decfsz	??_init_display_controller,f
  4803     0468  2C67               	goto	u2987
  4804     0469  0000               	nop
  4805     046A                     l1536:
  4806                           
  4807                           ;clcd.c: 39:     clcd_write(0x01, 0);
  4808     046A  01F2               	clrf	clcd_write@mode
  4809     046B  3001               	movlw	1
  4810     046C  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4811                           
  4812                           ;clcd.c: 40:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4813     0471  3004               	movlw	4
  4814     0472  00F7               	movwf	??_init_display_controller+1
  4815     0473  303D               	movlw	61
  4816     0474  00F6               	movwf	??_init_display_controller
  4817     0475                     u2997:
  4818     0475  0BF6               	decfsz	??_init_display_controller,f
  4819     0476  2C75               	goto	u2997
  4820     0477  0BF7               	decfsz	??_init_display_controller+1,f
  4821     0478  2C75               	goto	u2997
  4822     0479  2C7A               	nop2
  4823     047A                     l1538:
  4824                           
  4825                           ;clcd.c: 41:     clcd_write(0x0C, 0);
  4826     047A  01F2               	clrf	clcd_write@mode
  4827     047B  300C               	movlw	12
  4828     047C  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4829     0481                     l1540:
  4830                           
  4831                           ;clcd.c: 42:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4832     0481  30A6               	movlw	166
  4833     0482  00F6               	movwf	??_init_display_controller
  4834     0483                     u3007:
  4835     0483  0BF6               	decfsz	??_init_display_controller,f
  4836     0484  2C83               	goto	u3007
  4837     0485  0000               	nop
  4838     0486                     l109:
  4839     0486  0008               	return
  4840     0487                     __end_of_init_display_controller:
  4841                           
  4842                           	psect	text20
  4843     0DC7                     __ptext20:	
  4844 ;; *************** function _heat_food *****************
  4845 ;; Defined at:
  4846 ;;		line 218 in file "microoven.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;		None
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      void 
  4853 ;; Registers used:
  4854 ;;		status,2
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4860 ;;      Params:         0       0       0       0       0
  4861 ;;      Locals:         0       0       0       0       0
  4862 ;;      Temps:          0       0       0       0       0
  4863 ;;      Totals:         0       0       0       0       0
  4864 ;;Total ram usage:        0 bytes
  4865 ;; Hardware stack levels used: 1
  4866 ;; Hardware stack levels required when called: 1
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_main
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874     0DC7                     _heat_food:	
  4875                           ;psect for function _heat_food
  4876                           
  4877     0DC7                     l2016:	
  4878                           ;incstack = 0
  4879                           ; Regs used in _heat_food: [status,2]
  4880                           
  4881                           
  4882                           ;microoven.c: 220:         sec=30;
  4883     0DC7  301E               	movlw	30
  4884     0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  4885     0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  4886     0DCA  00BE               	movwf	_sec
  4887     0DCB                     l2018:
  4888                           
  4889                           ;microoven.c: 221:         min=0;
  4890     0DCB  01BD               	clrf	_min
  4891     0DCC                     l2020:
  4892                           
  4893                           ;microoven.c: 222:         RC2=1;
  4894     0DCC  1507               	bsf	7,2	;volatile
  4895     0DCD                     l2022:
  4896                           
  4897                           ;microoven.c: 223:         TMR2ON=1;
  4898     0DCD  1512               	bsf	18,2	;volatile
  4899     0DCE                     l2024:
  4900                           
  4901                           ;microoven.c: 224:         operational_flag=0xDD;
  4902     0DCE  30DD               	movlw	221
  4903     0DCF  00BF               	movwf	_operational_flag
  4904     0DD0                     l320:
  4905     0DD0  0008               	return
  4906     0DD1                     __end_of_heat_food:
  4907                           
  4908                           	psect	text21
  4909     0E6E                     __ptext21:	
  4910 ;; *************** function _display_menu_screen *****************
  4911 ;; Defined at:
  4912 ;;		line 41 in file "microoven.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4926 ;;      Params:         0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0
  4929 ;;      Totals:         0       0       0       0       0
  4930 ;;Total ram usage:        0 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 3
  4933 ;; This function calls:
  4934 ;;		_clcd_print
  4935 ;; This function is called by:
  4936 ;;		_main
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940     0E6E                     _display_menu_screen:	
  4941                           ;psect for function _display_menu_screen
  4942                           
  4943     0E6E                     l1838:	
  4944                           ;incstack = 0
  4945                           ; Regs used in _display_menu_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4946                           
  4947                           
  4948                           ;microoven.c: 43:     clcd_print("1.Micro",(0x80 + 0));
  4949     0E6E  30C3               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4950     0E6F  00F6               	movwf	clcd_print@str
  4951     0E70  3080               	movlw	128
  4952     0E71  00F7               	movwf	clcd_print@addr
  4953     0E72  120A  158A  2649  120A  158A  	fcall	_clcd_print
  4954                           
  4955                           ;microoven.c: 44:     clcd_print("2.Grill",(0xC0 + 0));
  4956     0E77  30BB               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4957     0E78  00F6               	movwf	clcd_print@str
  4958     0E79  30C0               	movlw	192
  4959     0E7A  00F7               	movwf	clcd_print@addr
  4960     0E7B  120A  158A  2649  120A  158A  	fcall	_clcd_print
  4961                           
  4962                           ;microoven.c: 45:     clcd_print("3.Convention",(0x90 + 0));
  4963     0E80  305F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4964     0E81  00F6               	movwf	clcd_print@str
  4965     0E82  3090               	movlw	144
  4966     0E83  00F7               	movwf	clcd_print@addr
  4967     0E84  120A  158A  2649  120A  158A  	fcall	_clcd_print
  4968                           
  4969                           ;microoven.c: 46:     clcd_print("4.Start",(0xD0 + 0));
  4970     0E89  30CB               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4971     0E8A  00F6               	movwf	clcd_print@str
  4972     0E8B  30D0               	movlw	208
  4973     0E8C  00F7               	movwf	clcd_print@addr
  4974     0E8D  120A  158A  2649  120A  158A  	fcall	_clcd_print
  4975     0E92                     l269:
  4976     0E92  0008               	return
  4977     0E93                     __end_of_display_menu_screen:
  4978                           
  4979                           	psect	text22
  4980     0E49                     __ptext22:	
  4981 ;; *************** function _clcd_print *****************
  4982 ;; Defined at:
  4983 ;;		line 64 in file "clcd.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  str             1    6[COMMON] PTR const unsigned char 
  4986 ;;		 -> STR_22(4), STR_21(9), STR_20(12), STR_19(17), 
  4987 ;;		 -> STR_18(8), STR_17(14), STR_16(16), STR_15(11), 
  4988 ;;		 -> STR_14(7), STR_13(8), STR_12(15), STR_11(7), 
  4989 ;;		 -> STR_10(17), STR_9(8), STR_8(17), STR_7(8), 
  4990 ;;		 -> STR_6(13), STR_5(8), STR_4(8), STR_3(15), 
  4991 ;;		 -> STR_2(12), STR_1(11), 
  4992 ;;  addr            1    7[COMMON] unsigned char 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5004 ;;      Params:         2       0       0       0       0
  5005 ;;      Locals:         0       0       0       0       0
  5006 ;;      Temps:          0       0       0       0       0
  5007 ;;      Totals:         2       0       0       0       0
  5008 ;;Total ram usage:        2 bytes
  5009 ;; Hardware stack levels used: 1
  5010 ;; Hardware stack levels required when called: 2
  5011 ;; This function calls:
  5012 ;;		_clcd_write
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;;		_power_on_screen
  5016 ;;		_display_menu_screen
  5017 ;;		_set_time
  5018 ;;		_time_display
  5019 ;;		_set_temp
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023     0E49                     _clcd_print:	
  5024                           ;psect for function _clcd_print
  5025                           
  5026     0E49                     l1568:	
  5027                           ;incstack = 0
  5028                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5029                           
  5030                           
  5031                           ;clcd.c: 64: void clcd_print(const char *str, unsigned char addr);clcd.c: 65: {;clcd.c: 
      +                          66:     clcd_write(addr, 0);
  5032     0E49  01F2               	clrf	clcd_write@mode
  5033     0E4A  0877               	movf	clcd_print@addr,w
  5034     0E4B  120A  158A  26B8  120A  158A  	fcall	_clcd_write
  5035                           
  5036                           ;clcd.c: 68:     while (*str != '\0')
  5037     0E50  2E61               	goto	l1574
  5038     0E51                     l1570:
  5039                           
  5040                           ;clcd.c: 69:     {;clcd.c: 70:         clcd_write(*str, 1);
  5041     0E51  01F2               	clrf	clcd_write@mode
  5042     0E52  0AF2               	incf	clcd_write@mode,f
  5043     0E53  0876               	movf	clcd_print@str,w
  5044     0E54  0084               	movwf	4
  5045     0E55  120A  118A  2500  120A  158A  	fcall	stringdir
  5046     0E5A  120A  158A  26B8  120A  158A  	fcall	_clcd_write
  5047     0E5F                     l1572:
  5048                           
  5049                           ;clcd.c: 71:         str++;
  5050     0E5F  3001               	movlw	1
  5051     0E60  07F6               	addwf	clcd_print@str,f
  5052     0E61                     l1574:
  5053                           
  5054                           ;clcd.c: 68:     while (*str != '\0')
  5055     0E61  0876               	movf	clcd_print@str,w
  5056     0E62  0084               	movwf	4
  5057     0E63  120A  118A  2500  120A  158A  	fcall	stringdir
  5058     0E68  3A00               	xorlw	0
  5059     0E69  1D03               	skipz
  5060     0E6A  2E6C               	goto	u901
  5061     0E6B  2E6D               	goto	u900
  5062     0E6C                     u901:
  5063     0E6C  2E51               	goto	l1570
  5064     0E6D                     u900:
  5065     0E6D                     l121:
  5066     0E6D  0008               	return
  5067     0E6E                     __end_of_clcd_print:
  5068                           
  5069                           	psect	text23
  5070     0EB8                     __ptext23:	
  5071 ;; *************** function _clcd_write *****************
  5072 ;; Defined at:
  5073 ;;		line 5 in file "clcd.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  byte            1    wreg     unsigned char 
  5076 ;;  mode            1    2[COMMON] unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  byte            1    5[COMMON] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5088 ;;      Params:         1       0       0       0       0
  5089 ;;      Locals:         1       0       0       0       0
  5090 ;;      Temps:          2       0       0       0       0
  5091 ;;      Totals:         4       0       0       0       0
  5092 ;;Total ram usage:        4 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 1
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_init_display_controller
  5099 ;;		_clcd_putch
  5100 ;;		_clcd_print
  5101 ;;		_clear_screen
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105     0EB8                     _clcd_write:	
  5106                           ;psect for function _clcd_write
  5107                           
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  5111                           ;clcd_write@byte stored from wreg
  5112     0EB8  00F5               	movwf	clcd_write@byte
  5113     0EB9                     l1498:
  5114                           
  5115                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 6: {;clcd.c:
      +                           7:     RE2 = mode;
  5116     0EB9  1872               	btfsc	clcd_write@mode,0
  5117     0EBA  2EBC               	goto	u871
  5118     0EBB  2EC0               	goto	u870
  5119     0EBC                     u871:
  5120     0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  5121     0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  5122     0EBE  1509               	bsf	9,2	;volatile
  5123     0EBF  2EC3               	goto	u884
  5124     0EC0                     u870:
  5125     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  5126     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  5127     0EC2  1109               	bcf	9,2	;volatile
  5128     0EC3                     u884:
  5129     0EC3                     l1500:
  5130                           
  5131                           ;clcd.c: 9:     PORTD = byte & 0xF0;
  5132     0EC3  0875               	movf	clcd_write@byte,w
  5133     0EC4  39F0               	andlw	240
  5134     0EC5  0088               	movwf	8	;volatile
  5135     0EC6                     l1502:
  5136                           
  5137                           ;clcd.c: 10:     RE1 = 1;
  5138     0EC6  1489               	bsf	9,1	;volatile
  5139     0EC7                     l1504:
  5140                           
  5141                           ;clcd.c: 11:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5142     0EC7  30A6               	movlw	166
  5143     0EC8  00F3               	movwf	??_clcd_write
  5144     0EC9                     u3017:
  5145     0EC9  0BF3               	decfsz	??_clcd_write,f
  5146     0ECA  2EC9               	goto	u3017
  5147     0ECB  0000               	nop
  5148     0ECC                     l1506:
  5149                           
  5150                           ;clcd.c: 12:     RE1 = 0;
  5151     0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  5152     0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  5153     0ECE  1089               	bcf	9,1	;volatile
  5154     0ECF                     l1508:
  5155                           
  5156                           ;clcd.c: 14:     PORTD = (byte & 0x0F) << 4;
  5157     0ECF  0875               	movf	clcd_write@byte,w
  5158     0ED0  390F               	andlw	15
  5159     0ED1  00F3               	movwf	??_clcd_write
  5160     0ED2  3003               	movlw	3
  5161     0ED3                     u895:
  5162     0ED3  1003               	clrc
  5163     0ED4  0DF3               	rlf	??_clcd_write,f
  5164     0ED5  3EFF               	addlw	-1
  5165     0ED6  1D03               	skipz
  5166     0ED7  2ED3               	goto	u895
  5167     0ED8  1003               	clrc
  5168     0ED9  0D73               	rlf	??_clcd_write,w
  5169     0EDA  0088               	movwf	8	;volatile
  5170     0EDB                     l1510:
  5171                           
  5172                           ;clcd.c: 15:     RE1 = 1;
  5173     0EDB  1489               	bsf	9,1	;volatile
  5174     0EDC                     l1512:
  5175                           
  5176                           ;clcd.c: 16:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5177     0EDC  30A6               	movlw	166
  5178     0EDD  00F3               	movwf	??_clcd_write
  5179     0EDE                     u3027:
  5180     0EDE  0BF3               	decfsz	??_clcd_write,f
  5181     0EDF  2EDE               	goto	u3027
  5182     0EE0  0000               	nop
  5183     0EE1                     l1514:
  5184                           
  5185                           ;clcd.c: 17:     RE1 = 0;
  5186     0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  5187     0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  5188     0EE3  1089               	bcf	9,1	;volatile
  5189     0EE4                     l1516:
  5190                           
  5191                           ;clcd.c: 19:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5192     0EE4  301B               	movlw	27
  5193     0EE5  00F4               	movwf	??_clcd_write+1
  5194     0EE6  309E               	movlw	158
  5195     0EE7  00F3               	movwf	??_clcd_write
  5196     0EE8                     u3037:
  5197     0EE8  0BF3               	decfsz	??_clcd_write,f
  5198     0EE9  2EE8               	goto	u3037
  5199     0EEA  0BF4               	decfsz	??_clcd_write+1,f
  5200     0EEB  2EE8               	goto	u3037
  5201     0EEC  0000               	nop
  5202     0EED                     l106:
  5203     0EED  0008               	return
  5204     0EEE                     __end_of_clcd_write:
  5205                           
  5206                           	psect	text24
  5207     0F28                     __ptext24:	
  5208 ;; *************** function _isr *****************
  5209 ;; Defined at:
  5210 ;;		line 6 in file "isr.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;		None
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;		None
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      void 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5224 ;;      Params:         0       0       0       0       0
  5225 ;;      Locals:         0       0       0       0       0
  5226 ;;      Temps:          2       0       0       0       0
  5227 ;;      Totals:         2       0       0       0       0
  5228 ;;Total ram usage:        2 bytes
  5229 ;; Hardware stack levels used: 1
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		Interrupt level 1
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237     0F28                     _isr:	
  5238                           ;psect for function _isr
  5239                           
  5240     0F28                     i1l2134:
  5241                           
  5242                           ;isr.c: 8:     if(TMR2IF)
  5243     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  5244     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  5245     0F2A  1C8C               	btfss	12,1	;volatile
  5246     0F2B  2F2D               	goto	u175_21
  5247     0F2C  2F2E               	goto	u175_20
  5248     0F2D                     u175_21:
  5249     0F2D  2F5E               	goto	i1l234
  5250     0F2E                     u175_20:
  5251     0F2E                     i1l2136:
  5252                           
  5253                           ;isr.c: 9:     {;isr.c: 10:         if( ++count == 20000)
  5254     0F2E  3001               	movlw	1
  5255     0F2F  07F9               	addwf	_count,f
  5256     0F30  1803               	skipnc
  5257     0F31  0AFA               	incf	_count+1,f
  5258     0F32  3000               	movlw	0
  5259     0F33  07FA               	addwf	_count+1,f
  5260     0F34  3020               	movlw	32
  5261     0F35  0679               	xorwf	_count,w
  5262     0F36  304E               	movlw	78
  5263     0F37  1903               	skipnz
  5264     0F38  067A               	xorwf	_count+1,w
  5265     0F39  1D03               	btfss	3,2
  5266     0F3A  2F3C               	goto	u176_21
  5267     0F3B  2F3D               	goto	u176_20
  5268     0F3C                     u176_21:
  5269     0F3C  2F5D               	goto	i1l2156
  5270     0F3D                     u176_20:
  5271     0F3D                     i1l2138:
  5272                           
  5273                           ;isr.c: 11:         {;isr.c: 12:             count = 0;
  5274     0F3D  01F9               	clrf	_count
  5275     0F3E  01FA               	clrf	_count+1
  5276     0F3F                     i1l2140:
  5277                           
  5278                           ;isr.c: 16:             if(sec!=0)
  5279     0F3F  083E               	movf	_sec,w
  5280     0F40  1903               	btfsc	3,2
  5281     0F41  2F43               	goto	u177_21
  5282     0F42  2F44               	goto	u177_20
  5283     0F43                     u177_21:
  5284     0F43  2F47               	goto	i1l2144
  5285     0F44                     u177_20:
  5286     0F44                     i1l2142:
  5287                           
  5288                           ;isr.c: 17:             {;isr.c: 18:                 sec--;
  5289     0F44  3001               	movlw	1
  5290     0F45  02BE               	subwf	_sec,f
  5291                           
  5292                           ;isr.c: 19:             }
  5293     0F46  2F5D               	goto	i1l2156
  5294     0F47                     i1l2144:
  5295     0F47  083E               	movf	_sec,w
  5296     0F48  1D03               	btfss	3,2
  5297     0F49  2F4B               	goto	u178_21
  5298     0F4A  2F4C               	goto	u178_20
  5299     0F4B                     u178_21:
  5300     0F4B  2F55               	goto	i1l2152
  5301     0F4C                     u178_20:
  5302     0F4C                     i1l2146:
  5303     0F4C  083D               	movf	_min,w
  5304     0F4D  1903               	btfsc	3,2
  5305     0F4E  2F50               	goto	u179_21
  5306     0F4F  2F51               	goto	u179_20
  5307     0F50                     u179_21:
  5308     0F50  2F55               	goto	i1l2152
  5309     0F51                     u179_20:
  5310     0F51                     i1l2148:
  5311                           
  5312                           ;isr.c: 21:             {;isr.c: 22:                 min=0;
  5313     0F51  01BD               	clrf	_min
  5314     0F52                     i1l2150:
  5315                           
  5316                           ;isr.c: 23:                 sec=60;
  5317     0F52  303C               	movlw	60
  5318     0F53  00BE               	movwf	_sec
  5319                           
  5320                           ;isr.c: 24:             }
  5321     0F54  2F5D               	goto	i1l2156
  5322     0F55                     i1l2152:
  5323     0F55  083B               	movf	_pre_heat_time,w
  5324     0F56  1903               	btfsc	3,2
  5325     0F57  2F59               	goto	u180_21
  5326     0F58  2F5A               	goto	u180_20
  5327     0F59                     u180_21:
  5328     0F59  2F5D               	goto	i1l230
  5329     0F5A                     u180_20:
  5330     0F5A                     i1l2154:
  5331                           
  5332                           ;isr.c: 26:             {;isr.c: 27:                 pre_heat_time--;
  5333     0F5A  3001               	movlw	1
  5334     0F5B  02BB               	subwf	_pre_heat_time,f
  5335     0F5C  2F5D               	goto	i1l2156
  5336     0F5D                     i1l230:
  5337     0F5D                     i1l2156:
  5338                           
  5339                           ;isr.c: 31:         TMR2IF = 0;
  5340     0F5D  108C               	bcf	12,1	;volatile
  5341     0F5E                     i1l234:
  5342     0F5E  0871               	movf	??_isr+1,w
  5343     0F5F  008A               	movwf	10
  5344     0F60  0E70               	swapf	??_isr,w
  5345     0F61  0083               	movwf	3
  5346     0F62  0EFE               	swapf	btemp,f
  5347     0F63  0E7E               	swapf	btemp,w
  5348     0F64  0009               	retfie
  5349     0F65                     __end_of_isr:
  5350     0002                     ___latbits      equ	2
  5351     007E                     btemp           set	126	;btemp
  5352     007E                     wtemp0          set	126
  5353                           
  5354                           	psect	intentry
  5355     0004                     __pintentry:	
  5356                           ;incstack = 0
  5357                           ; Regs used in _isr: [wreg+status,2+status,0]
  5358                           
  5359     0004                     interrupt_function:
  5360     007E                     saved_w         set	btemp
  5361     0004  00FE               	movwf	btemp
  5362     0005  0E03               	swapf	3,w
  5363     0006  00F0               	movwf	??_isr
  5364     0007  080A               	movf	10,w
  5365     0008  00F1               	movwf	??_isr+1
  5366     0009  120A  158A  2F28   	ljmp	_isr
  5367                           
  5368                           	psect	config
  5369                           
  5370                           ;Config register CONFIG @ 0x2007
  5371                           ;	Oscillator Selection bits
  5372                           ;	FOSC = 0x3, unprogrammed default
  5373                           ;	Watchdog Timer Enable bit
  5374                           ;	WDTE = OFF, WDT disabled
  5375                           ;	Power-up Timer Enable bit
  5376                           ;	PWRTE = 0x1, unprogrammed default
  5377                           ;	Brown-out Reset Enable bit
  5378                           ;	BOREN = 0x1, unprogrammed default
  5379                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5380                           ;	LVP = 0x1, unprogrammed default
  5381                           ;	Data EEPROM Memory Code Protection bit
  5382                           ;	CPD = 0x1, unprogrammed default
  5383                           ;	Flash Program Memory Write Enable bits
  5384                           ;	WRT = 0x3, unprogrammed default
  5385                           ;	In-Circuit Debugger Mode bit
  5386                           ;	DEBUG = 0x1, unprogrammed default
  5387                           ;	Flash Program Memory Code Protection bit
  5388                           ;	CP = 0x1, unprogrammed default
  5389     2007                     	org	8199
  5390     2007  3FFB               	dw	16379

Data Sizes:
    Strings     228
    Constant    0
    Data        2
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     22      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[11]), STR_10(CODE[17]), STR_11(CODE[7]), STR_12(CODE[15]), 
		 -> STR_13(CODE[8]), STR_14(CODE[7]), STR_15(CODE[11]), STR_16(CODE[16]), 
		 -> STR_17(CODE[14]), STR_18(CODE[8]), STR_19(CODE[17]), STR_2(CODE[12]), 
		 -> STR_20(CODE[12]), STR_21(CODE[9]), STR_22(CODE[4]), STR_3(CODE[15]), 
		 -> STR_4(CODE[8]), STR_5(CODE[8]), STR_6(CODE[13]), STR_7(CODE[8]), 
		 -> STR_8(CODE[17]), STR_9(CODE[8]), 


Critical Paths under _main in COMMON

    _set_temp->___lwdiv
    _clear_screen->_clcd_write
    ___lwmod->___lwdiv
    ___awmod->___awdiv
    _read_matrix_keypad->_scan_keypad
    _clcd_putch->___lwdiv
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _display_menu_screen->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_power_on_screen
    _time_display->_clcd_putch
    _set_time->_clcd_putch
    _set_temp->_clcd_putch
    ___awmod->___awdiv
    _power_on_screen->_clcd_putch
    _clcd_putch->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    6524
                                             17 BANK0      5     5      0
                         _clcd_print
                       _clear_screen
                _display_menu_screen
                          _heat_food
                        _init_config
                    _power_on_screen
                 _read_matrix_keypad
                           _set_temp
                           _set_time
                       _time_display
 ---------------------------------------------------------------------------------
 (1) _time_display                                         3     3      0    1014
                                             10 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _set_time                                             5     4      1    1623
                                             10 BANK0      5     4      1
                            ___awdiv
                            ___awmod
                             ___bmul
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1       6
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _set_temp                                             5     4      1    2040
                                             10 BANK0      5     4      1
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (2) _clear_screen                                         2     2      0      92
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      94
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     244
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     166
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     449
                                              6 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     102
                                              2 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     210
                                              4 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _power_on_screen                                      7     7      0     507
                                             10 BANK0      7     7      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     168
                                              8 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0      92
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0      92
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0      92
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _heat_food                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_menu_screen                                  0     0      0     203
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     0      2     203
                                              6 COMMON     2     0      2
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1      92
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clear_screen
     _clcd_write
   _display_menu_screen
     _clcd_print
   _heat_food
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
     _init_timer2
   _power_on_screen
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       _clcd_write (ARG)
   _read_matrix_keypad
     _scan_keypad
   _set_temp
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     ___wmul
     _clcd_print
     _clcd_putch
     _clear_screen
   _set_time
     ___awdiv
     ___awmod
     ___bmul
     _clcd_print
     _clcd_putch
     _clear_screen
   _time_display
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clear_screen

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     22      32     40.0%
BITBANK0            80      0       0      0.0%
COMMON              14      9      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      42      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Feb 28 21:15:37 2025

                              pc 0002                   ___bmul@product 0073                   clcd_print@addr 0077  
                             l51 07FC                               l73 03B4                               l82 03D9  
                             l83 03DC                               l59 0371                     ___awdiv@sign 0021  
                             fsr 0004              ___wmul@multiplicand 0074               _init_matrix_keypad 0DDE  
                            l112 0DDD                              l121 0E6D                              l106 0EED  
                            l115 04F8                              l212 0E25                              l109 0486  
                            l150 06EE                              l151 0779                              l320 0DD0  
                            l144 0DED                              l160 0724                              l152 06FA  
                            l161 071E                              l153 06F4                              l316 01B3  
                            l149 06E6                              l317 01BD                              l174 0764  
                            l166 073A                              l158 0710                              l406 0E9F  
                            l263 04E3                              l175 076C                              l167 0742  
                            l159 0718                              l168 074E                              l408 0EB7  
                            l432 0E11                              l177 0772                              l169 0748  
                            l185 0E48                              l266 0DFE                              l292 02F5  
                            l269 0E92                              l296 06CD                              l572 0FFF  
                            l559 07DE                              l686 0FA6                              l696 0F27  
                            _GIE 005F                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RC1 0039                              _RC2 003A  
                            _RD0 0040                              _RD1 0041                              _RD2 0042  
                            _RE1 0049                              _RD3 0043                              _RE2 004A  
                            _PR2 0092                              u900 0E6D                              u901 0E6C  
                            u910 06E6                              u911 06E5                              u920 06EC  
                            u921 06EB                              u930 06F2                              u931 06F1  
                            u940 06F8                              u941 06F7                              u870 0EC0  
                            u950 0710                              u871 0EBC                              u951 070F  
                            u960 0716                              u961 0715                              u970 071C  
                            u971 071B                              u884 0EC3                              u980 0722  
                            u981 0721                              u990 073A                              u895 0ED3  
                            u991 0739                              _min 003D                              _sec 003E  
                            _isr 0F28                   clcd_putch@addr 0028                              fsr0 0004  
                 clcd_putch@data 0029                     ___awmod@sign 0077              ?_init_matrix_keypad 0070  
                           l2020 0DCC                             l2022 0DCD                             l2024 0DCE  
                           l2016 0DC7                             l2018 0DCB                             l1500 0EC3  
                           l2220 0FAE                             l1510 0EDB                             l1502 0EC6  
                           l2230 0FC4                             l2222 0FB3                             l1512 0EDC  
                           l1504 0EC7                             l1520 042C                             l1600 06FE  
                           l2240 0FDE                             l2232 0FC7                             l2224 0FB5  
                           l2216 0FA7                             l2160 0E01                             l1514 0EE1  
                           l1506 0ECC                             l1530 0452                             l1522 0433  
                           l1610 071C                             l1602 0702                             l2250 0FFB  
                           l2242 0FE4                             l2234 0FCE                             l2226 0FB9  
                           l2218 0FA8                             l2162 0E05                             l1516 0EE4  
                           l1508 0ECF                             l1540 0481                             l1532 0459  
                           l1524 0443                             l1620 0728                             l1604 0716  
                           l2244 0FEB                             l2236 0FD0                             l2228 0FBE  
                           l2260 0F00                             l2164 0E07                             l1534 0465  
                           l1526 0448                             l1518 0424                             l1542 0DD1  
                           l1550 0DDE                             l1630 0746                             l1622 072C  
                           l2238 0FD4                             l2246 0FF1                             l2270 0F1D  
                           l2262 0F02                             l2254 0EEE                             l2166 0E09  
                           l2158 0E00                             l1536 046A                             l1528 044F  
                           l1544 0DD6                             l1560 0DEC                             l1552 0DE6  
                           l1640 0752                             l1624 0740                             l1616 0722  
                           l2248 0FF6                             l1720 0F6D                             l2264 0F06  
                           l2256 0EF6                             l2272 0F23                             l2168 0E10  
                           l2600 01C8                             l1570 0E51                             l1538 047A  
                           l1546 0DD7                             l1554 0DE7                             l1562 0E12  
                           l1810 0487                             l1650 0770                             l1642 0756  
                           l1802 0E40                             l1730 0F8E                             l1722 0F70  
                           l2266 0F10                             l2258 0EF9                             l2610 01EF  
                           l2602 01CC                             l1572 0E5F                             l1548 0DD8  
                           l1556 0DEA                             l1820 049C                             l1660 0778  
                           l1644 076A                             l1636 074C                             l1580 06D4  
                           l1804 0E45                             l1732 0F94                             l1724 0F77  
                           l1716 0F65                             l2268 0F16                             l1564 0DEE  
                           l2700 0032                             l2620 020E                             l2612 01F5  
                           l2604 01D5                             l1574 0E61                             l1558 0DEB  
                           l1830 04BB                             l1822 04A5                             l1590 06F2  
                           l1582 06D8                             l1806 0E47                             l1734 0F95  
                           l1726 0F79                             l1718 0F67                             l1670 0EA6  
                           l1566 0DF5                             l2710 0052                             l2702 0034  
                           l2630 022B                             l2622 0210                             l2614 01FA  
                           l2606 01DE                             l1568 0E49                             l1576 04E7  
                           l1832 04C4                             l1824 04B7                             l1816 048B  
                           l1656 0776                             l1584 06EC                             l2560 0788  
                           l2552 077A                             l1736 0F9C                             l1728 0F7D  
                           l1672 0EAD                             l1664 0E93                             l2720 007B  
                           l2712 005C                             l2704 0037                             l2640 023D  
                           l2632 0230                             l2624 0216                             l2616 01FC  
                           l2608 01E7                             l2800 0354                             l1498 0EB9  
                           l1770 07EF                             l1834 04CC                             l1818 0494  
                           l1578 06CE                             l2570 079B                             l2562 078C  
                           l2554 077D                             l1738 0FA2                             l1674 0EB3  
                           l1666 0E95                             l2730 00ED                             l2722 00D4  
                           l2714 0066                             l2706 0040                             l2650 0272  
                           l2642 0241                             l2634 0231                             l2626 0222  
                           l2618 0202                             l2810 0365                             l2802 0359  
                           l1772 07F2                             l1764 07DF                             l1836 04D5  
                           l1596 06F8                             l1780 0E27                             l2580 07BC  
                           l2572 079E                             l2564 0791                             l2556 0781  
                           l1668 0E99                             l2740 0117                             l2732 0104  
                           l2724 00DC                             l2716 0070                             l2708 0049  
                           l2652 0276                             l2636 0234                             l2644 0246  
                           l2628 0225                             l2660 060E                             l2820 0377  
                           l2812 036A                             l2804 035C                             l1838 0E6E  
                           l1774 07F5                             l1766 07E9                             l1790 0E34  
                           l1782 0E2D                             l2590 07D5                             l2582 07C2  
                           l2574 07A5                             l2566 0793                             l2558 0786  
                           l2750 013B                             l2742 0120                             l2726 00E2  
                           l2734 0107                             l2718 0074                             l2654 027D  
                           l2646 024D                             l2638 0237                             l2670 0676  
                           l2662 062B                             l2822 037D                             l2830 0391  
                           l2814 036E                             l1776 07FA                             l1768 07EC  
                           l1792 0E39                             l1784 0E32                             l2592 07DA  
                           l2584 07C3                             l2576 07A7                             l2568 0795  
                           l2760 01B4                             l2752 0144                             l2744 0124  
                           l2736 010D                             l2728 00E7                             l2648 0260  
                           l2680 0699                             l2672 067F                             l2664 0635  
                           l2656 05EA                             l2840 03A9                             l2832 0397  
                           l2824 0382                             l2808 035F                             l1778 07FB  
                           l1794 0E3E                             l2586 07CA                             l2578 07AB  
                           l2762 01B9                             l2754 0148                             l2746 0129  
                           l2738 0111                             l2690 06B2                             l2682 069C  
                           l2674 0688                             l2666 0650                             l2658 05F3  
                           l2850 03C4                             l2842 03AF                             l2834 039A  
                           l2826 0385                             l2818 0371                             l2770 0307  
                           l2588 07D0                             l2756 014A                             l2748 0132  
                           l2596 01C1                             l2692 06C1                             l2684 069D  
                           l2676 068F                             l2668 066D                             l2860 03E8  
                           l2852 03CA                             l2844 03B5                             l2836 03A0  
                           l2828 038B                             l2780 031C                             l2772 030D  
                           l2764 02F6                             l2758 01AC                             l2598 01C6  
                           l2694 06C4                             l2686 06A6                             l2678 0694  
                           l2862 03F1                             l2854 03D3                             l2870 041D  
                           l2846 03BA                             l2838 03A3                             l2790 0343  
                           l2782 0325                             l2774 0312                             l2766 02F9  
                           l2696 06C9                             l2688 06AF                             l2864 03FA  
                           l2856 03DE                             l2848 03BE                             l2792 0348  
                           l2784 0333                             l2776 0317                             l2768 02FE  
                           l2698 002D                             l2858 03E3                             l2794 034B  
                           l2786 0338                             l2778 031B                             l2868 0400  
                           l2788 033D                             l2798 034E                             ?_isr 0070  
                           STR_1 0594                             STR_2 0571                             STR_3 0547  
                           STR_4 05C8                             STR_5 05C0                             STR_6 0564  
                           STR_7 05D0                             STR_8 0506                             STR_9 05A8  
                           u1000 0740                             u1001 073F                             u1010 0746  
                           u1011 0745                             u1020 074C                             u1100 0EB3  
                           u1021 074B                             u1101 0EB2                             u1030 0764  
                           u1031 0763                             u1040 076A                             u2000 0FF1  
                           u1200 0F6D                             u1041 0769                             u2001 0FF0  
                           u1201 0F6C                             u1050 0770                             u2010 0FF6  
                           u1051 076F                             u2011 0FF5                             u1060 0776  
                           u1220 0F7D                             u2020 0EF6                             u1061 0775  
                           u1221 0F7C                             u2021 0EF5                             u1070 0E99  
                           u1215 0F71                             u1071 0E98                             u1240 0F8E  
                           u2040 0F06                             u1241 0F8D                             u2041 0F05  
                           u1330 0E32                             u2050 0F10                             u1331 0E31  
                           u1235 0F7E                             u2051 0F0F                             u2035 0EFA  
                           u1340 0E39                             u1260 0FA2                             u1341 0E38  
                           u1261 0FA1                             u1245 0F8A                             u1085 0EA0  
                           u1350 0E3E                             u2070 0F23                             u3007 0483  
                           u1351 0E3D                             u1255 0F96                             u2071 0F22  
                           u2055 0F0C                             u1095 0EA7                             u1360 0E45  
                           u3017 0EC9                             u1361 0E44                             u2065 0F17  
                           u1370 04A5                             u3027 0EDE                             u1371 04A4  
                           u1380 04D5                             u2500 07BC                             u3037 0EE8  
                           u1381 04D4                             u2501 07BB                             u2520 07D0  
                           u2440 0781                             u2600 022B                             u2521 07CF  
                           u2505 07B8                             u2441 0780                             u2601 022A  
                           u2530 07D5                             u2450 078C                             u1810 0E05  
                           u2610 0230                             u2531 07D4                             u2515 07C4  
                           u2451 078B                             u1811 0E04                             u2611 022F  
                           u2460 079B                             u2700 00E2                             u1820 0E10  
                           u2620 023D                             u2540 01C6                             u2461 079A  
                           u2701 00E1                             u1821 0E0F                             u2621 023C  
                           u2541 01C5                             u2710 00E7                             u2630 024D  
                           u2550 01EF                             u2711 00E6                             u2631 024C  
                           u2551 01EE                             u2480 07AB                             u2720 00ED  
                           u2640 027D                             u2560 01F5                             u2800 0354  
                           u2481 07AA                             u2721 00EC                             u2641 027C  
                           u2561 01F4                             u2801 0353                             u1930 0FAE  
                           u2730 010D                             u2570 01FA                             u2650 068F  
                           u2810 0365                             u2475 079F                             u1931 0FAD  
                           u2731 010C                             u2571 01F9                             u2651 068E  
                           u2811 0364                             u1940 0FB9                             u2740 0117  
                           u2580 0202                             u2660 0694                             u2820 0377  
                           u1941 0FB8                             u2741 0116                             u2581 0201  
                           u2661 0693                             u2821 0376                             u1950 0FC4  
                           u2750 0120                             u2670 0032                             u2590 0216  
                           u2830 037D                             u2495 07AC                             u1951 0FC3  
                           u2751 011F                             u2671 0031                             u2591 0215  
                           u2831 037C                             u2760 01B3                             u2680 007B  
                           u2840 0382                             u2761 01B2                             u2681 007A  
                           u2841 0381                             u1970 0FD4                             u2690 00DC  
                           u2850 038B                             u2770 030D                             u1971 0FD3  
                           u2691 00DB                             u2851 038A                             u2907 032D  
                           u2771 030C                             _PEIE 005E                             u1980 0FDE  
                           u2860 0397                             u2780 0312                             u1981 0FDD  
                           u1965 0FC8                             u2917 06BA                             u2861 0396  
                           u2781 0311                             u2870 03A0                             u2790 0343  
                           u2927 0DF9                             u2871 039F                             u2791 0342  
                           u2880 03A9                             u2937 04DD                             u1985 0FDA  
                           u2881 03A8                             u2890 03AF                             u2947 0428  
                           u1995 0FE5                             u2891 03AE                             u2957 0437  
                           u2967 0445                             u2977 045B                             u2987 0467  
                           u2997 0475                             _main 02F6                             btemp 007E  
                           start 000C                ___bmul@multiplier 0074             ??_init_matrix_keypad 0072  
                 clcd_write@byte 0075                   clcd_write@mode 0072          __end_of_power_on_screen 04E4  
                          ??_isr 0070                            ?_main 0070                  __end_of___awdiv 07DF  
                          STR_10 0517                            STR_11 05D8                            STR_20 057D  
                          STR_12 0538                            STR_13 05B8                            STR_21 059F  
                          STR_22 05E6                            STR_14 05DF                            STR_15 0589  
                          STR_16 0528                            STR_17 0556                            STR_18 05B0  
                          STR_19 0517                  __end_of___awmod 1000                  ___awdiv@divisor 0072  
                __end_of___lwdiv 0FA7                            i1l230 0F5D                            i1l234 0F5E  
                __end_of___lwmod 0F28                     ?_init_config 0070                  ___awdiv@counter 0020  
                          _PORTD 0008                            _TRISB 0086                            _TRISD 0088  
                   ?_init_timer2 0070             __end_of_clear_screen 0DFF                            _nRBPU 040F  
             _read_matrix_keypad 0E26                            _count 0079                            pclath 000A  
            ?_read_matrix_keypad 0070                            status 0003                            wtemp0 007E  
                   ?_scan_keypad 0070                  __initialization 000F                     __end_of_main 0424  
           ??_read_matrix_keypad 0074                           ??_main 0031                 ___awdiv@dividend 0074  
                         i1l2140 0F3F                           i1l2150 0F52                           i1l2142 0F44  
                         i1l2134 0F28                           i1l2152 0F55                           i1l2144 0F47  
                         i1l2136 0F2E                           i1l2154 0F5A                           i1l2146 0F4C  
                         i1l2138 0F3D                           i1l2148 0F51                           i1l2156 0F5D  
                         u180_20 0F5A                           u180_21 0F59                           u175_20 0F2E  
                         u175_21 0F2D                           u176_20 0F3D                           u176_21 0F3C  
                         u177_20 0F44                           u177_21 0F43                           u178_20 0F4C  
                         u178_21 0F4B                           u179_20 0F51                           u179_21 0F50  
                         _TMR2IE 0461                           _TMR2IF 0061                           _TMR2ON 0092  
                         _TRISC1 0439                           _TRISC2 043A                           _TRISE1 0449  
                         _TRISE2 044A                           ___bmul 0DFF          _init_display_controller 0424  
                         ___wmul 0E93                        ??___awdiv 0076                 ?_power_on_screen 0070  
                      ??___awmod 0076                        ??___lwdiv 0076                        ??___lwmod 0079  
               ___awdiv@quotient 0022                  ___awmod@divisor 0024                  ___awmod@counter 0076  
                   __pdataCOMMON 007B                 __end_of_set_temp 01BE                 __end_of_set_time 02F6  
                         saved_w 007E          __end_of__initialization 0026              ___bmul@multiplicand 0072  
                 __pcstackCOMMON 0070                     __pidataBANK0 07FE      __end_of_display_menu_screen 0E93  
                     __pbssBANK0 0036        ??_init_display_controller 0076                       _clcd_print 0E49  
                     _clcd_putch 04E4                       _clcd_write 0EB8                       __pmaintext 02F6  
                   _clear_screen 0DEE                          ?___bmul 0072                          ?___wmul 0072  
                     __pintentry 0004                          _T2CKPS0 0090                          _T2CKPS1 0091  
                        _TOUTPS0 0093                          _TOUTPS1 0094                          _TOUTPS2 0095  
                        _TOUTPS3 0096                       __stringtab 0500                __end_of_heat_food 0DD1  
                      ?_set_temp 002A                        ?_set_time 002A                          ___awdiv 077A  
                        ___awmod 0FA7                          ___lwdiv 0F65                          ___lwmod 0EEE  
                        __ptext1 05EA                          __ptext2 01BE                          __ptext3 0DFF  
                        __ptext4 002A                          __ptext5 0DEE                          __ptext6 0E93  
                        __ptext7 0EEE                          __ptext8 0F65                          __ptext9 0FA7  
__end_of_init_display_controller 0487                __end_of_init_clcd 0DDE                 ___awmod@dividend 0026  
                  ?_time_display 0070                          main@key 0035             end_of_initialization 0026  
                    set_temp@key 002E                      set_time@key 002E                      ?_clcd_print 0076  
                    ?_clcd_putch 0028                      ?_clcd_write 0072                       _reset_flag 003C  
                     ??_set_temp 002B                       ??_set_time 002B                   main@start_mode 0034  
                 ??_time_display 002A                    clcd_print@str 0076               set_temp@reset_flag 002A  
                 __end_of___bmul 0E12                   __end_of___wmul 0EB8                    __pidataCOMMON 07FD  
            start_initialization 000F                     scan_keypad@i 0072           read_matrix_keypad@mode 0074  
         read_matrix_keypad@once 007B                      __end_of_isr 0F65                         ??___bmul 0073  
                       ??___wmul 0076                      __pdataBANK0 003F                    ??_init_config 0078  
                  ??_init_timer2 0072                      __pbssCOMMON 0079                        ___latbits 0002  
                  __pcstackBANK0 0020                    ??_scan_keypad 0072                 ___lwdiv@dividend 0074  
           power_on_screen@i_181 002F             __end_of_time_display 06CE                         ?___awdiv 0072  
                       ?___awmod 0024                        _heat_food 0DC7                         ?___lwdiv 0072  
                       ?___lwmod 0020                        __pstrings 0500               set_time@reset_flag 002A  
                  _pre_heat_time 003B                 ___lwdiv@quotient 0076                        _init_clcd 0DD1  
            __end_of_init_config 07FD                ??_power_on_screen 002A              __end_of_init_timer2 0E26  
       ?_init_display_controller 0070                interrupt_function 0004                   ___wmul@product 0076  
                   ??_clcd_print 0078                     ??_clcd_putch 0079       __end_of_init_matrix_keypad 0DEE  
                   ??_clcd_write 0073                set_temp@key_count 0038              __end_of_scan_keypad 077A  
                     ?_heat_food 0070                      __stringbase 0505                ___wmul@multiplier 0072  
             __end_of_clcd_print 0E6E               __end_of_clcd_putch 04F9               __end_of_clcd_write 0EEE  
                     ?_init_clcd 0070            read_matrix_keypad@key 0075                set_time@blink_pos 003A  
     __end_of_read_matrix_keypad 0E49               __end_of__stringtab 0506                set_time@key_count 0039  
                    _init_config 07DF                 _operational_flag 003F                      _init_timer2 0E12  
                ___lwdiv@divisor 0072                  ___lwdiv@counter 0078                         __ptext10 077A  
                       __ptext11 0E26                         __ptext20 0DC7                         __ptext12 06CE  
                       __ptext21 0E6E                         __ptext13 0487                         __ptext22 0E49  
                       __ptext14 04E4                         __ptext23 0EB8                         __ptext15 07DF  
                       __ptext24 0F28                         __ptext16 0E12                         __ptext17 0DDE  
                       __ptext18 0DD1                         __ptext19 0424                      _scan_keypad 06CE  
                  ?_clear_screen 0070                         _set_temp 002A                         _set_time 01BE  
                    ??_heat_food 0072              _display_menu_screen 0E6E                     set_temp@temp 0036  
                   set_temp@wait 002D                     set_time@wait 002D                      ??_init_clcd 0078  
                   _time_display 05EA                         intlevel1 0000                 ___lwmod@dividend 0022  
           ?_display_menu_screen 0070                        stringcode 0500                   ??_clear_screen 0076  
                _power_on_screen 0487                  ___lwmod@divisor 0020                  ___lwmod@counter 0024  
                       stringdir 0500                         stringtab 0500                 power_on_screen@i 002D  
          ??_display_menu_screen 0078  
